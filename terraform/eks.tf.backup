################################################################################
# EKS Module
################################################################################

module "eks" {
   source = "terraform-aws-modules/eks/aws"

  cluster_name    = "cq-provider-aws-eks-1"
  cluster_version = "1.20"

  vpc_id          = module.vpc.vpc_id
  subnets         = [module.vpc.private_subnets[0], module.vpc.private_subnets[1]]
  // fargate_subnets = [module.vpc.private_subnets[2]]

  cluster_endpoint_private_access = true
  cluster_endpoint_public_access  = false


  // worker_additional_security_group_ids = [aws_security_group.all_worker_mgmt.id]

  # Worker groups (using Launch Configurations)
  worker_groups = [
    {
      name                          = "worker-group-1"
      instance_type                 = "t3.micro"
      additional_userdata           = "echo foo bar"
      asg_desired_capacity          = 1
      additional_security_group_ids = [module.deny_all_sg.security_group_id]
    },
  ]

  # Worker groups (using Launch Templates)
  // worker_groups_launch_template = [
  //   {
  //     name                    = "spot-1"
  //     override_instance_types = ["t3.micro", "t3.micro", "t3.micro", "t3.micro"]
  //     spot_instance_pools     = 4
  //     asg_max_size            = 5
  //     asg_desired_capacity    = 5
  //     kubelet_extra_args      = "--node-labels=node.kubernetes.io/lifecycle=spot"
  //     public_ip               = true
  //   },
  // ]

  # Managed Node Groups
  // node_groups_defaults = {
  //   ami_type  = "AL2_x86_64"
  //   disk_size = 50
  // }

  // node_groups = {
  //   example = {
  //     desired_capacity = 1
  //     max_capacity     = 10
  //     min_capacity     = 1

  //     instance_types = ["t3.micro"]
  //     capacity_type  = "SPOT"
  //     k8s_labels = {
  //       Environment = "test"
  //       GithubRepo  = "terraform-aws-eks"
  //       GithubOrg   = "terraform-aws-modules"
  //     }
  //     additional_tags = {
  //       ExtraTag = "example"
  //     }
  //     taints = [
  //       {
  //         key    = "dedicated"
  //         value  = "gpuGroup"
  //         effect = "NO_SCHEDULE"
  //       }
  //     ]
  //     update_config = {
  //       max_unavailable_percentage = 50 # or set `max_unavailable`
  //     }
  //   }
  // }
}

################################################################################
# Kubernetes provider configuration
################################################################################

// data "aws_eks_cluster" "cluster" {
//   name = module.eks.cluster_id
// }

// data "aws_eks_cluster_auth" "cluster" {
//   name = module.eks.cluster_id
// }

// provider "kubernetes" {
//   host                   = data.aws_eks_cluster.cluster.endpoint
//   cluster_ca_certificate = base64decode(data.aws_eks_cluster.cluster.certificate_authority[0].data)
//   token                  = data.aws_eks_cluster_auth.cluster.token
// }

