# DONT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: terraform_plan
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'

jobs:
  terrafrom_plan:
    permissions:
        id-token: write
        contents: read    # This is required for actions/checkout@v2
    name: Terrafrom Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::707066037989:role/cq-provider-aws-github-action
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out tfplan.binary
      
      - name: Terraform show
        run: terraform show -json tfplan.binary > plan.json

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

        # Install the Infracost CLI, see https://github.com/infracost/actions/tree/master/setup
        # for other inputs such as version, and pricing-api-endpoint (for self-hosted users).
      - name: Setup Infracost
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      # Generate Infracost JSON output, the following docs might be useful:
      # Multi-project/workspaces: https://www.infracost.io/docs/features/config_file
      # Combine Infracost JSON files: https://www.infracost.io/docs/features/cli_commands/#combined-output-formats
      - name: Generate Infracost JSON
        run: infracost breakdown --path plan.json --format json --out-file /tmp/infracost.json
        # Env vars can be set using the usual GitHub Actions syntax
        # See the list of supported Infracost env vars here: https://www.infracost.io/docs/integrations/environment_variables/
        # env:
        #   MY_ENV: ${{ secrets.MY_ENV }}

      # See https://github.com/infracost/actions/tree/master/comment
      # for other inputs such as target-type.
      - name: Post Infracost comment
        uses: infracost/actions/comment@v1
        with:
          path: /tmp/infracost.json
          # Choose the commenting behavior, 'update' is a good default:
          behavior: update # Create a single comment and update it. The "quietest" option.
