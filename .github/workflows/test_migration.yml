# DONT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: test_migration

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:

  should_run:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.cache-migrations.cache-hit != 'true' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache Migrations
        id: cache-migrations
        uses: actions/cache@v2
        with:
          path: resources/provider/migrations
          key: ${{ runner.os }}-${{ hashFiles('resources/provider/migrations') }}

  test_migration:
    needs: should_run
    if: github.repository == 'cloudquery/cq-provider-aws' && needs.should_run.outputs.should_run == 'true'
    strategy:
      matrix:
        dbversion: [ "postgres:latest" ]
        go: [ "1.17" ]
        platform: [ ubuntu-latest ] # can not run in macOS and windowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Test migrations for Postgres
        run: |
          go test -v ./resources/provider/provider_test.go
        env:
          CQ_MIGRATION_TEST_DSN: postgres://postgres:pass@localhost:5432/postgres?sslmode=disable

      - name: Test migrations for Timescale
        run: |
          go test -v ./resources/provider/provider_test.go
        env:
          CQ_MIGRATION_TEST_DSN: tsdb://postgres:pass@localhost:5432/postgres?sslmode=disable
