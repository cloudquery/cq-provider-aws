
# DONT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: Policy Schema Validation Test

on:
  push:
    branches:
      - main
  pull_request:

env: 
  CGO_ENABLED: 0
  CQ_NO_TELEMETRY: 1

jobs:
  PolicyTest:
    strategy:
      matrix:
        dbversion: [ "postgres:10" ]
        go: [ "1.17" ]
        platform: [ ubuntu-latest ] # can not run in macOS and widnowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the policy directory
        uses: actions/checkout@v3

      - name: Download Cloudquery
        run: |
          curl -L https://github.com/cloudquery/cloudquery/releases/latest/download/cloudquery_Linux_x86_64 -o cloudquery
          chmod a+x cloudquery

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-

      # All bash commands are in a single step so that we can see provider log which runs in the backkground.
      - name: Run test
        run: |
          set -o xtrace

          go run ./main.go &

          # Wait until .cq_reattach exists
          bash -c "until test -f .cq_reattach; do echo 123; sleep 1; done"

          export CQ_REATTACH_PROVIDERS=.cq_reattach
          ./cloudquery provider build-schema aws --config ./test/policy_cq_config.hcl --enable-console-log
          ./cloudquery policy run aws --config ./test/policy_cq_config.hcl --enable-console-log --disable-fetch-check

        env:
          CQ_PROVIDER_DEBUG: 1
