# DONT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: test_unit

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env: 
  CGO_ENABLED: 0
  CQ_NO_TELEMETRY: 1

jobs:
  test_unit:
    strategy:
      matrix:
        dbversion: ["postgres:10"]
        go: ["1.17"]
        platform: [ubuntu-latest] # can not run in macOS and windowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '!(terraform/**/*|scripts/**/*)'
      - name: Set up Go 1.x
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        uses: actions/setup-go@v3
        with:
          go-version: ^${{ matrix.go }}
      - uses: actions/cache@v3
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-

      - name: Get dependencies
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: go get -v -t -d ./...

      - name: Build
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: go build -v .

      - name: Test
        if: steps.changes.outputs.src == 'true' || github.event_name != 'pull_request'
        run: go test ./...