# DONT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: test_integration

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request_target:
    branches:
      - main

jobs:
  is_organization_member:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.is_organization_member.outputs.result }}
    steps:
      - uses: yevgenypats/is-organization-member@e02c0c02d780c65e9981fe8777409e94cfdd2eda
        if: github.event_name == 'pull_request_target'
        id: is_organization_member
        with:
          organization: cloudquery
          username: ${{ github.event.pull_request.user.login }}
          token: ${{ secrets.GITHUB_TOKEN }}  
      - name: Skip if not member and event is pull_request_target
        if: github.event_name != 'pull_request_target' || steps.is_organization_member.outputs.result == 'false'
        run: |
            echo "user is not part of org. Please run 'go test -run=TestIntegration -tags=integration ./..'"
            echo "and paste the output in the PR"

  test_integration:
    needs: is_organization_member
    if: github.event_name != 'pull_request_target' || needs.is_organization_member.outputs.status == 'true'
    strategy:
      matrix:
        dbversion: [ "postgres:latest" ]
        go: [ "1.17" ]
        platform: [ ubuntu-latest ] # can not run in macOS and windowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16


      - name: Check out code into the Go module directory
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v2

      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Integration Test
        run: |
          go test -run=TestIntegration -tags=integration ./...

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{  github.event_name != 'pull_request_target' && failure() }}
        env:
          SLACK_CHANNEL: oss-tests
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'aws - E2E tests failed'
          SLACK_TITLE: aws - E2E tests failed
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
