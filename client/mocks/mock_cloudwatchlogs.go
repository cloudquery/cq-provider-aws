// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-aws/client (interfaces: CloudwatchLogsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	cloudwatchlogs "github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudwatchLogsClient is a mock of CloudwatchLogsClient interface.
type MockCloudwatchLogsClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudwatchLogsClientMockRecorder
}

// MockCloudwatchLogsClientMockRecorder is the mock recorder for MockCloudwatchLogsClient.
type MockCloudwatchLogsClientMockRecorder struct {
	mock *MockCloudwatchLogsClient
}

// NewMockCloudwatchLogsClient creates a new mock instance.
func NewMockCloudwatchLogsClient(ctrl *gomock.Controller) *MockCloudwatchLogsClient {
	mock := &MockCloudwatchLogsClient{ctrl: ctrl}
	mock.recorder = &MockCloudwatchLogsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudwatchLogsClient) EXPECT() *MockCloudwatchLogsClientMockRecorder {
	return m.recorder
}

// DescribeMetricFilters mocks base method.
func (m *MockCloudwatchLogsClient) DescribeMetricFilters(arg0 context.Context, arg1 *cloudwatchlogs.DescribeMetricFiltersInput, arg2 ...func(*cloudwatchlogs.Options)) (*cloudwatchlogs.DescribeMetricFiltersOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeMetricFilters", varargs...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeMetricFiltersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeMetricFilters indicates an expected call of DescribeMetricFilters.
func (mr *MockCloudwatchLogsClientMockRecorder) DescribeMetricFilters(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeMetricFilters", reflect.TypeOf((*MockCloudwatchLogsClient)(nil).DescribeMetricFilters), varargs...)
}
