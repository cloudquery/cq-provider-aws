-- Autogenerated by migration tool on 2022-05-10 15:09:26
-- CHANGEME: Verify or edit this file before proceeding

-- Resource: shield.attacks
CREATE TABLE IF NOT EXISTS "aws_shield_attacks" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"account_id" text,
	"attack_counters" jsonb,
	"id" text,
	"end_time" timestamp without time zone,
	"mitigations" text[],
	"resource_arn" text,
	"start_time" timestamp without time zone,
	CONSTRAINT aws_shield_attacks_pk PRIMARY KEY(cq_fetch_date,id),
	UNIQUE(cq_fetch_date,cq_id)
);
SELECT setup_tsdb_parent('aws_shield_attacks');
CREATE TABLE IF NOT EXISTS "aws_shield_attack_properties" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"attack_cq_id" uuid,
	"attack_layer" text,
	"attack_property_identifier" text,
	"top_contributors" jsonb,
	"total" bigint,
	"unit" text,
	CONSTRAINT aws_shield_attack_properties_pk PRIMARY KEY(cq_fetch_date,cq_id),
	UNIQUE(cq_fetch_date,cq_id)
);
CREATE INDEX ON aws_shield_attack_properties (cq_fetch_date, attack_cq_id);
SELECT setup_tsdb_child('aws_shield_attack_properties', 'attack_cq_id', 'aws_shield_attacks', 'cq_id');
CREATE TABLE IF NOT EXISTS "aws_shield_attack_sub_resources" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"attack_cq_id" uuid,
	"attack_vectors" jsonb,
	"counters" jsonb,
	"id" text,
	"type" text,
	CONSTRAINT aws_shield_attack_sub_resources_pk PRIMARY KEY(cq_fetch_date,cq_id),
	UNIQUE(cq_fetch_date,cq_id)
);
CREATE INDEX ON aws_shield_attack_sub_resources (cq_fetch_date, attack_cq_id);
SELECT setup_tsdb_child('aws_shield_attack_sub_resources', 'attack_cq_id', 'aws_shield_attacks', 'cq_id');

-- Resource: shield.protections
CREATE TABLE IF NOT EXISTS "aws_shield_protections" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"account_id" text,
	"region" text,
	"tags" jsonb,
	"application_automatic_response_configuration_status" text,
	"health_check_ids" text[],
	"id" text,
	"name" text,
	"arn" text,
	"resource_arn" text,
	CONSTRAINT aws_shield_protections_pk PRIMARY KEY(cq_fetch_date,arn),
	UNIQUE(cq_fetch_date,cq_id)
);
SELECT setup_tsdb_parent('aws_shield_protections');

-- Resource: shield.protections_groups
CREATE TABLE IF NOT EXISTS "aws_shield_protection_groups" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"account_id" text,
	"tags" jsonb,
	"aggregation" text,
	"members" text[],
	"pattern" text,
	"id" text,
	"arn" text,
	"resource_type" text,
	CONSTRAINT aws_shield_protection_groups_pk PRIMARY KEY(cq_fetch_date,arn),
	UNIQUE(cq_fetch_date,cq_id)
);
SELECT setup_tsdb_parent('aws_shield_protection_groups');

-- Resource: shield.subscriptions
CREATE TABLE IF NOT EXISTS "aws_shield_subscriptions" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"account_id" text,
	"protection_group_limits_max_protection_groups" integer,
	"protection_group_limits_arbitrary_pattern_limits_max_members" integer,
	"protected_resource_type_limits" jsonb,
	"auto_renew" text,
	"end_time" timestamp without time zone,
	"limits" jsonb,
	"proactive_engagement_status" text,
	"start_time" timestamp without time zone,
	"arn" text,
	"time_commitment_in_seconds" integer,
	CONSTRAINT aws_shield_subscriptions_pk PRIMARY KEY(cq_fetch_date,arn),
	UNIQUE(cq_fetch_date,cq_id)
);
SELECT setup_tsdb_parent('aws_shield_subscriptions');

-- Resource: xray.groups
CREATE TABLE IF NOT EXISTS "aws_xray_groups" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"account_id" text,
	"region" text,
	"tags" jsonb,
	"filter_expression" text,
	"arn" text,
	"group_name" text,
	"insights_enabled" boolean,
	"notifications_enabled" boolean,
	CONSTRAINT aws_xray_groups_pk PRIMARY KEY(cq_fetch_date,arn),
	UNIQUE(cq_fetch_date,cq_id)
);
SELECT setup_tsdb_parent('aws_xray_groups');

-- Resource: xray.sampling_rules
CREATE TABLE IF NOT EXISTS "aws_xray_sampling_rules" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cq_fetch_date" timestamp without time zone NOT NULL,
	"account_id" text,
	"region" text,
	"tags" jsonb,
	"created_at" timestamp without time zone,
	"modified_at" timestamp without time zone,
	"fixed_rate" float,
	"http_method" text,
	"host" text,
	"priority" integer,
	"reservoir_size" integer,
	"resource_arn" text,
	"service_name" text,
	"service_type" text,
	"url_path" text,
	"version" integer,
	"attributes" jsonb,
	"arn" text,
	"rule_name" text,
	CONSTRAINT aws_xray_sampling_rules_pk PRIMARY KEY(cq_fetch_date,arn),
	UNIQUE(cq_fetch_date,cq_id)
);
SELECT setup_tsdb_parent('aws_xray_sampling_rules');
