[
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-30T06:37:33",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EH344IQJMJA",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-20T21:44:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingRules",
						"xray:GetSamplingTargets",
						"xray:GetSamplingStatisticSummaries"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EH3EZIQ744I",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-30T06:37:57",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EH4MAXO3AJF",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-08T17:52:50",
		"document": {
			"Statement": [
				{
					"Action": "access-analyzer:*",
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "VisualEditor0"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EH6LPJEL72W",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-20T21:44:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DeleteNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EH7ILAV2RAJ",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-30T06:37:38",
		"document": {
			"Statement": [
				{
					"Action": "sns:Publish",
					"Effect": "Allow",
					"Resource": "arn:aws:sns:*:*:*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EHSGHTDADBT",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-01T13:14:27",
		"document": {
			"Statement": [
				{
					"Action": "*",
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "VisualEditor0"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EHSMFI7D32Q",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-08T13:17:40",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:GetObject",
						"*"
					],
					"Effect": "Allow",
					"Resource": [
						"*",
						"arn:aws:s3:::config-bucket-704956590351/*"
					],
					"Sid": "VisualEditor0"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EHSMFI7D32Q",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-20T21:44:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"logs:PutLogEvents",
						"logs:CreateLogStream",
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:us-east-1:704956590351:log-group:/aws/lambda/cloudquery:*:*",
						"arn:aws:logs:us-east-1:704956590351:log-group:/aws/lambda/cloudquery:*"
					],
					"Sid": ""
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EHWMPPZBNHD",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-09T08:20:37",
		"document": {
			"Statement": [
				{
					"Action": "sns:Publish",
					"Effect": "Allow",
					"Resource": "arn:aws:sns:*:*:*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPA2IIVP5EHZKYAFUZIV",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-04-20T17:05:56",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:CreateBucket",
						"s3:ListBucket",
						"s3:DeleteBucket",
						"s3:GetBucketLocation",
						"s3:GetObject",
						"s3:PutObject",
						"s3:DeleteObject",
						"s3:GetObjectVersion",
						"s3:GetBucketPolicy",
						"s3:PutBucketPolicy",
						"s3:DeleteBucketPolicy"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::dms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI3CCUQ4U5WNC5F6B6",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-12T18:50:11",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:CreateBucket",
						"s3:ListBucket",
						"s3:DeleteBucket",
						"s3:GetBucketLocation",
						"s3:GetObject",
						"s3:PutObject",
						"s3:DeleteObject",
						"s3:GetObjectVersion",
						"s3:GetBucketPolicy",
						"s3:PutBucketPolicy",
						"s3:GetBucketAcl",
						"s3:DeleteBucketPolicy"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::dms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI3CCUQ4U5WNC5F6B6",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-08T18:19:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:CreateBucket",
						"s3:ListBucket",
						"s3:DeleteBucket",
						"s3:GetBucketLocation",
						"s3:GetObject",
						"s3:PutObject",
						"s3:DeleteObject",
						"s3:GetObjectVersion",
						"s3:GetBucketPolicy",
						"s3:PutBucketPolicy",
						"s3:GetBucketAcl",
						"s3:PutBucketVersioning",
						"s3:GetBucketVersioning",
						"s3:PutLifecycleConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:DeleteBucketPolicy"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::dms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI3CCUQ4U5WNC5F6B6",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-04-04T18:05:29",
		"document": {
			"Statement": [
				{
					"Action": [
						"secretsmanager:*",
						"cloudformation:CreateChangeSet",
						"cloudformation:DescribeChangeSet",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStacks",
						"cloudformation:ExecuteChangeSet",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"kms:DescribeKey",
						"kms:ListAliases",
						"kms:ListKeys",
						"lambda:ListFunctions",
						"rds:DescribeDBInstances",
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"lambda:AddPermission",
						"lambda:CreateFunction",
						"lambda:GetFunction",
						"lambda:InvokeFunction",
						"lambda:UpdateFunctionConfiguration"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
				},
				{
					"Action": [
						"serverlessrepo:CreateCloudFormationChangeSet"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::awsserverlessrepo-changesets*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI3VG7CI5BIQZQ6G2E",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-05-03T20:02:35",
		"document": {
			"Statement": [
				{
					"Action": [
						"secretsmanager:*",
						"cloudformation:CreateChangeSet",
						"cloudformation:DescribeChangeSet",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStacks",
						"cloudformation:ExecuteChangeSet",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"kms:DescribeKey",
						"kms:ListAliases",
						"kms:ListKeys",
						"lambda:ListFunctions",
						"rds:DescribeDBClusters",
						"rds:DescribeDBInstances",
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"lambda:AddPermission",
						"lambda:CreateFunction",
						"lambda:GetFunction",
						"lambda:InvokeFunction",
						"lambda:UpdateFunctionConfiguration"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
				},
				{
					"Action": [
						"serverlessrepo:CreateCloudFormationChangeSet"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::awsserverlessrepo-changesets*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI3VG7CI5BIQZQ6G2E",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-24T18:01:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"secretsmanager:*",
						"cloudformation:CreateChangeSet",
						"cloudformation:DescribeChangeSet",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStacks",
						"cloudformation:ExecuteChangeSet",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"kms:DescribeKey",
						"kms:ListAliases",
						"kms:ListKeys",
						"lambda:ListFunctions",
						"rds:DescribeDBClusters",
						"rds:DescribeDBInstances",
						"redshift:DescribeClusters",
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"lambda:AddPermission",
						"lambda:CreateFunction",
						"lambda:GetFunction",
						"lambda:InvokeFunction",
						"lambda:UpdateFunctionConfiguration"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
				},
				{
					"Action": [
						"serverlessrepo:CreateCloudFormationChangeSet",
						"serverlessrepo:GetApplication"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:s3:::awsserverlessrepo-changesets*",
						"arn:aws:s3:::secrets-manager-rotation-apps-*/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI3VG7CI5BIQZQ6G2E",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-09-26T23:54:19",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeSpotInstanceRequests",
						"ec2:ModifyInstanceAttribute",
						"ec2:TerminateInstances",
						"ec2:CancelSpotInstanceRequests",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeVolumeStatus",
						"ec2:DescribeVolumes",
						"ec2:DetachVolume",
						"ec2:DeleteVolume"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI4YEZURRMKACW56EA",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-25T20:40:52",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeLaunchTemplates",
						"ec2:DescribeSpotInstanceRequests",
						"ec2:DeleteLaunchTemplate",
						"ec2:ModifyInstanceAttribute",
						"ec2:TerminateInstances",
						"ec2:CancelSpotInstanceRequests",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeVolumeStatus",
						"ec2:DescribeVolumes",
						"ec2:DetachVolume",
						"ec2:DeleteVolume"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI4YEZURRMKACW56EA",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-09-29T21:11:54",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeLaunchTemplates",
						"ec2:DescribeSpotInstanceRequests",
						"ec2:DeleteLaunchTemplate",
						"ec2:ModifyInstanceAttribute",
						"ec2:TerminateInstances",
						"ec2:CancelSpotInstanceRequests",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeVolumeStatus",
						"ec2:DescribeVolumes",
						"ec2:DetachVolume",
						"ec2:DeleteVolume",
						"ec2:DescribePlacementGroups",
						"ec2:DeletePlacementGroup"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAI4YEZURRMKACW56EA",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-05-27T21:06:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:UpdateAutoScalingGroup",
						"ec2:AttachVolume",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateRoute",
						"ec2:CreateSecurityGroup",
						"ec2:CreateTags",
						"ec2:CreateVolume",
						"ec2:DeleteRoute",
						"ec2:DeleteSecurityGroup",
						"ec2:DeleteVolume",
						"ec2:DescribeInstances",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVolumes",
						"ec2:DescribeVolumesModifications",
						"ec2:DescribeVpcs",
						"ec2:DetachVolume",
						"ec2:ModifyInstanceAttribute",
						"ec2:ModifyVolume",
						"ec2:RevokeSecurityGroupIngress",
						"elasticloadbalancing:AddTags",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:AttachLoadBalancerToSubnets",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateListener",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:CreateLoadBalancerListeners",
						"elasticloadbalancing:CreateLoadBalancerPolicy",
						"elasticloadbalancing:CreateTargetGroup",
						"elasticloadbalancing:DeleteListener",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancerListeners",
						"elasticloadbalancing:DeleteTargetGroup",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetGroupAttributes",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DetachLoadBalancerFromSubnets",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:ModifyLoadBalancerAttributes",
						"elasticloadbalancing:ModifyTargetGroup",
						"elasticloadbalancing:ModifyTargetGroupAttributes",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
						"elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIBTLDQMIC6UOIGFWA",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-03T20:56:30",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:UpdateAutoScalingGroup",
						"ec2:AttachVolume",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateRoute",
						"ec2:CreateSecurityGroup",
						"ec2:CreateTags",
						"ec2:CreateVolume",
						"ec2:DeleteRoute",
						"ec2:DeleteSecurityGroup",
						"ec2:DeleteVolume",
						"ec2:DescribeInstances",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVolumes",
						"ec2:DescribeVolumesModifications",
						"ec2:DescribeVpcs",
						"ec2:DetachVolume",
						"ec2:ModifyInstanceAttribute",
						"ec2:ModifyVolume",
						"ec2:RevokeSecurityGroupIngress",
						"elasticloadbalancing:AddTags",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:AttachLoadBalancerToSubnets",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateListener",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:CreateLoadBalancerListeners",
						"elasticloadbalancing:CreateLoadBalancerPolicy",
						"elasticloadbalancing:CreateTargetGroup",
						"elasticloadbalancing:DeleteListener",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancerListeners",
						"elasticloadbalancing:DeleteTargetGroup",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetGroupAttributes",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DetachLoadBalancerFromSubnets",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:ModifyLoadBalancerAttributes",
						"elasticloadbalancing:ModifyTargetGroup",
						"elasticloadbalancing:ModifyTargetGroupAttributes",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
						"elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIBTLDQMIC6UOIGFWA",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-22T22:04:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:UpdateAutoScalingGroup",
						"ec2:AttachVolume",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateRoute",
						"ec2:CreateSecurityGroup",
						"ec2:CreateTags",
						"ec2:CreateVolume",
						"ec2:DeleteRoute",
						"ec2:DeleteSecurityGroup",
						"ec2:DeleteVolume",
						"ec2:DescribeInstances",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVolumes",
						"ec2:DescribeVolumesModifications",
						"ec2:DescribeVpcs",
						"ec2:DescribeDhcpOptions",
						"ec2:DetachVolume",
						"ec2:ModifyInstanceAttribute",
						"ec2:ModifyVolume",
						"ec2:RevokeSecurityGroupIngress",
						"elasticloadbalancing:AddTags",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:AttachLoadBalancerToSubnets",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateListener",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:CreateLoadBalancerListeners",
						"elasticloadbalancing:CreateLoadBalancerPolicy",
						"elasticloadbalancing:CreateTargetGroup",
						"elasticloadbalancing:DeleteListener",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancerListeners",
						"elasticloadbalancing:DeleteTargetGroup",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetGroupAttributes",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DetachLoadBalancerFromSubnets",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:ModifyLoadBalancerAttributes",
						"elasticloadbalancing:ModifyTargetGroup",
						"elasticloadbalancing:ModifyTargetGroupAttributes",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
						"elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIBTLDQMIC6UOIGFWA",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-02-21T20:10:11",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:UpdateAutoScalingGroup",
						"ec2:AttachVolume",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateRoute",
						"ec2:CreateSecurityGroup",
						"ec2:CreateTags",
						"ec2:CreateVolume",
						"ec2:DeleteRoute",
						"ec2:DeleteSecurityGroup",
						"ec2:DeleteVolume",
						"ec2:DescribeInstances",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVolumes",
						"ec2:DescribeVolumesModifications",
						"ec2:DescribeVpcs",
						"ec2:DescribeDhcpOptions",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DetachVolume",
						"ec2:ModifyInstanceAttribute",
						"ec2:ModifyVolume",
						"ec2:RevokeSecurityGroupIngress",
						"elasticloadbalancing:AddTags",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:AttachLoadBalancerToSubnets",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateListener",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:CreateLoadBalancerListeners",
						"elasticloadbalancing:CreateLoadBalancerPolicy",
						"elasticloadbalancing:CreateTargetGroup",
						"elasticloadbalancing:DeleteListener",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancerListeners",
						"elasticloadbalancing:DeleteTargetGroup",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetGroupAttributes",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DetachLoadBalancerFromSubnets",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:ModifyLoadBalancerAttributes",
						"elasticloadbalancing:ModifyTargetGroup",
						"elasticloadbalancing:ModifyTargetGroupAttributes",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
						"elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIBTLDQMIC6UOIGFWA",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-06-15T20:57:05",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:UpdateAutoScalingGroup",
						"ec2:AttachVolume",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateRoute",
						"ec2:CreateSecurityGroup",
						"ec2:CreateTags",
						"ec2:CreateVolume",
						"ec2:DeleteRoute",
						"ec2:DeleteSecurityGroup",
						"ec2:DeleteVolume",
						"ec2:DescribeInstances",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVolumes",
						"ec2:DescribeVolumesModifications",
						"ec2:DescribeVpcs",
						"ec2:DescribeDhcpOptions",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DetachVolume",
						"ec2:ModifyInstanceAttribute",
						"ec2:ModifyVolume",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeAddresses",
						"ec2:DescribeInternetGateways",
						"elasticloadbalancing:AddTags",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:AttachLoadBalancerToSubnets",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateListener",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:CreateLoadBalancerListeners",
						"elasticloadbalancing:CreateLoadBalancerPolicy",
						"elasticloadbalancing:CreateTargetGroup",
						"elasticloadbalancing:DeleteListener",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancerListeners",
						"elasticloadbalancing:DeleteTargetGroup",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetGroupAttributes",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DetachLoadBalancerFromSubnets",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:ModifyLoadBalancerAttributes",
						"elasticloadbalancing:ModifyTargetGroup",
						"elasticloadbalancing:ModifyTargetGroupAttributes",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
						"elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIBTLDQMIC6UOIGFWA",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-01-08T23:10:55",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachClassicLinkVpc",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateTags",
						"ec2:DeleteTags",
						"ec2:Describe*",
						"ec2:DetachClassicLinkVpc",
						"ec2:ModifyInstanceAttribute",
						"ec2:RequestSpotInstances",
						"ec2:RunInstances",
						"ec2:TerminateInstances"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceManagement"
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com*"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceProfileManagement"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "spot.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2SpotManagement"
				},
				{
					"Action": [
						"elasticloadbalancing:Register*",
						"elasticloadbalancing:Deregister*",
						"elasticloadbalancing:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ELBManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "CWManagement"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SNSManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIC5D2V7MRWBMHGD7G",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-31T18:19:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachClassicLinkVpc",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateFleet",
						"ec2:CreateTags",
						"ec2:DeleteTags",
						"ec2:Describe*",
						"ec2:DetachClassicLinkVpc",
						"ec2:ModifyInstanceAttribute",
						"ec2:RequestSpotInstances",
						"ec2:RunInstances",
						"ec2:TerminateInstances"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceManagement"
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com*"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceProfileManagement"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "spot.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2SpotManagement"
				},
				{
					"Action": [
						"elasticloadbalancing:Register*",
						"elasticloadbalancing:Deregister*",
						"elasticloadbalancing:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ELBManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "CWManagement"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SNSManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIC5D2V7MRWBMHGD7G",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-30T00:01:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachClassicLinkVpc",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateFleet",
						"ec2:CreateTags",
						"ec2:DeleteTags",
						"ec2:Describe*",
						"ec2:DetachClassicLinkVpc",
						"ec2:ModifyInstanceAttribute",
						"ec2:RequestSpotInstances",
						"ec2:RunInstances",
						"ec2:TerminateInstances"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceManagement"
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com*"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceProfileManagement"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "spot.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2SpotManagement"
				},
				{
					"Action": [
						"elasticloadbalancing:Register*",
						"elasticloadbalancing:Deregister*",
						"elasticloadbalancing:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ELBManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "CWManagement"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SNSManagement"
				},
				{
					"Action": [
						"events:PutRule",
						"events:PutTargets",
						"events:RemoveTargets",
						"events:DeleteRule",
						"events:DescribeRule"
					],
					"Condition": {
						"StringEquals": {
							"events:ManagedBy": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EventBridgeRuleManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIC5D2V7MRWBMHGD7G",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-02-05T01:37:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachClassicLinkVpc",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateFleet",
						"ec2:CreateTags",
						"ec2:DeleteTags",
						"ec2:Describe*",
						"ec2:DetachClassicLinkVpc",
						"ec2:ModifyInstanceAttribute",
						"ec2:RequestSpotInstances",
						"ec2:RunInstances",
						"ec2:StartInstances",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceManagement"
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com*"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceProfileManagement"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "spot.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2SpotManagement"
				},
				{
					"Action": [
						"elasticloadbalancing:Register*",
						"elasticloadbalancing:Deregister*",
						"elasticloadbalancing:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ELBManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "CWManagement"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SNSManagement"
				},
				{
					"Action": [
						"events:PutRule",
						"events:PutTargets",
						"events:RemoveTargets",
						"events:DeleteRule",
						"events:DescribeRule"
					],
					"Condition": {
						"StringEquals": {
							"events:ManagedBy": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EventBridgeRuleManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIC5D2V7MRWBMHGD7G",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-03-29T22:33:25",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachClassicLinkVpc",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateFleet",
						"ec2:CreateTags",
						"ec2:DeleteTags",
						"ec2:Describe*",
						"ec2:DetachClassicLinkVpc",
						"ec2:ModifyInstanceAttribute",
						"ec2:RequestSpotInstances",
						"ec2:RunInstances",
						"ec2:StartInstances",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceManagement"
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com*"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceProfileManagement"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "spot.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2SpotManagement"
				},
				{
					"Action": [
						"elasticloadbalancing:Register*",
						"elasticloadbalancing:Deregister*",
						"elasticloadbalancing:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ELBManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:GetMetricData",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "CWManagement"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SNSManagement"
				},
				{
					"Action": [
						"events:PutRule",
						"events:PutTargets",
						"events:RemoveTargets",
						"events:DeleteRule",
						"events:DescribeRule"
					],
					"Condition": {
						"StringEquals": {
							"events:ManagedBy": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EventBridgeRuleManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIC5D2V7MRWBMHGD7G",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-10-29T22:06:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachClassicLinkVpc",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateFleet",
						"ec2:CreateTags",
						"ec2:DeleteTags",
						"ec2:Describe*",
						"ec2:DetachClassicLinkVpc",
						"ec2:ModifyInstanceAttribute",
						"ec2:RequestSpotInstances",
						"ec2:RunInstances",
						"ec2:StartInstances",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceManagement"
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com*"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2InstanceProfileManagement"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "spot.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EC2SpotManagement"
				},
				{
					"Action": [
						"elasticloadbalancing:Register*",
						"elasticloadbalancing:Deregister*",
						"elasticloadbalancing:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ELBManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:GetMetricData",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "CWManagement"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SNSManagement"
				},
				{
					"Action": [
						"events:PutRule",
						"events:PutTargets",
						"events:RemoveTargets",
						"events:DeleteRule",
						"events:DescribeRule"
					],
					"Condition": {
						"StringEquals": {
							"events:ManagedBy": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "EventBridgeRuleManagement"
				},
				{
					"Action": [
						"ssm:GetParameters"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "SystemsManagerParameterManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIC5D2V7MRWBMHGD7G",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-02-06T18:40:58",
		"document": {
			"Statement": [
				{
					"Action": "s3:*",
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIFIR6V6BVTRAHWINE",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-09-27T20:16:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:*",
						"s3-object-lambda:*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIFIR6V6BVTRAHWINE",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-02-06T18:40:17",
		"document": {
			"Statement": [
				{
					"Action": "ec2:Describe*",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "elasticloadbalancing:Describe*",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"cloudwatch:ListMetrics",
						"cloudwatch:GetMetricStatistics",
						"cloudwatch:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "autoscaling:Describe*",
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIGDT4SV4GSETWTBZK",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-11-28T20:12:59",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeImages"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIHZREZOWNSSA6FWQO",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-20T16:01:34",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeImages",
						"organizations:ListAccounts",
						"organizations:DescribeAccount"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIHZREZOWNSSA6FWQO",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-14T20:25:50",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeImages",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketTagging",
						"s3:GetAccountPublicAccessBlock",
						"s3:ListAllMyBuckets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIHZREZOWNSSA6FWQO",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-03T23:14:07",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:DescribeImages",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcPeeringConnections",
						"ec2:DescribeTransitGatewayAttachments",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketTagging",
						"s3:GetAccountPublicAccessBlock",
						"s3:ListAllMyBuckets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIHZREZOWNSSA6FWQO",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-09-13T23:46:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLikeIfExists": {
							"iam:PassedToService": "elasticbeanstalk.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AllowPassRoleToElasticBeanstalk"
				},
				{
					"Action": [
						"cloudformation:*"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stack/awseb-*",
						"arn:aws:cloudformation:*:*:stack/eb-*"
					],
					"Sid": "AllowCloudformationOperationsOnElasticBeanstalkStacks"
				},
				{
					"Action": [
						"logs:DeleteLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"
					],
					"Sid": "AllowDeleteCloudwatchLogGroups"
				},
				{
					"Action": [
						"s3:*"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:s3:::elasticbeanstalk-*",
						"arn:aws:s3:::elasticbeanstalk-*/*"
					],
					"Sid": "AllowS3OperationsOnElasticBeanstalkBuckets"
				},
				{
					"Action": [
						"autoscaling:AttachInstances",
						"autoscaling:CreateAutoScalingGroup",
						"autoscaling:CreateLaunchConfiguration",
						"autoscaling:DeleteLaunchConfiguration",
						"autoscaling:DeleteAutoScalingGroup",
						"autoscaling:DeleteScheduledAction",
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLoadBalancers",
						"autoscaling:DescribeNotificationConfigurations",
						"autoscaling:DescribeScalingActivities",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DetachInstances",
						"autoscaling:PutScheduledUpdateGroupAction",
						"autoscaling:ResumeProcesses",
						"autoscaling:SetDesiredCapacity",
						"autoscaling:SuspendProcesses",
						"autoscaling:TerminateInstanceInAutoScalingGroup",
						"autoscaling:UpdateAutoScalingGroup",
						"cloudwatch:PutMetricAlarm",
						"ec2:AssociateAddress",
						"ec2:AllocateAddress",
						"ec2:AuthorizeSecurityGroupEgress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeAddresses",
						"ec2:DescribeImages",
						"ec2:DescribeInstances",
						"ec2:DescribeKeyPairs",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DisassociateAddress",
						"ec2:ReleaseAddress",
						"ec2:RevokeSecurityGroupEgress",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:TerminateInstances",
						"ecs:CreateCluster",
						"ecs:DeleteCluster",
						"ecs:DescribeClusters",
						"ecs:RegisterTaskDefinition",
						"elasticbeanstalk:*",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:DeregisterTargets",
						"iam:ListRoles",
						"logs:CreateLogGroup",
						"logs:PutRetentionPolicy",
						"rds:DescribeDBInstances",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeDBEngineVersions",
						"sns:ListTopics",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptionsByTopic",
						"sqs:GetQueueAttributes",
						"sqs:GetQueueUrl",
						"codebuild:CreateProject",
						"codebuild:DeleteProject",
						"codebuild:BatchGetBuilds",
						"codebuild:StartBuild"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowOperations"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIID62QSI3OSIPQXTM",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-10-19T20:16:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLikeIfExists": {
							"iam:PassedToService": "elasticbeanstalk.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AllowPassRoleToElasticBeanstalk"
				},
				{
					"Action": [
						"cloudformation:*"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stack/awseb-*",
						"arn:aws:cloudformation:*:*:stack/eb-*"
					],
					"Sid": "AllowCloudformationOperationsOnElasticBeanstalkStacks"
				},
				{
					"Action": [
						"logs:DeleteLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"
					],
					"Sid": "AllowDeleteCloudwatchLogGroups"
				},
				{
					"Action": [
						"s3:*"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:s3:::elasticbeanstalk-*",
						"arn:aws:s3:::elasticbeanstalk-*/*"
					],
					"Sid": "AllowS3OperationsOnElasticBeanstalkBuckets"
				},
				{
					"Action": [
						"autoscaling:AttachInstances",
						"autoscaling:CreateAutoScalingGroup",
						"autoscaling:CreateLaunchConfiguration",
						"autoscaling:DeleteLaunchConfiguration",
						"autoscaling:DeleteAutoScalingGroup",
						"autoscaling:DeleteScheduledAction",
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLoadBalancers",
						"autoscaling:DescribeNotificationConfigurations",
						"autoscaling:DescribeScalingActivities",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DetachInstances",
						"autoscaling:PutScheduledUpdateGroupAction",
						"autoscaling:ResumeProcesses",
						"autoscaling:SetDesiredCapacity",
						"autoscaling:SuspendProcesses",
						"autoscaling:TerminateInstanceInAutoScalingGroup",
						"autoscaling:UpdateAutoScalingGroup",
						"autoscaling:PutNotificationConfiguration",
						"cloudwatch:PutMetricAlarm",
						"ec2:DescribeInstanceStatus",
						"ec2:AssociateAddress",
						"ec2:AllocateAddress",
						"ec2:AuthorizeSecurityGroupEgress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeAddresses",
						"ec2:DescribeImages",
						"ec2:DescribeInstances",
						"ec2:DescribeKeyPairs",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DisassociateAddress",
						"ec2:ReleaseAddress",
						"ec2:RevokeSecurityGroupEgress",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:TerminateInstances",
						"ecs:CreateCluster",
						"ecs:DeleteCluster",
						"ecs:DescribeClusters",
						"ecs:RegisterTaskDefinition",
						"elasticbeanstalk:*",
						"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
						"elasticloadbalancing:ConfigureHealthCheck",
						"elasticloadbalancing:CreateLoadBalancer",
						"elasticloadbalancing:DeleteLoadBalancer",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:DescribeTargetGroups",
						"elasticloadbalancing:RegisterTargets",
						"elasticloadbalancing:DeregisterTargets",
						"iam:ListRoles",
						"logs:CreateLogGroup",
						"logs:PutRetentionPolicy",
						"rds:DescribeDBInstances",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeDBEngineVersions",
						"sns:ListTopics",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptionsByTopic",
						"sqs:GetQueueAttributes",
						"sqs:GetQueueUrl",
						"codebuild:CreateProject",
						"codebuild:DeleteProject",
						"codebuild:BatchGetBuilds",
						"codebuild:StartBuild"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowOperations"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIID62QSI3OSIPQXTM",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-12-06T22:30:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stack/awseb-*",
						"arn:aws:cloudformation:*:*:stack/eb-*"
					],
					"Sid": "AllowCloudformationReadOperationsOnElasticBeanstalkStacks"
				},
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:DescribeNotificationConfigurations",
						"autoscaling:DescribeScalingActivities",
						"autoscaling:PutNotificationConfiguration",
						"ec2:DescribeInstanceStatus",
						"ec2:AssociateAddress",
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeSecurityGroups",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DescribeTargetGroups",
						"sqs:GetQueueAttributes",
						"sqs:GetQueueUrl",
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowOperations"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIID62QSI3OSIPQXTM",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-12-06T22:36:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stack/awseb-*",
						"arn:aws:cloudformation:*:*:stack/eb-*"
					],
					"Sid": "AllowCloudformationReadOperationsOnElasticBeanstalkStacks"
				},
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:DescribeNotificationConfigurations",
						"autoscaling:DescribeScalingActivities",
						"autoscaling:PutNotificationConfiguration",
						"ec2:DescribeInstanceStatus",
						"ec2:AssociateAddress",
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeSecurityGroups",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DescribeTargetGroups",
						"sqs:GetQueueAttributes",
						"sqs:GetQueueUrl",
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowOperations"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIID62QSI3OSIPQXTM",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-04-09T22:06:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stack/awseb-*",
						"arn:aws:cloudformation:*:*:stack/eb-*"
					],
					"Sid": "AllowCloudformationReadOperationsOnElasticBeanstalkStacks"
				},
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:DescribeNotificationConfigurations",
						"autoscaling:DescribeScalingActivities",
						"autoscaling:PutNotificationConfiguration",
						"ec2:DescribeInstanceStatus",
						"ec2:AssociateAddress",
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeSecurityGroups",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DescribeTargetGroups",
						"sqs:GetQueueAttributes",
						"sqs:GetQueueUrl",
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowOperations"
				},
				{
					"Action": [
						"logs:DescribeLogStreams",
						"logs:CreateLogStream",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*:log-stream:*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIID62QSI3OSIPQXTM",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-06T21:59:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stack/awseb-*",
						"arn:aws:cloudformation:*:*:stack/eb-*"
					],
					"Sid": "AllowCloudformationReadOperationsOnElasticBeanstalkStacks"
				},
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:DescribeNotificationConfigurations",
						"autoscaling:DescribeScalingActivities",
						"autoscaling:PutNotificationConfiguration",
						"ec2:DescribeInstanceStatus",
						"ec2:AssociateAddress",
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeSecurityGroups",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetHealth",
						"elasticloadbalancing:DescribeTargetGroups",
						"lambda:GetFunction",
						"sqs:GetQueueAttributes",
						"sqs:GetQueueUrl",
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowOperations"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:DescribeLogGroups",
						"logs:DescribeLogStreams",
						"logs:DeleteLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*",
					"Sid": "AllowOperationsOnHealthStreamingLogs"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIID62QSI3OSIPQXTM",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-12-05T18:36:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForPeregrine"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-12-06T19:34:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForPeregrine"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-12-06T20:41:34",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForPeregrine"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-29T17:17:16",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-02-05T18:20:34",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-15T20:45:42",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-08-30T19:55:59",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:GetRole",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-03-12T20:36:59",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:GetRole",
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-02T20:20:49",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:GetRole",
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				},
				{
					"Action": [
						"identitystore:DescribeUser",
						"identitystore:DescribeGroup",
						"identitystore:ListGroups",
						"identitystore:ListUsers"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeAndListOperationsOnIdentitySource"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-24T22:05:44",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:GetRole",
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v10"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-26T17:46:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:ListRolePolicies",
						"iam:PutRolePolicy",
						"iam:ListAttachedRolePolicies",
						"iam:UpdateRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					]
				},
				{
					"Action": [
						"iam:GetRole",
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "ListRolesInTheAccount"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForSSO"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:GetSAMLProvider",
						"iam:UpdateSAMLProvider",
						"iam:DeleteSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					]
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				},
				{
					"Action": [
						"identitystore:DescribeUser",
						"identitystore:DescribeGroup",
						"identitystore:ListGroups",
						"identitystore:ListUsers"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeAndListOperationsOnIdentitySource"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v11"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-21T20:27:38",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:PutRolePolicy",
						"iam:UpdateRole",
						"iam:UpdateRoleDescription"
					],
					"Condition": {
						"StringNotEquals": {
							"aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					],
					"Sid": "IAMRoleProvisioningActions"
				},
				{
					"Action": [
						"iam:GetRole",
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "IAMRoleReadActions"
				},
				{
					"Action": [
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:ListRolePolicies",
						"iam:ListAttachedRolePolicies"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					],
					"Sid": "IAMRoleCleanupActions"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "IAMSLRCleanupActions"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:UpdateSAMLProvider"
					],
					"Condition": {
						"StringNotEquals": {
							"aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					],
					"Sid": "IAMSAMLProviderProvisioningActions"
				},
				{
					"Action": [
						"iam:DeleteSAMLProvider",
						"iam:GetSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					],
					"Sid": "IAMSAMLProviderCleanupActions"
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				},
				{
					"Action": [
						"identitystore:DescribeUser",
						"identitystore:DescribeGroup",
						"identitystore:ListGroups",
						"identitystore:ListUsers"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeAndListOperationsOnIdentitySource"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v12"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-11-19T00:02:00",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:AttachRolePolicy",
						"iam:CreateRole",
						"iam:PutRolePolicy",
						"iam:UpdateRole",
						"iam:UpdateRoleDescription",
						"iam:UpdateAssumeRolePolicy"
					],
					"Condition": {
						"StringNotEquals": {
							"aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					],
					"Sid": "IAMRoleProvisioningActions"
				},
				{
					"Action": [
						"iam:GetRole",
						"iam:ListRoles"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "IAMRoleReadActions"
				},
				{
					"Action": [
						"iam:DeleteRole",
						"iam:DeleteRolePolicy",
						"iam:DetachRolePolicy",
						"iam:ListRolePolicies",
						"iam:ListAttachedRolePolicies"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
					],
					"Sid": "IAMRoleCleanupActions"
				},
				{
					"Action": [
						"iam:DeleteServiceLinkedRole",
						"iam:GetServiceLinkedRoleDeletionStatus",
						"iam:DeleteRole",
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
					],
					"Sid": "IAMSLRCleanupActions"
				},
				{
					"Action": [
						"iam:CreateSAMLProvider",
						"iam:UpdateSAMLProvider"
					],
					"Condition": {
						"StringNotEquals": {
							"aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					],
					"Sid": "IAMSAMLProviderProvisioningActions"
				},
				{
					"Action": [
						"iam:DeleteSAMLProvider",
						"iam:GetSAMLProvider"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:saml-provider/AWSSSO_*"
					],
					"Sid": "IAMSAMLProviderCleanupActions"
				},
				{
					"Action": [
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:ListAccounts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ds:UnauthorizeApplication"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowUnauthAppForDirectory"
				},
				{
					"Action": [
						"ds:DescribeDirectories",
						"ds:DescribeTrusts"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeForDirectory"
				},
				{
					"Action": [
						"identitystore:DescribeUser",
						"identitystore:DescribeGroup",
						"identitystore:ListGroups",
						"identitystore:ListUsers"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeAndListOperationsOnIdentitySource"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIJ52KSWOD4GI54XP2",
		"version_id": "v13"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-11-11T23:41:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"logs:CreateLogGroup",
						"logs:CreateLogStream",
						"logs:DescribeLogGroups",
						"logs:DescribeLogStreams",
						"logs:PutLogEvents",
						"logs:GetLogEvents",
						"logs:FilterLogEvents"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIK4GFO7HLKYN64ASK",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-02-06T18:39:48",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStacks",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"directconnect:Describe*",
						"dynamodb:GetItem",
						"dynamodb:BatchGetItem",
						"dynamodb:Query",
						"dynamodb:Scan",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:Describe*",
						"elasticache:Describe*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:Read*",
						"elastictranscoder:List*",
						"iam:List*",
						"iam:Get*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"route53:Get*",
						"route53:List*",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:List*",
						"storagegateway:Describe*",
						"tag:get*",
						"trustedadvisor:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-04-21T16:37:57",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStacks",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"directconnect:Describe*",
						"dynamodb:GetItem",
						"dynamodb:BatchGetItem",
						"dynamodb:Query",
						"dynamodb:Scan",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:Describe*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:Read*",
						"elastictranscoder:List*",
						"iam:List*",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"route53:Get*",
						"route53:List*",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:List*",
						"storagegateway:Describe*",
						"tag:get*",
						"trustedadvisor:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-06-15T22:15:54",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-10-15T17:55:45",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"firehose:Describe*",
						"firehose:List*",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-10-21T00:16:01",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"firehose:Describe*",
						"firehose:List*",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-11-02T23:13:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"firehose:Describe*",
						"firehose:List*",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-12-21T20:07:32",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-12-23T00:19:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-01-28T00:02:58",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-03-10T19:51:03",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v10"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-05-05T21:28:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetTemplate",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudTrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v11"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-05-12T21:16:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v12"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-05-25T00:04:24",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v13"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-06-02T18:28:57",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v14"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-06-20T21:12:28",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v15"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-08-23T17:10:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"apigateway:GET",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v16"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-09-06T17:05:05",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:GetAuthorizationToken",
						"ecr:GetRepositoryPolicy",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v17"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-10-31T22:35:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:GetAuthorizationToken",
						"ecr:GetRepositoryPolicy",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:GetManifest",
						"ecr:DescribeRepositories",
						"ecr:ListImages",
						"ecr:BatchGetImage",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v18"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-11-15T00:27:58",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v19"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-12-01T22:19:08",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v20"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-01-04T22:19:33",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Get*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGetBuilds",
						"codebuild:BatchGetProjects",
						"codebuild:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:DetectFaces",
						"rekognition:DetectLabels",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v21"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-01-26T21:25:39",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGetBuilds",
						"codebuild:BatchGetProjects",
						"codebuild:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:DetectFaces",
						"rekognition:DetectLabels",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v22"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-02-13T20:51:36",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGetBuilds",
						"codebuild:BatchGetProjects",
						"codebuild:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:DetectFaces",
						"rekognition:DetectLabels",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v23"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-03-20T18:53:58",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGetBuilds",
						"codebuild:BatchGetProjects",
						"codebuild:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeReservedCapacity",
						"dynamodb:DescribeReservedCapacityOfferings",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:DetectFaces",
						"rekognition:DetectLabels",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v24"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-04-07T18:20:21",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGetBuilds",
						"codebuild:BatchGetProjects",
						"codebuild:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeReservedCapacity",
						"dynamodb:DescribeReservedCapacityOfferings",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:DetectFaces",
						"rekognition:DetectLabels",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v25"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-05-17T23:03:45",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"autoscaling:Describe*",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:LookupEvents",
						"cloudtrail:ListTags",
						"cloudtrail:ListPublicKeys",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGetBuilds",
						"codebuild:BatchGetProjects",
						"codebuild:List*",
						"codecommit:BatchGetRepositories",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:Batch*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"datapipeline:DescribeObjects",
						"datapipeline:DescribePipelines",
						"datapipeline:EvaluateExpression",
						"datapipeline:GetAccountLimits",
						"datapipeline:GetPipelineDefinition",
						"datapipeline:ListPipelines",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGetItem",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeReservedCapacity",
						"dynamodb:DescribeReservedCapacityOfferings",
						"dynamodb:DescribeTable",
						"dynamodb:GetItem",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:GetConsoleOutput",
						"ec2:GetConsoleScreenshot",
						"ecr:BatchCheckLayerAvailability",
						"ecr:BatchGetImage",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:DescribeElasticsearchDomainConfig",
						"es:ListDomainNames",
						"es:ListTags",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:DescribeRule",
						"events:ListRuleNamesByTarget",
						"events:ListRules",
						"events:ListTargetsByRule",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"glacier:ListVaults",
						"glacier:DescribeVault",
						"glacier:GetDataRetrievalPolicy",
						"glacier:GetVaultAccessPolicy",
						"glacier:GetVaultLock",
						"glacier:GetVaultNotifications",
						"glacier:ListJobs",
						"glacier:ListMultipartUploads",
						"glacier:ListParts",
						"glacier:ListTagsForVault",
						"glacier:DescribeJob",
						"glacier:GetJobOutput",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:GenerateCredentialReport",
						"iam:GenerateServiceLastAccessedDetails",
						"iam:Get*",
						"iam:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:PreviewAgentsForResourceGroup",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:DescribeApplication",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:GetApplicationState",
						"kinesisanalytics:ListApplications",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:GetProject",
						"mobilehub:ListAvailableFeatures",
						"mobilehub:ListAvailableRegions",
						"mobilehub:ListProjects",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:DetectFaces",
						"rekognition:DetectLabels",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:ListTagsForResource",
						"redshift:Describe*",
						"redshift:ViewQueriesInConsole",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:GetDomainDetail",
						"route53domains:GetOperationDetail",
						"route53domains:ListDomains",
						"route53domains:ListOperations",
						"route53domains:ListTagsForDomain",
						"s3:Get*",
						"s3:List*",
						"sdb:GetAttributes",
						"sdb:List*",
						"sdb:Select*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:ListStateMachines",
						"states:ListActivities",
						"states:DescribeStateMachine",
						"states:ListExecutions",
						"states:DescribeExecution",
						"states:GetExecutionHistory",
						"states:DescribeActivity",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v26"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-06-14T22:09:09",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:LookupDeveloperIdentity",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:ValidatePipelineDefinition",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:TestEventPattern",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:SearchGameSessions",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:LocalizeText",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:DiscoverInputSchema",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:ValidateProject",
						"mobilehub:VerifyServiceRole",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:SearchFaces",
						"rekognition:SearchFacesByImage",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"route53:Get*",
						"route53:List*",
						"route53domains:CheckDomainAvailability",
						"route53domains:Get*",
						"route53domains:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:ScanProvisionedProducts",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:ReceiveMessage",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGetTraces",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v27"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-06-29T19:42:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"directconnect:Confirm*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v28"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-07-20T17:43:06",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"directconnect:Confirm*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v29"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-11-06T23:05:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v30"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-01-06T00:12:08",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v31"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-02-07T00:10:00",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v32"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-03-20T18:29:39",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v33"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-06-06T17:57:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:View*",
						"redshift:Get*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v34"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-06-27T22:59:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v35"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-07-25T18:46:28",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:Get*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v36"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-07-30T17:48:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"ses:Verify*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v37"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-13T19:15:42",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v38"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-28T22:22:56",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v39"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-09-04T21:08:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v40"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-09-12T22:05:40",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:DescribeClusters",
						"dax:DescribeDefaultParameters",
						"dax:DescribeEvents",
						"dax:DescribeParameterGroups",
						"dax:DescribeSubnetGroups",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v41"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-15T18:41:16",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v42"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-11-08T20:20:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:List*",
						"cognito-identity:Describe*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v43"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-01-10T22:37:38",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v44"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-02-05T18:19:32",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v45"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-03-04T23:53:09",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGateway",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v46"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-03-18T22:06:07",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdates",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:Get*",
						"lightsail:Is*",
						"lightsail:Download*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v47"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-04-02T19:07:24",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"apigateway:GET",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"application-autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"autoscaling:Describe*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdates",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v48"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-30T23:39:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdates",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v49"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-03T20:01:28",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdates",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v50"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-26T21:54:17",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdates",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:List*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v51"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-23T18:41:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdates",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v52"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-08-21T18:46:30",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v53"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-08-21T23:33:06",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"aesop:Get*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v54"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-09-20T18:28:06",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"aesop:Get*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetResources",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:GetTagKeys",
						"lightsail:GetTagValues",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v55"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-01T18:46:09",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"aesop:Get*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v56"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-22T01:10:29",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"aesop:Get*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:Get*",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v57"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-26T01:37:01",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v58"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-01-15T22:48:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Describe*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudformation:Preview*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:Get*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"inspector:LocalizeText",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"lightsail:List*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Describe*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"s3:Head*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*",
						"ram:Get*",
						"ram:List*",
						"eks:List*",
						"eks:Describe*",
						"config:select-resource-config",
						"mgh:GetHomeRegion",
						"elemental-appliances-software:List*",
						"elemental-appliances-software:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v59"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-01-22T23:52:54",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*",
						"ram:Get*",
						"ram:List*",
						"eks:List*",
						"eks:Describe*",
						"config:select-resource-config",
						"mgh:GetHomeRegion",
						"elemental-appliances-software:List*",
						"elemental-appliances-software:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v60"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-02-06T23:35:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource ",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:ListClusters",
						"eks:ListUpdates",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*",
						"ram:Get*",
						"ram:List*",
						"eks:List*",
						"eks:Describe*",
						"config:select-resource-config",
						"mgh:GetHomeRegion",
						"elemental-appliances-software:List*",
						"elemental-appliances-software:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v61"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-03-06T19:30:29",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource ",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v62"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-03-09T23:45:01",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v63"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-28T21:30:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v64"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-15T17:12:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v65"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-13T21:10:04",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v66"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-09-23T20:35:11",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v67"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-07T22:09:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"freertos:Describe*",
						"freertos:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v68"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-15T23:26:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"cassandra:*"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"application-autoscaling:DeleteScalingPolicy",
						"application-autoscaling:DeregisterScalableTarget",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingActivities",
						"application-autoscaling:DescribeScalingPolicies",
						"application-autoscaling:PutScalingPolicy",
						"application-autoscaling:RegisterScalableTarget",
						"application-autoscaling:PutScheduledAction",
						"application-autoscaling:DeleteScheduledAction",
						"application-autoscaling:DescribeScheduledActions"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "casssandra.application-autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v69"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-15T23:30:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"health:List*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v70"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-15T23:36:56",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codebuild:BatchGet*",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"directconnect:Describe*",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:DescribeCluster",
						"eks:DescribeUpdate",
						"eks:Describe*",
						"eks:ListClusters",
						"eks:ListUpdates",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetPartition",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:GetBlock",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:Get*",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v71"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-12-21T20:41:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"freertos:Describe*",
						"freertos:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicecatalog:Describe*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v72"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-01-14T20:07:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:Get*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"freertos:Describe*",
						"freertos:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeThesaurus",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v73"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-03-18T21:35:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetJob",
						"amplify:GetDomainAssociation",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"autoscaling:Describe*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"athena:List*",
						"athena:Batch*",
						"athena:Get*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:List*",
						"batch:Describe*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudformation:Estimate*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:List*",
						"codepipeline:Get*",
						"codestar:List*",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:Verify*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-sync:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:QueryRecords",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:List*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectResourceConfig",
						"connect:List*",
						"connect:Describe*",
						"connect:GetFederationToken",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datasync:Describe*",
						"datasync:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:List*",
						"devicefarm:Get*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:List*",
						"discovery:Get*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:List*",
						"es:Get*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fsx:Describe*",
						"fsx:List*",
						"freertos:Describe*",
						"freertos:List*",
						"gamelift:List*",
						"gamelift:Get*",
						"gamelift:Describe*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:List*",
						"glacier:Describe*",
						"glacier:Get*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlers",
						"glue:GetCrawlerMetrics",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobs",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetResourcePolicy",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:List*",
						"iotanalytics:Get*",
						"iotanalytics:SampleChannelData",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"kafka:Describe*",
						"kafka:List*",
						"kafka:Get*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeThesaurus",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:List*",
						"lambda:Get*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:Get*",
						"logs:FilterLogEvents",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:List*",
						"mediapackage:Describe*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"opsworks-cm:List*",
						"opsworks-cm:Describe*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:ListLedgers",
						"qldb:DescribeLedger",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:DescribeJournalS3Export",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"rds:Describe*",
						"rds:List*",
						"rds:Download*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:List*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServices",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"ses:Get*",
						"ses:List*",
						"ses:Describe*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Get*",
						"snowball:Describe*",
						"snowball:List*",
						"sns:Get*",
						"sns:List*",
						"sns:Check*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso:Get*",
						"sso:Describe*",
						"sso:List*",
						"sso:Search*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"states:List*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"transcribe:Get*",
						"transcribe:List*",
						"trustedadvisor:Describe*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"waf-regional:List*",
						"waf-regional:Get*",
						"workdocs:Describe*",
						"workdocs:Get*",
						"workdocs:CheckAlias",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v74"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-04-13T21:31:08",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperiments",
						"fis:ListExperimentTemplates",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemas",
						"glue:ListSchemaVersions",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeThesaurus",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v75"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-04-21T16:03:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperiments",
						"fis:ListExperimentTemplates",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemas",
						"glue:ListSchemaVersions",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeThesaurus",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v76"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-05-21T17:31:19",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:GetGeneratedPolicy",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListPolicyGenerations",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"auditmanager:GetAccountStatus",
						"auditmanager:GetAssessment",
						"auditmanager:GetAssessmentFramework",
						"auditmanager:GetAssessmentReportUrl",
						"auditmanager:GetChangeLogs",
						"auditmanager:GetControl",
						"auditmanager:GetDelegations",
						"auditmanager:GetEvidence",
						"auditmanager:GetEvidenceByEvidenceFolder",
						"auditmanager:GetEvidenceFolder",
						"auditmanager:GetEvidenceFoldersByAssessment",
						"auditmanager:GetEvidenceFoldersByAssessmentControl",
						"auditmanager:GetOrganizationAdminAccount",
						"auditmanager:GetServicesInScope",
						"auditmanager:GetSettings",
						"auditmanager:ListAssessmentFrameworks",
						"auditmanager:ListAssessmentReports",
						"auditmanager:ListAssessments",
						"auditmanager:ListControls",
						"auditmanager:ListKeywordsForDataSource",
						"auditmanager:ListNotifications",
						"auditmanager:ListTagsForResource",
						"auditmanager:ValidateAssessmentReportIntegrity",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListPackages",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-notifications:ListTargets",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr-public:BatchCheckLayerAvailability",
						"ecr-public:DescribeImageTags",
						"ecr-public:DescribeImages",
						"ecr-public:DescribeRegistries",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetAuthorizationToken",
						"ecr-public:GetRegistryCatalogData",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:GetRepositoryPolicy",
						"ecr-public:ListTagsForResource",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperimentTemplates",
						"fis:ListExperiments",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:RequestUploadCredentials",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTables",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemaVersions",
						"glue:ListSchemas",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"groundstation:DescribeContact",
						"groundstation:GetConfig",
						"groundstation:GetDataflowEndpointGroup",
						"groundstation:GetMinuteUsage",
						"groundstation:GetMissionProfile",
						"groundstation:GetSatellite",
						"groundstation:ListConfigs",
						"groundstation:ListContacts",
						"groundstation:ListDataflowEndpointGroups",
						"groundstation:ListGroundStations",
						"groundstation:ListMissionProfiles",
						"groundstation:ListSatellites",
						"groundstation:ListTagsForResource",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotevents:DescribeAlarm",
						"iotevents:DescribeAlarmModel",
						"iotevents:DescribeDetector",
						"iotevents:DescribeDetectorModel",
						"iotevents:DescribeInput",
						"iotevents:DescribeLoggingOptions",
						"iotevents:ListAlarmModelVersions",
						"iotevents:ListAlarmModels",
						"iotevents:ListAlarms",
						"iotevents:ListDetectorModelVersions",
						"iotevents:ListDetectorModels",
						"iotevents:ListDetectors",
						"iotevents:ListInputs",
						"iotevents:ListTagsForResource",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"iotwireless:ListWirelessGateways",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:GetRecordingConfiguration",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListRecordingConfigurations",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeThesaurus",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListDataSources",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDisks",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetInstances",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetLoadBalancers",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"lookoutvision:DescribeDataset",
						"lookoutvision:DescribeModel",
						"lookoutvision:DescribeProject",
						"lookoutvision:ListDatasetEntries",
						"lookoutvision:ListModels",
						"lookoutvision:ListProjects",
						"lookoutvision:ListTagsForResource",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mediastore:DescribeContainer",
						"mediastore:DescribeObject",
						"mediastore:GetContainerPolicy",
						"mediastore:GetCorsPolicy",
						"mediastore:GetLifecyclePolicy",
						"mediastore:GetMetricPolicy",
						"mediastore:GetObject",
						"mediastore:ListContainers",
						"mediastore:ListItems",
						"mediastore:ListTagsForResource",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mgn:DescribeJobLogItems",
						"mgn:DescribeJobs",
						"mgn:DescribeReplicationConfigurationTemplates",
						"mgn:DescribeSourceServers",
						"mgn:GetLaunchConfiguration",
						"mgn:GetReplicationConfiguration",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm-contacts:DescribeEngagement",
						"ssm-contacts:DescribePage",
						"ssm-contacts:GetContact",
						"ssm-contacts:GetContactChannel",
						"ssm-contacts:ListContactChannels",
						"ssm-contacts:ListContacts",
						"ssm-contacts:ListEngagements",
						"ssm-contacts:ListPageReceipts",
						"ssm-contacts:ListPagesByContact",
						"ssm-contacts:ListPagesByEngagement",
						"ssm-incidents:GetIncidentRecord",
						"ssm-incidents:GetReplicationSet",
						"ssm-incidents:GetResourcePolicies",
						"ssm-incidents:GetResponsePlan",
						"ssm-incidents:GetTimelineEvent",
						"ssm-incidents:ListIncidentRecords",
						"ssm-incidents:ListRelatedItems",
						"ssm-incidents:ListReplicationSets",
						"ssm-incidents:ListResponsePlans",
						"ssm-incidents:ListTagsForResource",
						"ssm-incidents:ListTimelineEvents",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v77"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-05-25T23:10:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:GetGeneratedPolicy",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListPolicyGenerations",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"auditmanager:GetAccountStatus",
						"auditmanager:GetAssessment",
						"auditmanager:GetAssessmentFramework",
						"auditmanager:GetAssessmentReportUrl",
						"auditmanager:GetChangeLogs",
						"auditmanager:GetControl",
						"auditmanager:GetDelegations",
						"auditmanager:GetEvidence",
						"auditmanager:GetEvidenceByEvidenceFolder",
						"auditmanager:GetEvidenceFolder",
						"auditmanager:GetEvidenceFoldersByAssessment",
						"auditmanager:GetEvidenceFoldersByAssessmentControl",
						"auditmanager:GetOrganizationAdminAccount",
						"auditmanager:GetServicesInScope",
						"auditmanager:GetSettings",
						"auditmanager:ListAssessmentFrameworks",
						"auditmanager:ListAssessmentReports",
						"auditmanager:ListAssessments",
						"auditmanager:ListControls",
						"auditmanager:ListKeywordsForDataSource",
						"auditmanager:ListNotifications",
						"auditmanager:ListTagsForResource",
						"auditmanager:ValidateAssessmentReportIntegrity",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListPackages",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-notifications:ListTargets",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr-public:BatchCheckLayerAvailability",
						"ecr-public:DescribeImageTags",
						"ecr-public:DescribeImages",
						"ecr-public:DescribeRegistries",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetAuthorizationToken",
						"ecr-public:GetRegistryCatalogData",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:GetRepositoryPolicy",
						"ecr-public:ListTagsForResource",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperimentTemplates",
						"fis:ListExperiments",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetMapping",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTables",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemaVersions",
						"glue:ListSchemas",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"groundstation:DescribeContact",
						"groundstation:GetConfig",
						"groundstation:GetDataflowEndpointGroup",
						"groundstation:GetMinuteUsage",
						"groundstation:GetMissionProfile",
						"groundstation:GetSatellite",
						"groundstation:ListConfigs",
						"groundstation:ListContacts",
						"groundstation:ListDataflowEndpointGroups",
						"groundstation:ListGroundStations",
						"groundstation:ListMissionProfiles",
						"groundstation:ListSatellites",
						"groundstation:ListTagsForResource",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotevents:DescribeAlarm",
						"iotevents:DescribeAlarmModel",
						"iotevents:DescribeDetector",
						"iotevents:DescribeDetectorModel",
						"iotevents:DescribeInput",
						"iotevents:DescribeLoggingOptions",
						"iotevents:ListAlarmModelVersions",
						"iotevents:ListAlarmModels",
						"iotevents:ListAlarms",
						"iotevents:ListDetectorModelVersions",
						"iotevents:ListDetectorModels",
						"iotevents:ListDetectors",
						"iotevents:ListInputs",
						"iotevents:ListTagsForResource",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"iotwireless:ListWirelessGateways",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:GetRecordingConfiguration",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListRecordingConfigurations",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeThesaurus",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListDataSources",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:Get*",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDisks",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetInstances",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetLoadBalancers",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"lookoutvision:DescribeDataset",
						"lookoutvision:DescribeModel",
						"lookoutvision:DescribeProject",
						"lookoutvision:ListDatasetEntries",
						"lookoutvision:ListModels",
						"lookoutvision:ListProjects",
						"lookoutvision:ListTagsForResource",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mediastore:DescribeContainer",
						"mediastore:DescribeObject",
						"mediastore:GetContainerPolicy",
						"mediastore:GetCorsPolicy",
						"mediastore:GetLifecyclePolicy",
						"mediastore:GetMetricPolicy",
						"mediastore:GetObject",
						"mediastore:ListContainers",
						"mediastore:ListItems",
						"mediastore:ListTagsForResource",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mgn:DescribeJobLogItems",
						"mgn:DescribeJobs",
						"mgn:DescribeReplicationConfigurationTemplates",
						"mgn:DescribeSourceServers",
						"mgn:GetLaunchConfiguration",
						"mgn:GetReplicationConfiguration",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm-contacts:DescribeEngagement",
						"ssm-contacts:DescribePage",
						"ssm-contacts:GetContact",
						"ssm-contacts:GetContactChannel",
						"ssm-contacts:ListContactChannels",
						"ssm-contacts:ListContacts",
						"ssm-contacts:ListEngagements",
						"ssm-contacts:ListPageReceipts",
						"ssm-contacts:ListPagesByContact",
						"ssm-contacts:ListPagesByEngagement",
						"ssm-incidents:GetIncidentRecord",
						"ssm-incidents:GetReplicationSet",
						"ssm-incidents:GetResourcePolicies",
						"ssm-incidents:GetResponsePlan",
						"ssm-incidents:GetTimelineEvent",
						"ssm-incidents:ListIncidentRecords",
						"ssm-incidents:ListRelatedItems",
						"ssm-incidents:ListReplicationSets",
						"ssm-incidents:ListResponsePlans",
						"ssm-incidents:ListTagsForResource",
						"ssm-incidents:ListTimelineEvents",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v78"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-09-08T19:43:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:GetGeneratedPolicy",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListPolicyGenerations",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"airflow:ListEnvironments",
						"airflow:ListTagsForResource",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"appconfig:GetApplication",
						"appconfig:GetConfiguration",
						"appconfig:GetConfigurationProfile",
						"appconfig:GetDeployment",
						"appconfig:GetDeploymentStrategy",
						"appconfig:GetEnvironment",
						"appconfig:GetHostedConfigurationVersion",
						"appconfig:ListApplications",
						"appconfig:ListConfigurationProfiles",
						"appconfig:ListDeployments",
						"appconfig:ListDeploymentStrategies",
						"appconfig:ListEnvironments",
						"appconfig:ListHostedConfigurationVersions",
						"appconfig:ListTagsForResource",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"auditmanager:GetAccountStatus",
						"auditmanager:GetAssessment",
						"auditmanager:GetAssessmentFramework",
						"auditmanager:GetAssessmentReportUrl",
						"auditmanager:GetChangeLogs",
						"auditmanager:GetControl",
						"auditmanager:GetDelegations",
						"auditmanager:GetEvidence",
						"auditmanager:GetEvidenceByEvidenceFolder",
						"auditmanager:GetEvidenceFolder",
						"auditmanager:GetEvidenceFoldersByAssessment",
						"auditmanager:GetEvidenceFoldersByAssessmentControl",
						"auditmanager:GetOrganizationAdminAccount",
						"auditmanager:GetServicesInScope",
						"auditmanager:GetSettings",
						"auditmanager:ListAssessmentFrameworks",
						"auditmanager:ListAssessmentReports",
						"auditmanager:ListAssessments",
						"auditmanager:ListControls",
						"auditmanager:ListKeywordsForDataSource",
						"auditmanager:ListNotifications",
						"auditmanager:ListTagsForResource",
						"auditmanager:ValidateAssessmentReportIntegrity",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"ce:DescribeCostCategoryDefinition",
						"ce:DescribeNotificationSubscription",
						"ce:DescribeReport",
						"ce:GetAnomalies",
						"ce:GetAnomalyMonitors",
						"ce:GetAnomalySubscriptions",
						"ce:GetCostAndUsage",
						"ce:GetCostAndUsageWithResources",
						"ce:GetCostCategories",
						"ce:GetCostForecast",
						"ce:GetDimensionValues",
						"ce:GetPreferences",
						"ce:GetReservationCoverage",
						"ce:GetReservationPurchaseRecommendation",
						"ce:GetReservationUtilization",
						"ce:GetRightsizingRecommendation",
						"ce:GetSavingsPlansCoverage",
						"ce:GetSavingsPlansPurchaseRecommendation",
						"ce:GetSavingsPlansUtilization",
						"ce:GetSavingsPlansUtilizationDetails",
						"ce:GetTags",
						"ce:GetUsageForecast",
						"ce:ListCostCategoryDefinitions",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-connections:GetConnection",
						"codestar-connections:GetHost",
						"codestar-connections:ListConnections",
						"codestar-connections:ListHosts",
						"codestar-connections:ListTagsForResource",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"detective:SearchGraph",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeFeedback",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetCostEstimation",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"devops-guru:StartCostEstimation",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr-public:BatchCheckLayerAvailability",
						"ecr-public:DescribeImages",
						"ecr-public:DescribeImageTags",
						"ecr-public:DescribeRegistries",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetAuthorizationToken",
						"ecr-public:GetRegistryCatalogData",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:GetRepositoryPolicy",
						"ecr-public:ListTagsForResource",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperiments",
						"fis:ListExperimentTemplates",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemas",
						"glue:ListSchemaVersions",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"groundstation:DescribeContact",
						"groundstation:GetConfig",
						"groundstation:GetDataflowEndpointGroup",
						"groundstation:GetMinuteUsage",
						"groundstation:GetMissionProfile",
						"groundstation:GetSatellite",
						"groundstation:ListConfigs",
						"groundstation:ListContacts",
						"groundstation:ListDataflowEndpointGroups",
						"groundstation:ListGroundStations",
						"groundstation:ListMissionProfiles",
						"groundstation:ListSatellites",
						"groundstation:ListTagsForResource",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iot1click:DescribeDevice",
						"iot1click:DescribePlacement",
						"iot1click:DescribeProject",
						"iot1click:GetDeviceMethods",
						"iot1click:GetDevicesInPlacement",
						"iot1click:ListDeviceEvents",
						"iot1click:ListDevices",
						"iot1click:ListPlacements",
						"iot1click:ListProjects",
						"iot1click:ListTagsForResource",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotevents:DescribeAlarm",
						"iotevents:DescribeAlarmModel",
						"iotevents:DescribeDetector",
						"iotevents:DescribeDetectorModel",
						"iotevents:DescribeInput",
						"iotevents:DescribeLoggingOptions",
						"iotevents:ListAlarmModels",
						"iotevents:ListAlarmModelVersions",
						"iotevents:ListAlarms",
						"iotevents:ListDetectorModels",
						"iotevents:ListDetectorModelVersions",
						"iotevents:ListDetectors",
						"iotevents:ListInputs",
						"iotevents:ListTagsForResource",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:GetRecordingConfiguration",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListRecordingConfigurations",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeQuerySuggestionsBlockList",
						"kendra:DescribeQuerySuggestionsConfig",
						"kendra:DescribeThesaurus",
						"kendra:GetQuerySuggestions",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListQuerySuggestionsBlockLists",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:DescribeBot",
						"lex:DescribeBotAlias",
						"lex:DescribeBotChannel",
						"lex:DescribeBotLocale",
						"lex:DescribeBotVersion",
						"lex:DescribeExport",
						"lex:DescribeImport",
						"lex:DescribeIntent",
						"lex:DescribeResourcePolicy",
						"lex:DescribeSlot",
						"lex:DescribeSlotType",
						"lex:Get*",
						"lex:ListBotAliases",
						"lex:ListBotChannels",
						"lex:ListBotLocales",
						"lex:ListBots",
						"lex:ListBotVersions",
						"lex:ListBuiltInIntents",
						"lex:ListBuiltInSlotTypes",
						"lex:ListExports",
						"lex:ListImports",
						"lex:ListIntents",
						"lex:ListSlots",
						"lex:ListSlotTypes",
						"lex:ListTagsForResource",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBucketAccessKeys",
						"lightsail:GetBucketBundles",
						"lightsail:GetBucketMetricData",
						"lightsail:GetBuckets",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"lookoutvision:DescribeDataset",
						"lookoutvision:DescribeModel",
						"lookoutvision:DescribeProject",
						"lookoutvision:ListDatasetEntries",
						"lookoutvision:ListModels",
						"lookoutvision:ListProjects",
						"lookoutvision:ListTagsForResource",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"macie:ListMemberAccounts",
						"macie:ListS3Resources",
						"macie2:BatchGetCustomDataIdentifiers",
						"macie2:DescribeBuckets",
						"macie2:DescribeClassificationJob",
						"macie2:DescribeOrganizationConfiguration",
						"macie2:GetAdministratorAccount",
						"macie2:GetBucketStatistics",
						"macie2:GetClassificationExportConfiguration",
						"macie2:GetCustomDataIdentifier",
						"macie2:GetFindings",
						"macie2:GetFindingsFilter",
						"macie2:GetFindingsPublicationConfiguration",
						"macie2:GetFindingStatistics",
						"macie2:GetInvitationsCount",
						"macie2:GetMacieSession",
						"macie2:GetMember",
						"macie2:GetUsageStatistics",
						"macie2:GetUsageTotals",
						"macie2:ListClassificationJobs",
						"macie2:ListCustomDataIdentifiers",
						"macie2:ListFindings",
						"macie2:ListFindingsFilters",
						"macie2:ListInvitations",
						"macie2:ListMembers",
						"macie2:ListOrganizationAdminAccounts",
						"macie2:ListTagsForResource",
						"macie2:SearchResources",
						"mediaconnect:DescribeFlow",
						"mediaconnect:DescribeOffering",
						"mediaconnect:DescribeReservation",
						"mediaconnect:ListFlows",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mediastore:DescribeContainer",
						"mediastore:DescribeObject",
						"mediastore:GetContainerPolicy",
						"mediastore:GetCorsPolicy",
						"mediastore:GetLifecyclePolicy",
						"mediastore:GetMetricPolicy",
						"mediastore:GetObject",
						"mediastore:ListContainers",
						"mediastore:ListItems",
						"mediastore:ListTagsForResource",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mgn:DescribeJobLogItems",
						"mgn:DescribeJobs",
						"mgn:DescribeReplicationConfigurationTemplates",
						"mgn:DescribeSourceServers",
						"mgn:GetLaunchConfiguration",
						"mgn:GetReplicationConfiguration",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"monitron:GetProject",
						"monitron:GetProjectAdminUser",
						"monitron:ListProjects",
						"monitron:ListTagsForResource",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetDimensionKeyDetails",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"proton:GetEnvironment",
						"proton:GetEnvironmentTemplate",
						"proton:GetEnvironmentTemplateVersion",
						"proton:GetService",
						"proton:GetServiceInstance",
						"proton:GetServiceTemplate",
						"proton:GetServiceTemplateVersion",
						"proton:ListEnvironmentAccountConnections",
						"proton:ListEnvironments",
						"proton:ListEnvironmentTemplates",
						"proton:ListServiceInstances",
						"proton:ListServices",
						"proton:ListServiceTemplates",
						"proton:ListTagsForResource",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53-recovery-cluster:Get*",
						"route53-recovery-control-config:Describe*",
						"route53-recovery-control-config:List*",
						"route53-recovery-readiness:Get*",
						"route53-recovery-readiness:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3-object-lambda:GetObject",
						"s3-object-lambda:GetObjectAcl",
						"s3-object-lambda:GetObjectLegalHold",
						"s3-object-lambda:GetObjectRetention",
						"s3-object-lambda:GetObjectTagging",
						"s3-object-lambda:GetObjectVersion",
						"s3-object-lambda:GetObjectVersionAcl",
						"s3-object-lambda:GetObjectVersionTagging",
						"s3-object-lambda:ListBucket",
						"s3-object-lambda:ListBucketMultipartUploads",
						"s3-object-lambda:ListBucketVersions",
						"s3-object-lambda:ListMultipartUploadParts",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm-contacts:DescribeEngagement",
						"ssm-contacts:DescribePage",
						"ssm-contacts:GetContact",
						"ssm-contacts:GetContactChannel",
						"ssm-contacts:ListContactChannels",
						"ssm-contacts:ListContacts",
						"ssm-contacts:ListEngagements",
						"ssm-contacts:ListPageReceipts",
						"ssm-contacts:ListPagesByContact",
						"ssm-contacts:ListPagesByEngagement",
						"ssm-incidents:GetIncidentRecord",
						"ssm-incidents:GetReplicationSet",
						"ssm-incidents:GetResourcePolicies",
						"ssm-incidents:GetResponsePlan",
						"ssm-incidents:GetTimelineEvent",
						"ssm-incidents:ListIncidentRecords",
						"ssm-incidents:ListRelatedItems",
						"ssm-incidents:ListReplicationSets",
						"ssm-incidents:ListResponsePlans",
						"ssm-incidents:ListTagsForResource",
						"ssm-incidents:ListTimelineEvents",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v79"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-09-09T00:01:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:GetGeneratedPolicy",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListPolicyGenerations",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"airflow:ListEnvironments",
						"airflow:ListTagsForResource",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"appconfig:GetApplication",
						"appconfig:GetConfiguration",
						"appconfig:GetConfigurationProfile",
						"appconfig:GetDeployment",
						"appconfig:GetDeploymentStrategy",
						"appconfig:GetEnvironment",
						"appconfig:GetHostedConfigurationVersion",
						"appconfig:ListApplications",
						"appconfig:ListConfigurationProfiles",
						"appconfig:ListDeployments",
						"appconfig:ListDeploymentStrategies",
						"appconfig:ListEnvironments",
						"appconfig:ListHostedConfigurationVersions",
						"appconfig:ListTagsForResource",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"auditmanager:GetAccountStatus",
						"auditmanager:GetAssessment",
						"auditmanager:GetAssessmentFramework",
						"auditmanager:GetAssessmentReportUrl",
						"auditmanager:GetChangeLogs",
						"auditmanager:GetControl",
						"auditmanager:GetDelegations",
						"auditmanager:GetEvidence",
						"auditmanager:GetEvidenceByEvidenceFolder",
						"auditmanager:GetEvidenceFolder",
						"auditmanager:GetEvidenceFoldersByAssessment",
						"auditmanager:GetEvidenceFoldersByAssessmentControl",
						"auditmanager:GetOrganizationAdminAccount",
						"auditmanager:GetServicesInScope",
						"auditmanager:GetSettings",
						"auditmanager:ListAssessmentFrameworks",
						"auditmanager:ListAssessmentReports",
						"auditmanager:ListAssessments",
						"auditmanager:ListControls",
						"auditmanager:ListKeywordsForDataSource",
						"auditmanager:ListNotifications",
						"auditmanager:ListTagsForResource",
						"auditmanager:ValidateAssessmentReportIntegrity",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"ce:DescribeCostCategoryDefinition",
						"ce:DescribeNotificationSubscription",
						"ce:DescribeReport",
						"ce:GetAnomalies",
						"ce:GetAnomalyMonitors",
						"ce:GetAnomalySubscriptions",
						"ce:GetCostAndUsage",
						"ce:GetCostAndUsageWithResources",
						"ce:GetCostCategories",
						"ce:GetCostForecast",
						"ce:GetDimensionValues",
						"ce:GetPreferences",
						"ce:GetReservationCoverage",
						"ce:GetReservationPurchaseRecommendation",
						"ce:GetReservationUtilization",
						"ce:GetRightsizingRecommendation",
						"ce:GetSavingsPlansCoverage",
						"ce:GetSavingsPlansPurchaseRecommendation",
						"ce:GetSavingsPlansUtilization",
						"ce:GetSavingsPlansUtilizationDetails",
						"ce:GetTags",
						"ce:GetUsageForecast",
						"ce:ListCostCategoryDefinitions",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-connections:GetConnection",
						"codestar-connections:GetHost",
						"codestar-connections:ListConnections",
						"codestar-connections:ListHosts",
						"codestar-connections:ListTagsForResource",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"detective:SearchGraph",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeFeedback",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetCostEstimation",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"devops-guru:StartCostEstimation",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr-public:BatchCheckLayerAvailability",
						"ecr-public:DescribeImages",
						"ecr-public:DescribeImageTags",
						"ecr-public:DescribeRegistries",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetAuthorizationToken",
						"ecr-public:GetRegistryCatalogData",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:GetRepositoryPolicy",
						"ecr-public:ListTagsForResource",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperiments",
						"fis:ListExperimentTemplates",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemas",
						"glue:ListSchemaVersions",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"groundstation:DescribeContact",
						"groundstation:GetConfig",
						"groundstation:GetDataflowEndpointGroup",
						"groundstation:GetMinuteUsage",
						"groundstation:GetMissionProfile",
						"groundstation:GetSatellite",
						"groundstation:ListConfigs",
						"groundstation:ListContacts",
						"groundstation:ListDataflowEndpointGroups",
						"groundstation:ListGroundStations",
						"groundstation:ListMissionProfiles",
						"groundstation:ListSatellites",
						"groundstation:ListTagsForResource",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iot1click:DescribeDevice",
						"iot1click:DescribePlacement",
						"iot1click:DescribeProject",
						"iot1click:GetDeviceMethods",
						"iot1click:GetDevicesInPlacement",
						"iot1click:ListDeviceEvents",
						"iot1click:ListDevices",
						"iot1click:ListPlacements",
						"iot1click:ListProjects",
						"iot1click:ListTagsForResource",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotevents:DescribeAlarm",
						"iotevents:DescribeAlarmModel",
						"iotevents:DescribeDetector",
						"iotevents:DescribeDetectorModel",
						"iotevents:DescribeInput",
						"iotevents:DescribeLoggingOptions",
						"iotevents:ListAlarmModels",
						"iotevents:ListAlarmModelVersions",
						"iotevents:ListAlarms",
						"iotevents:ListDetectorModels",
						"iotevents:ListDetectorModelVersions",
						"iotevents:ListDetectors",
						"iotevents:ListInputs",
						"iotevents:ListTagsForResource",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:GetRecordingConfiguration",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListRecordingConfigurations",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeQuerySuggestionsBlockList",
						"kendra:DescribeQuerySuggestionsConfig",
						"kendra:DescribeThesaurus",
						"kendra:GetQuerySuggestions",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListQuerySuggestionsBlockLists",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:DescribeBot",
						"lex:DescribeBotAlias",
						"lex:DescribeBotChannel",
						"lex:DescribeBotLocale",
						"lex:DescribeBotVersion",
						"lex:DescribeExport",
						"lex:DescribeImport",
						"lex:DescribeIntent",
						"lex:DescribeResourcePolicy",
						"lex:DescribeSlot",
						"lex:DescribeSlotType",
						"lex:Get*",
						"lex:ListBotAliases",
						"lex:ListBotChannels",
						"lex:ListBotLocales",
						"lex:ListBots",
						"lex:ListBotVersions",
						"lex:ListBuiltInIntents",
						"lex:ListBuiltInSlotTypes",
						"lex:ListExports",
						"lex:ListImports",
						"lex:ListIntents",
						"lex:ListSlots",
						"lex:ListSlotTypes",
						"lex:ListTagsForResource",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBucketAccessKeys",
						"lightsail:GetBucketBundles",
						"lightsail:GetBucketMetricData",
						"lightsail:GetBuckets",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"lookoutvision:DescribeDataset",
						"lookoutvision:DescribeModel",
						"lookoutvision:DescribeProject",
						"lookoutvision:ListDatasetEntries",
						"lookoutvision:ListModels",
						"lookoutvision:ListProjects",
						"lookoutvision:ListTagsForResource",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"macie:ListMemberAccounts",
						"macie:ListS3Resources",
						"macie2:BatchGetCustomDataIdentifiers",
						"macie2:DescribeBuckets",
						"macie2:DescribeClassificationJob",
						"macie2:DescribeOrganizationConfiguration",
						"macie2:GetAdministratorAccount",
						"macie2:GetBucketStatistics",
						"macie2:GetClassificationExportConfiguration",
						"macie2:GetCustomDataIdentifier",
						"macie2:GetFindings",
						"macie2:GetFindingsFilter",
						"macie2:GetFindingsPublicationConfiguration",
						"macie2:GetFindingStatistics",
						"macie2:GetInvitationsCount",
						"macie2:GetMacieSession",
						"macie2:GetMember",
						"macie2:GetUsageStatistics",
						"macie2:GetUsageTotals",
						"macie2:ListClassificationJobs",
						"macie2:ListCustomDataIdentifiers",
						"macie2:ListFindings",
						"macie2:ListFindingsFilters",
						"macie2:ListInvitations",
						"macie2:ListMembers",
						"macie2:ListOrganizationAdminAccounts",
						"macie2:ListTagsForResource",
						"macie2:SearchResources",
						"mediaconnect:DescribeFlow",
						"mediaconnect:DescribeOffering",
						"mediaconnect:DescribeReservation",
						"mediaconnect:ListFlows",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mediastore:DescribeContainer",
						"mediastore:DescribeObject",
						"mediastore:GetContainerPolicy",
						"mediastore:GetCorsPolicy",
						"mediastore:GetLifecyclePolicy",
						"mediastore:GetMetricPolicy",
						"mediastore:GetObject",
						"mediastore:ListContainers",
						"mediastore:ListItems",
						"mediastore:ListTagsForResource",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mgn:DescribeJobLogItems",
						"mgn:DescribeJobs",
						"mgn:DescribeReplicationConfigurationTemplates",
						"mgn:DescribeSourceServers",
						"mgn:GetLaunchConfiguration",
						"mgn:GetReplicationConfiguration",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"monitron:GetProject",
						"monitron:GetProjectAdminUser",
						"monitron:ListProjects",
						"monitron:ListTagsForResource",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetDimensionKeyDetails",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"proton:GetEnvironment",
						"proton:GetEnvironmentTemplate",
						"proton:GetEnvironmentTemplateVersion",
						"proton:GetService",
						"proton:GetServiceInstance",
						"proton:GetServiceTemplate",
						"proton:GetServiceTemplateVersion",
						"proton:ListEnvironmentAccountConnections",
						"proton:ListEnvironments",
						"proton:ListEnvironmentTemplates",
						"proton:ListServiceInstances",
						"proton:ListServices",
						"proton:ListServiceTemplates",
						"proton:ListTagsForResource",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53-recovery-cluster:Get*",
						"route53-recovery-control-config:Describe*",
						"route53-recovery-control-config:List*",
						"route53-recovery-readiness:Get*",
						"route53-recovery-readiness:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3-object-lambda:GetObject",
						"s3-object-lambda:GetObjectAcl",
						"s3-object-lambda:GetObjectLegalHold",
						"s3-object-lambda:GetObjectRetention",
						"s3-object-lambda:GetObjectTagging",
						"s3-object-lambda:GetObjectVersion",
						"s3-object-lambda:GetObjectVersionAcl",
						"s3-object-lambda:GetObjectVersionTagging",
						"s3-object-lambda:ListBucket",
						"s3-object-lambda:ListBucketMultipartUploads",
						"s3-object-lambda:ListBucketVersions",
						"s3-object-lambda:ListMultipartUploadParts",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm-contacts:DescribeEngagement",
						"ssm-contacts:DescribePage",
						"ssm-contacts:GetContact",
						"ssm-contacts:GetContactChannel",
						"ssm-contacts:ListContactChannels",
						"ssm-contacts:ListContacts",
						"ssm-contacts:ListEngagements",
						"ssm-contacts:ListPageReceipts",
						"ssm-contacts:ListPagesByContact",
						"ssm-contacts:ListPagesByEngagement",
						"ssm-incidents:GetIncidentRecord",
						"ssm-incidents:GetReplicationSet",
						"ssm-incidents:GetResourcePolicies",
						"ssm-incidents:GetResponsePlan",
						"ssm-incidents:GetTimelineEvent",
						"ssm-incidents:ListIncidentRecords",
						"ssm-incidents:ListRelatedItems",
						"ssm-incidents:ListReplicationSets",
						"ssm-incidents:ListResponsePlans",
						"ssm-incidents:ListTagsForResource",
						"ssm-incidents:ListTimelineEvents",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v80"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-10-08T19:08:00",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:GetGeneratedPolicy",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListPolicyGenerations",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"airflow:ListEnvironments",
						"airflow:ListTagsForResource",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"appconfig:GetApplication",
						"appconfig:GetConfiguration",
						"appconfig:GetConfigurationProfile",
						"appconfig:GetDeployment",
						"appconfig:GetDeploymentStrategy",
						"appconfig:GetEnvironment",
						"appconfig:GetHostedConfigurationVersion",
						"appconfig:ListApplications",
						"appconfig:ListConfigurationProfiles",
						"appconfig:ListDeployments",
						"appconfig:ListDeploymentStrategies",
						"appconfig:ListEnvironments",
						"appconfig:ListHostedConfigurationVersions",
						"appconfig:ListTagsForResource",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"aps:DescribeAlertManagerDefinition",
						"aps:DescribeRuleGroupsNamespace",
						"aps:DescribeWorkspace",
						"aps:GetAlertManagerSilence",
						"aps:GetAlertManagerStatus",
						"aps:GetLabels",
						"aps:GetMetricMetadata",
						"aps:GetSeries",
						"aps:ListAlerts",
						"aps:ListAlertManagerAlerts",
						"aps:ListAlertManagerAlertGroups",
						"aps:ListAlertManagerReceivers",
						"aps:ListAlertManagerSilences",
						"aps:ListRules",
						"aps:ListRuleGroupsNamespaces",
						"aps:ListTagsForResource",
						"aps:ListWorkspaces",
						"aps:QueryMetrics",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"auditmanager:GetAccountStatus",
						"auditmanager:GetAssessment",
						"auditmanager:GetAssessmentFramework",
						"auditmanager:GetAssessmentReportUrl",
						"auditmanager:GetChangeLogs",
						"auditmanager:GetControl",
						"auditmanager:GetDelegations",
						"auditmanager:GetEvidence",
						"auditmanager:GetEvidenceByEvidenceFolder",
						"auditmanager:GetEvidenceFolder",
						"auditmanager:GetEvidenceFoldersByAssessment",
						"auditmanager:GetEvidenceFoldersByAssessmentControl",
						"auditmanager:GetOrganizationAdminAccount",
						"auditmanager:GetServicesInScope",
						"auditmanager:GetSettings",
						"auditmanager:ListAssessmentFrameworks",
						"auditmanager:ListAssessmentReports",
						"auditmanager:ListAssessments",
						"auditmanager:ListControls",
						"auditmanager:ListKeywordsForDataSource",
						"auditmanager:ListNotifications",
						"auditmanager:ListTagsForResource",
						"auditmanager:ValidateAssessmentReportIntegrity",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"ce:DescribeCostCategoryDefinition",
						"ce:DescribeNotificationSubscription",
						"ce:DescribeReport",
						"ce:GetAnomalies",
						"ce:GetAnomalyMonitors",
						"ce:GetAnomalySubscriptions",
						"ce:GetCostAndUsage",
						"ce:GetCostAndUsageWithResources",
						"ce:GetCostCategories",
						"ce:GetCostForecast",
						"ce:GetDimensionValues",
						"ce:GetPreferences",
						"ce:GetReservationCoverage",
						"ce:GetReservationPurchaseRecommendation",
						"ce:GetReservationUtilization",
						"ce:GetRightsizingRecommendation",
						"ce:GetSavingsPlansCoverage",
						"ce:GetSavingsPlansPurchaseRecommendation",
						"ce:GetSavingsPlansUtilization",
						"ce:GetSavingsPlansUtilizationDetails",
						"ce:GetTags",
						"ce:GetUsageForecast",
						"ce:ListCostCategoryDefinitions",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-connections:GetConnection",
						"codestar-connections:GetHost",
						"codestar-connections:ListConnections",
						"codestar-connections:ListHosts",
						"codestar-connections:ListTagsForResource",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetEnrollmentStatusesForOrganization",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"detective:SearchGraph",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeFeedback",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetCostEstimation",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"devops-guru:StartCostEstimation",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr-public:BatchCheckLayerAvailability",
						"ecr-public:DescribeImages",
						"ecr-public:DescribeImageTags",
						"ecr-public:DescribeRegistries",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetAuthorizationToken",
						"ecr-public:GetRegistryCatalogData",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:GetRepositoryPolicy",
						"ecr-public:ListTagsForResource",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperiments",
						"fis:ListExperimentTemplates",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemas",
						"glue:ListSchemaVersions",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"groundstation:DescribeContact",
						"groundstation:GetConfig",
						"groundstation:GetDataflowEndpointGroup",
						"groundstation:GetMinuteUsage",
						"groundstation:GetMissionProfile",
						"groundstation:GetSatellite",
						"groundstation:ListConfigs",
						"groundstation:ListContacts",
						"groundstation:ListDataflowEndpointGroups",
						"groundstation:ListGroundStations",
						"groundstation:ListMissionProfiles",
						"groundstation:ListSatellites",
						"groundstation:ListTagsForResource",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iot1click:DescribeDevice",
						"iot1click:DescribePlacement",
						"iot1click:DescribeProject",
						"iot1click:GetDeviceMethods",
						"iot1click:GetDevicesInPlacement",
						"iot1click:ListDeviceEvents",
						"iot1click:ListDevices",
						"iot1click:ListPlacements",
						"iot1click:ListProjects",
						"iot1click:ListTagsForResource",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotevents:DescribeAlarm",
						"iotevents:DescribeAlarmModel",
						"iotevents:DescribeDetector",
						"iotevents:DescribeDetectorModel",
						"iotevents:DescribeInput",
						"iotevents:DescribeLoggingOptions",
						"iotevents:ListAlarmModels",
						"iotevents:ListAlarmModelVersions",
						"iotevents:ListAlarms",
						"iotevents:ListDetectorModels",
						"iotevents:ListDetectorModelVersions",
						"iotevents:ListDetectors",
						"iotevents:ListInputs",
						"iotevents:ListTagsForResource",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:GetRecordingConfiguration",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListRecordingConfigurations",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeQuerySuggestionsBlockList",
						"kendra:DescribeQuerySuggestionsConfig",
						"kendra:DescribeThesaurus",
						"kendra:GetQuerySuggestions",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListQuerySuggestionsBlockLists",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:DescribeBot",
						"lex:DescribeBotAlias",
						"lex:DescribeBotChannel",
						"lex:DescribeBotLocale",
						"lex:DescribeBotVersion",
						"lex:DescribeExport",
						"lex:DescribeImport",
						"lex:DescribeIntent",
						"lex:DescribeResourcePolicy",
						"lex:DescribeSlot",
						"lex:DescribeSlotType",
						"lex:Get*",
						"lex:ListBotAliases",
						"lex:ListBotChannels",
						"lex:ListBotLocales",
						"lex:ListBots",
						"lex:ListBotVersions",
						"lex:ListBuiltInIntents",
						"lex:ListBuiltInSlotTypes",
						"lex:ListExports",
						"lex:ListImports",
						"lex:ListIntents",
						"lex:ListSlots",
						"lex:ListSlotTypes",
						"lex:ListTagsForResource",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBucketAccessKeys",
						"lightsail:GetBucketBundles",
						"lightsail:GetBucketMetricData",
						"lightsail:GetBuckets",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"lookoutvision:DescribeDataset",
						"lookoutvision:DescribeModel",
						"lookoutvision:DescribeProject",
						"lookoutvision:ListDatasetEntries",
						"lookoutvision:ListModels",
						"lookoutvision:ListProjects",
						"lookoutvision:ListTagsForResource",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"macie:ListMemberAccounts",
						"macie:ListS3Resources",
						"macie2:BatchGetCustomDataIdentifiers",
						"macie2:DescribeBuckets",
						"macie2:DescribeClassificationJob",
						"macie2:DescribeOrganizationConfiguration",
						"macie2:GetAdministratorAccount",
						"macie2:GetBucketStatistics",
						"macie2:GetClassificationExportConfiguration",
						"macie2:GetCustomDataIdentifier",
						"macie2:GetFindings",
						"macie2:GetFindingsFilter",
						"macie2:GetFindingsPublicationConfiguration",
						"macie2:GetFindingStatistics",
						"macie2:GetInvitationsCount",
						"macie2:GetMacieSession",
						"macie2:GetMember",
						"macie2:GetUsageStatistics",
						"macie2:GetUsageTotals",
						"macie2:ListClassificationJobs",
						"macie2:ListCustomDataIdentifiers",
						"macie2:ListFindings",
						"macie2:ListFindingsFilters",
						"macie2:ListInvitations",
						"macie2:ListMembers",
						"macie2:ListOrganizationAdminAccounts",
						"macie2:ListTagsForResource",
						"macie2:SearchResources",
						"managedblockchain:GetNetwork",
						"managedblockchain:GetProposal",
						"managedblockchain:GetMember",
						"managedblockchain:GetNode",
						"managedblockchain:ListNetworks",
						"managedblockchain:ListProposals",
						"managedblockchain:ListProposalVotes",
						"managedblockchain:ListInvitations",
						"managedblockchain:ListMembers",
						"managedblockchain:ListNodes",
						"managedblockchain:ListTagsForResource",
						"mediaconnect:DescribeFlow",
						"mediaconnect:DescribeOffering",
						"mediaconnect:DescribeReservation",
						"mediaconnect:ListFlows",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mediastore:DescribeContainer",
						"mediastore:DescribeObject",
						"mediastore:GetContainerPolicy",
						"mediastore:GetCorsPolicy",
						"mediastore:GetLifecyclePolicy",
						"mediastore:GetMetricPolicy",
						"mediastore:GetObject",
						"mediastore:ListContainers",
						"mediastore:ListItems",
						"mediastore:ListTagsForResource",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mgn:DescribeJobLogItems",
						"mgn:DescribeJobs",
						"mgn:DescribeReplicationConfigurationTemplates",
						"mgn:DescribeSourceServers",
						"mgn:GetLaunchConfiguration",
						"mgn:GetReplicationConfiguration",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"monitron:GetProject",
						"monitron:GetProjectAdminUser",
						"monitron:ListProjects",
						"monitron:ListTagsForResource",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetDimensionKeyDetails",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"proton:GetEnvironment",
						"proton:GetEnvironmentTemplate",
						"proton:GetEnvironmentTemplateVersion",
						"proton:GetService",
						"proton:GetServiceInstance",
						"proton:GetServiceTemplate",
						"proton:GetServiceTemplateVersion",
						"proton:ListEnvironmentAccountConnections",
						"proton:ListEnvironments",
						"proton:ListEnvironmentTemplates",
						"proton:ListServiceInstances",
						"proton:ListServices",
						"proton:ListServiceTemplates",
						"proton:ListTagsForResource",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53-recovery-cluster:Get*",
						"route53-recovery-control-config:Describe*",
						"route53-recovery-control-config:List*",
						"route53-recovery-readiness:Get*",
						"route53-recovery-readiness:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3-object-lambda:GetObject",
						"s3-object-lambda:GetObjectAcl",
						"s3-object-lambda:GetObjectLegalHold",
						"s3-object-lambda:GetObjectRetention",
						"s3-object-lambda:GetObjectTagging",
						"s3-object-lambda:GetObjectVersion",
						"s3-object-lambda:GetObjectVersionAcl",
						"s3-object-lambda:GetObjectVersionTagging",
						"s3-object-lambda:ListBucket",
						"s3-object-lambda:ListBucketMultipartUploads",
						"s3-object-lambda:ListBucketVersions",
						"s3-object-lambda:ListMultipartUploadParts",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm-contacts:DescribeEngagement",
						"ssm-contacts:DescribePage",
						"ssm-contacts:GetContact",
						"ssm-contacts:GetContactChannel",
						"ssm-contacts:ListContactChannels",
						"ssm-contacts:ListContacts",
						"ssm-contacts:ListEngagements",
						"ssm-contacts:ListPageReceipts",
						"ssm-contacts:ListPagesByContact",
						"ssm-contacts:ListPagesByEngagement",
						"ssm-incidents:GetIncidentRecord",
						"ssm-incidents:GetReplicationSet",
						"ssm-incidents:GetResourcePolicies",
						"ssm-incidents:GetResponsePlan",
						"ssm-incidents:GetTimelineEvent",
						"ssm-incidents:ListIncidentRecords",
						"ssm-incidents:ListRelatedItems",
						"ssm-incidents:ListReplicationSets",
						"ssm-incidents:ListResponsePlans",
						"ssm-incidents:ListTagsForResource",
						"ssm-incidents:ListTimelineEvents",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"timestream:DescribeDatabase",
						"timestream:DescribeEndpoints",
						"timestream:DescribeTable",
						"timestream:ListDatabases",
						"timestream:ListMeasures",
						"timestream:ListTables",
						"timestream:ListTagsForResource",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v81"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-10-26T20:14:30",
		"document": {
			"Statement": [
				{
					"Action": [
						"a4b:Get*",
						"a4b:List*",
						"a4b:Search*",
						"access-analyzer:GetAccessPreview",
						"access-analyzer:GetAnalyzedResource",
						"access-analyzer:GetAnalyzer",
						"access-analyzer:GetArchiveRule",
						"access-analyzer:GetFinding",
						"access-analyzer:GetGeneratedPolicy",
						"access-analyzer:ListAccessPreviewFindings",
						"access-analyzer:ListAccessPreviews",
						"access-analyzer:ListAnalyzedResources",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListFindings",
						"access-analyzer:ListPolicyGenerations",
						"access-analyzer:ListTagsForResource",
						"access-analyzer:ValidatePolicy",
						"acm-pca:Describe*",
						"acm-pca:Get*",
						"acm-pca:List*",
						"acm:Describe*",
						"acm:Get*",
						"acm:List*",
						"airflow:ListEnvironments",
						"airflow:ListTagsForResource",
						"amplify:GetApp",
						"amplify:GetBranch",
						"amplify:GetDomainAssociation",
						"amplify:GetJob",
						"amplify:ListApps",
						"amplify:ListBranches",
						"amplify:ListDomainAssociations",
						"amplify:ListJobs",
						"apigateway:GET",
						"appconfig:GetApplication",
						"appconfig:GetConfiguration",
						"appconfig:GetConfigurationProfile",
						"appconfig:GetDeployment",
						"appconfig:GetDeploymentStrategy",
						"appconfig:GetEnvironment",
						"appconfig:GetHostedConfigurationVersion",
						"appconfig:ListApplications",
						"appconfig:ListConfigurationProfiles",
						"appconfig:ListDeployments",
						"appconfig:ListDeploymentStrategies",
						"appconfig:ListEnvironments",
						"appconfig:ListHostedConfigurationVersions",
						"appconfig:ListTagsForResource",
						"application-autoscaling:Describe*",
						"applicationinsights:Describe*",
						"applicationinsights:List*",
						"appmesh:Describe*",
						"appmesh:List*",
						"appstream:Describe*",
						"appstream:List*",
						"appsync:Get*",
						"appsync:List*",
						"aps:DescribeAlertManagerDefinition",
						"aps:DescribeRuleGroupsNamespace",
						"aps:DescribeWorkspace",
						"aps:GetAlertManagerSilence",
						"aps:GetAlertManagerStatus",
						"aps:GetLabels",
						"aps:GetMetricMetadata",
						"aps:GetSeries",
						"aps:ListAlerts",
						"aps:ListAlertManagerAlerts",
						"aps:ListAlertManagerAlertGroups",
						"aps:ListAlertManagerReceivers",
						"aps:ListAlertManagerSilences",
						"aps:ListRules",
						"aps:ListRuleGroupsNamespaces",
						"aps:ListTagsForResource",
						"aps:ListWorkspaces",
						"aps:QueryMetrics",
						"athena:Batch*",
						"athena:Get*",
						"athena:List*",
						"auditmanager:GetAccountStatus",
						"auditmanager:GetAssessment",
						"auditmanager:GetAssessmentFramework",
						"auditmanager:GetAssessmentReportUrl",
						"auditmanager:GetChangeLogs",
						"auditmanager:GetControl",
						"auditmanager:GetDelegations",
						"auditmanager:GetEvidence",
						"auditmanager:GetEvidenceByEvidenceFolder",
						"auditmanager:GetEvidenceFolder",
						"auditmanager:GetEvidenceFoldersByAssessment",
						"auditmanager:GetEvidenceFoldersByAssessmentControl",
						"auditmanager:GetOrganizationAdminAccount",
						"auditmanager:GetServicesInScope",
						"auditmanager:GetSettings",
						"auditmanager:ListAssessmentFrameworks",
						"auditmanager:ListAssessmentReports",
						"auditmanager:ListAssessments",
						"auditmanager:ListControls",
						"auditmanager:ListKeywordsForDataSource",
						"auditmanager:ListNotifications",
						"auditmanager:ListTagsForResource",
						"auditmanager:ValidateAssessmentReportIntegrity",
						"autoscaling-plans:Describe*",
						"autoscaling-plans:GetScalingPlanResourceForecastData",
						"autoscaling:Describe*",
						"aws-portal:View*",
						"backup:Describe*",
						"backup:Get*",
						"backup:List*",
						"batch:Describe*",
						"batch:List*",
						"braket:GetDevice",
						"braket:GetQuantumTask",
						"braket:SearchDevices",
						"braket:SearchQuantumTasks",
						"budgets:Describe*",
						"budgets:View*",
						"cassandra:Select",
						"ce:DescribeCostCategoryDefinition",
						"ce:DescribeNotificationSubscription",
						"ce:DescribeReport",
						"ce:GetAnomalies",
						"ce:GetAnomalyMonitors",
						"ce:GetAnomalySubscriptions",
						"ce:GetCostAndUsage",
						"ce:GetCostAndUsageWithResources",
						"ce:GetCostCategories",
						"ce:GetCostForecast",
						"ce:GetDimensionValues",
						"ce:GetPreferences",
						"ce:GetReservationCoverage",
						"ce:GetReservationPurchaseRecommendation",
						"ce:GetReservationUtilization",
						"ce:GetRightsizingRecommendation",
						"ce:GetSavingsPlansCoverage",
						"ce:GetSavingsPlansPurchaseRecommendation",
						"ce:GetSavingsPlansUtilization",
						"ce:GetSavingsPlansUtilizationDetails",
						"ce:GetTags",
						"ce:GetUsageForecast",
						"ce:ListCostCategoryDefinitions",
						"chatbot:Describe*",
						"chatbot:Get*",
						"chime:Get*",
						"chime:List*",
						"chime:Retrieve*",
						"chime:Search*",
						"chime:Validate*",
						"cloud9:Describe*",
						"cloud9:List*",
						"clouddirectory:BatchRead",
						"clouddirectory:Get*",
						"clouddirectory:List*",
						"clouddirectory:LookupPolicy",
						"cloudformation:Describe*",
						"cloudformation:Detect*",
						"cloudformation:Estimate*",
						"cloudformation:Get*",
						"cloudformation:List*",
						"cloudfront:DescribeFunction",
						"cloudfront:Get*",
						"cloudfront:List*",
						"cloudhsm:Describe*",
						"cloudhsm:Get*",
						"cloudhsm:List*",
						"cloudsearch:Describe*",
						"cloudsearch:List*",
						"cloudtrail:Describe*",
						"cloudtrail:Get*",
						"cloudtrail:List*",
						"cloudtrail:LookupEvents",
						"cloudwatch:Describe*",
						"cloudwatch:Get*",
						"cloudwatch:List*",
						"codeartifact:DescribeDomain",
						"codeartifact:DescribePackageVersion",
						"codeartifact:DescribeRepository",
						"codeartifact:GetAuthorizationToken",
						"codeartifact:GetDomainPermissionsPolicy",
						"codeartifact:GetPackageVersionAsset",
						"codeartifact:GetPackageVersionReadme",
						"codeartifact:GetRepositoryEndpoint",
						"codeartifact:GetRepositoryPermissionsPolicy",
						"codeartifact:ListDomains",
						"codeartifact:ListPackages",
						"codeartifact:ListPackageVersionAssets",
						"codeartifact:ListPackageVersionDependencies",
						"codeartifact:ListPackageVersions",
						"codeartifact:ListRepositories",
						"codeartifact:ListRepositoriesInDomain",
						"codeartifact:ListTagsForResource",
						"codeartifact:ReadFromRepository",
						"codebuild:BatchGet*",
						"codebuild:DescribeCodeCoverages",
						"codebuild:DescribeTestCases",
						"codebuild:List*",
						"codecommit:BatchGet*",
						"codecommit:Describe*",
						"codecommit:Get*",
						"codecommit:GitPull",
						"codecommit:List*",
						"codedeploy:BatchGet*",
						"codedeploy:Get*",
						"codedeploy:List*",
						"codeguru-profiler:Describe*",
						"codeguru-profiler:Get*",
						"codeguru-profiler:List*",
						"codeguru-reviewer:Describe*",
						"codeguru-reviewer:Get*",
						"codeguru-reviewer:List*",
						"codepipeline:Get*",
						"codepipeline:List*",
						"codestar-connections:GetConnection",
						"codestar-connections:GetHost",
						"codestar-connections:ListConnections",
						"codestar-connections:ListHosts",
						"codestar-connections:ListTagsForResource",
						"codestar-notifications:describeNotificationRule",
						"codestar-notifications:listEventTypes",
						"codestar-notifications:listNotificationRules",
						"codestar-notifications:listTagsForResource",
						"codestar-notifications:ListTargets",
						"codestar:Describe*",
						"codestar:Get*",
						"codestar:List*",
						"codestar:Verify*",
						"cognito-identity:Describe*",
						"cognito-identity:GetCredentialsForIdentity",
						"cognito-identity:GetIdentityPoolRoles",
						"cognito-identity:GetOpenIdToken",
						"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
						"cognito-identity:List*",
						"cognito-identity:Lookup*",
						"cognito-idp:AdminGet*",
						"cognito-idp:AdminList*",
						"cognito-idp:Describe*",
						"cognito-idp:Get*",
						"cognito-idp:List*",
						"cognito-sync:Describe*",
						"cognito-sync:Get*",
						"cognito-sync:List*",
						"cognito-sync:QueryRecords",
						"compute-optimizer:DescribeRecommendationExportJobs",
						"compute-optimizer:GetAutoScalingGroupRecommendations",
						"compute-optimizer:GetEBSVolumeRecommendations",
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEC2RecommendationProjectedMetrics",
						"compute-optimizer:GetEnrollmentStatus",
						"compute-optimizer:GetEnrollmentStatusesForOrganization",
						"compute-optimizer:GetLambdaFunctionRecommendations",
						"compute-optimizer:GetRecommendationSummaries",
						"config:BatchGetAggregateResourceConfig",
						"config:BatchGetResourceConfig",
						"config:Deliver*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:SelectAggregateResourceConfig",
						"config:SelectResourceConfig",
						"connect:Describe*",
						"connect:GetFederationToken",
						"connect:List*",
						"dataexchange:Get*",
						"dataexchange:List*",
						"datapipeline:Describe*",
						"datapipeline:EvaluateExpression",
						"datapipeline:Get*",
						"datapipeline:List*",
						"datapipeline:QueryObjects",
						"datapipeline:Validate*",
						"datasync:Describe*",
						"datasync:List*",
						"dax:BatchGetItem",
						"dax:Describe*",
						"dax:GetItem",
						"dax:ListTags",
						"dax:Query",
						"dax:Scan",
						"deepcomposer:GetComposition",
						"deepcomposer:GetModel",
						"deepcomposer:GetSampleModel",
						"deepcomposer:ListCompositions",
						"deepcomposer:ListModels",
						"deepcomposer:ListSampleModels",
						"deepcomposer:ListTrainingTopics",
						"detective:Get*",
						"detective:List*",
						"detective:SearchGraph",
						"devicefarm:Get*",
						"devicefarm:List*",
						"devops-guru:DescribeAccountHealth",
						"devops-guru:DescribeAccountOverview",
						"devops-guru:DescribeAnomaly",
						"devops-guru:DescribeFeedback",
						"devops-guru:DescribeInsight",
						"devops-guru:DescribeResourceCollectionHealth",
						"devops-guru:DescribeServiceIntegration",
						"devops-guru:GetCostEstimation",
						"devops-guru:GetResourceCollection",
						"devops-guru:ListAnomaliesForInsight",
						"devops-guru:ListEvents",
						"devops-guru:ListInsights",
						"devops-guru:ListNotificationChannels",
						"devops-guru:ListRecommendations",
						"devops-guru:SearchInsights",
						"devops-guru:StartCostEstimation",
						"directconnect:Describe*",
						"discovery:Describe*",
						"discovery:Get*",
						"discovery:List*",
						"dlm:Get*",
						"dms:Describe*",
						"dms:List*",
						"dms:Test*",
						"ds:Check*",
						"ds:Describe*",
						"ds:Get*",
						"ds:List*",
						"ds:Verify*",
						"dynamodb:BatchGet*",
						"dynamodb:Describe*",
						"dynamodb:Get*",
						"dynamodb:List*",
						"dynamodb:Query",
						"dynamodb:Scan",
						"ec2:Describe*",
						"ec2:Get*",
						"ec2:SearchTransitGatewayRoutes",
						"ec2messages:Get*",
						"ecr-public:BatchCheckLayerAvailability",
						"ecr-public:DescribeImages",
						"ecr-public:DescribeImageTags",
						"ecr-public:DescribeRegistries",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetAuthorizationToken",
						"ecr-public:GetRegistryCatalogData",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:GetRepositoryPolicy",
						"ecr-public:ListTagsForResource",
						"ecr:BatchCheck*",
						"ecr:BatchGet*",
						"ecr:Describe*",
						"ecr:Get*",
						"ecr:List*",
						"ecs:Describe*",
						"ecs:List*",
						"eks:Describe*",
						"eks:List*",
						"elasticache:Describe*",
						"elasticache:List*",
						"elasticbeanstalk:Check*",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:List*",
						"elasticbeanstalk:Request*",
						"elasticbeanstalk:Retrieve*",
						"elasticbeanstalk:Validate*",
						"elasticfilesystem:Describe*",
						"elasticloadbalancing:Describe*",
						"elasticmapreduce:Describe*",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:List*",
						"elasticmapreduce:View*",
						"elastictranscoder:List*",
						"elastictranscoder:Read*",
						"elemental-appliances-software:Get*",
						"elemental-appliances-software:List*",
						"es:Describe*",
						"es:ESHttpGet",
						"es:ESHttpHead",
						"es:Get*",
						"es:List*",
						"events:Describe*",
						"events:List*",
						"events:Test*",
						"firehose:Describe*",
						"firehose:List*",
						"fis:GetAction",
						"fis:GetExperiment",
						"fis:GetExperimentTemplate",
						"fis:ListActions",
						"fis:ListExperiments",
						"fis:ListExperimentTemplates",
						"fis:ListTagsForResource",
						"fms:GetAdminAccount",
						"fms:GetAppsList",
						"fms:GetComplianceDetail",
						"fms:GetNotificationChannel",
						"fms:GetPolicy",
						"fms:GetProtectionStatus",
						"fms:GetProtocolsList",
						"fms:GetViolationDetails",
						"fms:ListAppsLists",
						"fms:ListComplianceStatus",
						"fms:ListMemberAccounts",
						"fms:ListPolicies",
						"fms:ListProtocolsLists",
						"fms:ListTagsForResource",
						"forecast:DescribeDataset",
						"forecast:DescribeDatasetGroup",
						"forecast:DescribeDatasetImportJob",
						"forecast:DescribeForecast",
						"forecast:DescribeForecastExportJob",
						"forecast:DescribePredictor",
						"forecast:DescribePredictorBacktestExportJob",
						"forecast:GetAccuracyMetrics",
						"forecast:ListDatasetGroups",
						"forecast:ListDatasetImportJobs",
						"forecast:ListDatasets",
						"forecast:ListForecastExportJobs",
						"forecast:ListForecasts",
						"forecast:ListPredictorBacktestExportJobs",
						"forecast:ListPredictors",
						"forecast:QueryForecast",
						"freertos:Describe*",
						"freertos:List*",
						"fsx:Describe*",
						"fsx:List*",
						"gamelift:Describe*",
						"gamelift:Get*",
						"gamelift:List*",
						"gamelift:ResolveAlias",
						"gamelift:Search*",
						"glacier:Describe*",
						"glacier:Get*",
						"glacier:List*",
						"globalaccelerator:Describe*",
						"globalaccelerator:List*",
						"glue:BatchGetDevEndpoints",
						"glue:BatchGetJobs",
						"glue:BatchGetPartition",
						"glue:BatchGetTriggers",
						"glue:BatchGetWorkflows",
						"glue:CheckSchemaVersionValidity",
						"glue:GetCatalogImportStatus",
						"glue:GetClassifier",
						"glue:GetClassifiers",
						"glue:GetCrawler",
						"glue:GetCrawlerMetrics",
						"glue:GetCrawlers",
						"glue:GetDatabase",
						"glue:GetDatabases",
						"glue:GetDataCatalogEncryptionSettings",
						"glue:GetDataflowGraph",
						"glue:GetDevEndpoint",
						"glue:GetDevEndpoints",
						"glue:GetJob",
						"glue:GetJobBookmark",
						"glue:GetJobRun",
						"glue:GetJobRuns",
						"glue:GetJobs",
						"glue:GetMapping",
						"glue:GetMLTaskRun",
						"glue:GetMLTaskRuns",
						"glue:GetMLTransform",
						"glue:GetMLTransforms",
						"glue:GetPartition",
						"glue:GetPartitions",
						"glue:GetPlan",
						"glue:GetRegistry",
						"glue:GetResourcePolicy",
						"glue:GetSchema",
						"glue:GetSchemaByDefinition",
						"glue:GetSchemaVersion",
						"glue:GetSchemaVersionsDiff",
						"glue:GetSecurityConfiguration",
						"glue:GetSecurityConfigurations",
						"glue:GetTable",
						"glue:GetTables",
						"glue:GetTableVersion",
						"glue:GetTableVersions",
						"glue:GetTags",
						"glue:GetTrigger",
						"glue:GetTriggers",
						"glue:GetUserDefinedFunction",
						"glue:GetUserDefinedFunctions",
						"glue:GetWorkflow",
						"glue:GetWorkflowRun",
						"glue:GetWorkflowRunProperties",
						"glue:GetWorkflowRuns",
						"glue:ListCrawlers",
						"glue:ListDevEndpoints",
						"glue:ListJobs",
						"glue:ListMLTransforms",
						"glue:ListRegistries",
						"glue:ListSchemas",
						"glue:ListSchemaVersions",
						"glue:ListTriggers",
						"glue:ListWorkflows",
						"glue:QuerySchemaVersionMetadata",
						"greengrass:DescribeComponent",
						"greengrass:Get*",
						"greengrass:List*",
						"groundstation:DescribeContact",
						"groundstation:GetConfig",
						"groundstation:GetDataflowEndpointGroup",
						"groundstation:GetMinuteUsage",
						"groundstation:GetMissionProfile",
						"groundstation:GetSatellite",
						"groundstation:ListConfigs",
						"groundstation:ListContacts",
						"groundstation:ListDataflowEndpointGroups",
						"groundstation:ListGroundStations",
						"groundstation:ListMissionProfiles",
						"groundstation:ListSatellites",
						"groundstation:ListTagsForResource",
						"guardduty:DescribeOrganizationConfiguration",
						"guardduty:DescribePublishingDestination",
						"guardduty:Get*",
						"guardduty:List*",
						"health:Describe*",
						"iam:Generate*",
						"iam:Get*",
						"iam:List*",
						"iam:Simulate*",
						"imagebuilder:Get*",
						"imagebuilder:List*",
						"importexport:Get*",
						"importexport:List*",
						"inspector:Describe*",
						"inspector:Get*",
						"inspector:List*",
						"inspector:Preview*",
						"iot:Describe*",
						"iot:Get*",
						"iot:List*",
						"iot1click:DescribeDevice",
						"iot1click:DescribePlacement",
						"iot1click:DescribeProject",
						"iot1click:GetDeviceMethods",
						"iot1click:GetDevicesInPlacement",
						"iot1click:ListDeviceEvents",
						"iot1click:ListDevices",
						"iot1click:ListPlacements",
						"iot1click:ListProjects",
						"iot1click:ListTagsForResource",
						"iotanalytics:Describe*",
						"iotanalytics:Get*",
						"iotanalytics:List*",
						"iotanalytics:SampleChannelData",
						"iotevents:DescribeAlarm",
						"iotevents:DescribeAlarmModel",
						"iotevents:DescribeDetector",
						"iotevents:DescribeDetectorModel",
						"iotevents:DescribeInput",
						"iotevents:DescribeLoggingOptions",
						"iotevents:ListAlarmModels",
						"iotevents:ListAlarmModelVersions",
						"iotevents:ListAlarms",
						"iotevents:ListDetectorModels",
						"iotevents:ListDetectorModelVersions",
						"iotevents:ListDetectors",
						"iotevents:ListInputs",
						"iotevents:ListTagsForResource",
						"iotfleethub:DescribeApplication",
						"iotfleethub:ListApplications",
						"iotsitewise:Describe*",
						"iotsitewise:Get*",
						"iotsitewise:List*",
						"iotwireless:GetDestination",
						"iotwireless:GetDeviceProfile",
						"iotwireless:GetPartnerAccount",
						"iotwireless:GetServiceEndpoint",
						"iotwireless:GetServiceProfile",
						"iotwireless:GetWirelessDevice",
						"iotwireless:GetWirelessDeviceStatistics",
						"iotwireless:GetWirelessGateway",
						"iotwireless:GetWirelessGatewayCertificate",
						"iotwireless:GetWirelessGatewayFirmwareInformation",
						"iotwireless:GetWirelessGatewayStatistics",
						"iotwireless:GetWirelessGatewayTask",
						"iotwireless:GetWirelessGatewayTaskDefinition",
						"iotwireless:ListDestinations",
						"iotwireless:ListDeviceProfiles",
						"iotwireless:ListPartnerAccounts",
						"iotwireless:ListServiceProfiles",
						"iotwireless:ListTagsForResource",
						"iotwireless:ListWirelessDevices",
						"iotwireless:ListWirelessGateways",
						"iotwireless:ListWirelessGatewayTaskDefinitions",
						"ivs:BatchGetChannel",
						"ivs:GetChannel",
						"ivs:GetPlaybackKeyPair",
						"ivs:GetRecordingConfiguration",
						"ivs:ListChannels",
						"ivs:ListPlaybackKeyPairs",
						"ivs:ListRecordingConfigurations",
						"ivs:ListStreams",
						"ivs:ListTagsForResource",
						"kafka:Describe*",
						"kafka:Get*",
						"kafka:List*",
						"kendra:DescribeDataSource",
						"kendra:DescribeFaq",
						"kendra:DescribeIndex",
						"kendra:DescribeQuerySuggestionsBlockList",
						"kendra:DescribeQuerySuggestionsConfig",
						"kendra:DescribeThesaurus",
						"kendra:GetQuerySuggestions",
						"kendra:ListDataSources",
						"kendra:ListDataSourceSyncJobs",
						"kendra:ListFaqs",
						"kendra:ListIndices",
						"kendra:ListQuerySuggestionsBlockLists",
						"kendra:ListTagsForResource",
						"kendra:ListThesauri",
						"kendra:Query",
						"kinesis:Describe*",
						"kinesis:Get*",
						"kinesis:List*",
						"kinesisanalytics:Describe*",
						"kinesisanalytics:Discover*",
						"kinesisanalytics:Get*",
						"kinesisanalytics:List*",
						"kinesisvideo:Describe*",
						"kinesisvideo:Get*",
						"kinesisvideo:List*",
						"kms:Describe*",
						"kms:Get*",
						"kms:List*",
						"lambda:Get*",
						"lambda:List*",
						"lex:DescribeBot",
						"lex:DescribeBotAlias",
						"lex:DescribeBotChannel",
						"lex:DescribeBotLocale",
						"lex:DescribeBotVersion",
						"lex:DescribeExport",
						"lex:DescribeImport",
						"lex:DescribeIntent",
						"lex:DescribeResourcePolicy",
						"lex:DescribeSlot",
						"lex:DescribeSlotType",
						"lex:Get*",
						"lex:ListBotAliases",
						"lex:ListBotChannels",
						"lex:ListBotLocales",
						"lex:ListBots",
						"lex:ListBotVersions",
						"lex:ListBuiltInIntents",
						"lex:ListBuiltInSlotTypes",
						"lex:ListExports",
						"lex:ListImports",
						"lex:ListIntents",
						"lex:ListSlots",
						"lex:ListSlotTypes",
						"lex:ListTagsForResource",
						"license-manager:Get*",
						"license-manager:List*",
						"lightsail:GetActiveNames",
						"lightsail:GetAlarms",
						"lightsail:GetAutoSnapshots",
						"lightsail:GetBlueprints",
						"lightsail:GetBucketAccessKeys",
						"lightsail:GetBucketBundles",
						"lightsail:GetBucketMetricData",
						"lightsail:GetBuckets",
						"lightsail:GetBundles",
						"lightsail:GetCertificates",
						"lightsail:GetCloudFormationStackRecords",
						"lightsail:GetContainerAPIMetadata",
						"lightsail:GetContainerImages",
						"lightsail:GetContainerServiceDeployments",
						"lightsail:GetContainerServiceMetricData",
						"lightsail:GetContainerServicePowers",
						"lightsail:GetContainerServices",
						"lightsail:GetDisk",
						"lightsail:GetDisks",
						"lightsail:GetDiskSnapshot",
						"lightsail:GetDiskSnapshots",
						"lightsail:GetDistributionBundles",
						"lightsail:GetDistributionLatestCacheReset",
						"lightsail:GetDistributionMetricData",
						"lightsail:GetDistributions",
						"lightsail:GetDomain",
						"lightsail:GetDomains",
						"lightsail:GetExportSnapshotRecords",
						"lightsail:GetInstance",
						"lightsail:GetInstanceMetricData",
						"lightsail:GetInstancePortStates",
						"lightsail:GetInstances",
						"lightsail:GetInstanceSnapshot",
						"lightsail:GetInstanceSnapshots",
						"lightsail:GetInstanceState",
						"lightsail:GetKeyPair",
						"lightsail:GetKeyPairs",
						"lightsail:GetLoadBalancer",
						"lightsail:GetLoadBalancerMetricData",
						"lightsail:GetLoadBalancers",
						"lightsail:GetLoadBalancerTlsCertificates",
						"lightsail:GetOperation",
						"lightsail:GetOperations",
						"lightsail:GetOperationsForResource",
						"lightsail:GetRegions",
						"lightsail:GetRelationalDatabase",
						"lightsail:GetRelationalDatabaseBlueprints",
						"lightsail:GetRelationalDatabaseBundles",
						"lightsail:GetRelationalDatabaseEvents",
						"lightsail:GetRelationalDatabaseLogEvents",
						"lightsail:GetRelationalDatabaseLogStreams",
						"lightsail:GetRelationalDatabaseMetricData",
						"lightsail:GetRelationalDatabaseParameters",
						"lightsail:GetRelationalDatabases",
						"lightsail:GetRelationalDatabaseSnapshot",
						"lightsail:GetRelationalDatabaseSnapshots",
						"lightsail:GetStaticIp",
						"lightsail:GetStaticIps",
						"lightsail:Is*",
						"logs:Describe*",
						"logs:FilterLogEvents",
						"logs:Get*",
						"logs:ListTagsLogGroup",
						"logs:StartQuery",
						"logs:StopQuery",
						"logs:TestMetricFilter",
						"lookoutvision:DescribeDataset",
						"lookoutvision:DescribeModel",
						"lookoutvision:DescribeProject",
						"lookoutvision:ListDatasetEntries",
						"lookoutvision:ListModels",
						"lookoutvision:ListProjects",
						"lookoutvision:ListTagsForResource",
						"machinelearning:Describe*",
						"machinelearning:Get*",
						"macie:ListMemberAccounts",
						"macie:ListS3Resources",
						"macie2:BatchGetCustomDataIdentifiers",
						"macie2:DescribeBuckets",
						"macie2:DescribeClassificationJob",
						"macie2:DescribeOrganizationConfiguration",
						"macie2:GetAdministratorAccount",
						"macie2:GetBucketStatistics",
						"macie2:GetClassificationExportConfiguration",
						"macie2:GetCustomDataIdentifier",
						"macie2:GetFindings",
						"macie2:GetFindingsFilter",
						"macie2:GetFindingsPublicationConfiguration",
						"macie2:GetFindingStatistics",
						"macie2:GetInvitationsCount",
						"macie2:GetMacieSession",
						"macie2:GetMember",
						"macie2:GetUsageStatistics",
						"macie2:GetUsageTotals",
						"macie2:ListClassificationJobs",
						"macie2:ListCustomDataIdentifiers",
						"macie2:ListFindings",
						"macie2:ListFindingsFilters",
						"macie2:ListInvitations",
						"macie2:ListMembers",
						"macie2:ListOrganizationAdminAccounts",
						"macie2:ListTagsForResource",
						"macie2:SearchResources",
						"managedblockchain:GetNetwork",
						"managedblockchain:GetProposal",
						"managedblockchain:GetMember",
						"managedblockchain:GetNode",
						"managedblockchain:ListNetworks",
						"managedblockchain:ListProposals",
						"managedblockchain:ListProposalVotes",
						"managedblockchain:ListInvitations",
						"managedblockchain:ListMembers",
						"managedblockchain:ListNodes",
						"managedblockchain:ListTagsForResource",
						"mediaconnect:DescribeFlow",
						"mediaconnect:DescribeOffering",
						"mediaconnect:DescribeReservation",
						"mediaconnect:ListFlows",
						"mediaconvert:DescribeEndpoints",
						"mediaconvert:Get*",
						"mediaconvert:List*",
						"mediapackage:Describe*",
						"mediapackage:List*",
						"mediastore:DescribeContainer",
						"mediastore:DescribeObject",
						"mediastore:GetContainerPolicy",
						"mediastore:GetCorsPolicy",
						"mediastore:GetLifecyclePolicy",
						"mediastore:GetMetricPolicy",
						"mediastore:GetObject",
						"mediastore:ListContainers",
						"mediastore:ListItems",
						"mediastore:ListTagsForResource",
						"mgh:Describe*",
						"mgh:GetHomeRegion",
						"mgh:List*",
						"mgn:DescribeJobLogItems",
						"mgn:DescribeJobs",
						"mgn:DescribeReplicationConfigurationTemplates",
						"mgn:DescribeSourceServers",
						"mgn:GetLaunchConfiguration",
						"mgn:GetReplicationConfiguration",
						"mobileanalytics:Get*",
						"mobilehub:Describe*",
						"mobilehub:Export*",
						"mobilehub:Generate*",
						"mobilehub:Get*",
						"mobilehub:List*",
						"mobilehub:Validate*",
						"mobilehub:Verify*",
						"mobiletargeting:Get*",
						"mobiletargeting:List*",
						"monitron:GetProject",
						"monitron:GetProjectAdminUser",
						"monitron:ListProjects",
						"monitron:ListTagsForResource",
						"mq:Describe*",
						"mq:List*",
						"network-firewall:DescribeFirewall",
						"network-firewall:DescribeFirewallPolicy",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:DescribeResourcePolicy",
						"network-firewall:DescribeRuleGroup",
						"network-firewall:ListFirewallPolicies",
						"network-firewall:ListFirewalls",
						"network-firewall:ListRuleGroups",
						"network-firewall:ListTagsForResource",
						"networkmanager:DescribeGlobalNetworks",
						"networkmanager:GetConnections",
						"networkmanager:GetCustomerGatewayAssociations",
						"networkmanager:GetDevices",
						"networkmanager:GetLinkAssociations",
						"networkmanager:GetLinks",
						"networkmanager:GetSites",
						"networkmanager:GetTransitGatewayConnectPeerAssociations",
						"networkmanager:GetTransitGatewayRegistrations",
						"opsworks-cm:Describe*",
						"opsworks-cm:List*",
						"opsworks:Describe*",
						"opsworks:Get*",
						"organizations:Describe*",
						"organizations:List*",
						"outposts:Get*",
						"outposts:List*",
						"personalize:Describe*",
						"personalize:Get*",
						"personalize:List*",
						"pi:DescribeDimensionKeys",
						"pi:GetDimensionKeyDetails",
						"pi:GetResourceMetrics",
						"polly:Describe*",
						"polly:Get*",
						"polly:List*",
						"polly:SynthesizeSpeech",
						"proton:GetEnvironment",
						"proton:GetEnvironmentTemplate",
						"proton:GetEnvironmentTemplateVersion",
						"proton:GetService",
						"proton:GetServiceInstance",
						"proton:GetServiceTemplate",
						"proton:GetServiceTemplateVersion",
						"proton:ListEnvironmentAccountConnections",
						"proton:ListEnvironments",
						"proton:ListEnvironmentTemplates",
						"proton:ListServiceInstances",
						"proton:ListServices",
						"proton:ListServiceTemplates",
						"proton:ListTagsForResource",
						"qldb:DescribeJournalS3Export",
						"qldb:DescribeLedger",
						"qldb:GetBlock",
						"qldb:GetDigest",
						"qldb:GetRevision",
						"qldb:ListJournalS3Exports",
						"qldb:ListJournalS3ExportsForLedger",
						"qldb:ListLedgers",
						"qldb:ListTagsForResource",
						"ram:Get*",
						"ram:List*",
						"rds:Describe*",
						"rds:Download*",
						"rds:List*",
						"redshift:Describe*",
						"redshift:GetReservedNodeExchangeOfferings",
						"redshift:View*",
						"rekognition:CompareFaces",
						"rekognition:Detect*",
						"rekognition:List*",
						"rekognition:Search*",
						"resource-groups:Get*",
						"resource-groups:List*",
						"resource-groups:Search*",
						"robomaker:BatchDescribe*",
						"robomaker:Describe*",
						"robomaker:Get*",
						"robomaker:List*",
						"route53-recovery-cluster:Get*",
						"route53-recovery-control-config:Describe*",
						"route53-recovery-control-config:List*",
						"route53-recovery-readiness:Get*",
						"route53-recovery-readiness:List*",
						"route53:Get*",
						"route53:List*",
						"route53:Test*",
						"route53domains:Check*",
						"route53domains:Get*",
						"route53domains:List*",
						"route53domains:View*",
						"route53resolver:Get*",
						"route53resolver:List*",
						"s3-object-lambda:GetObject",
						"s3-object-lambda:GetObjectAcl",
						"s3-object-lambda:GetObjectLegalHold",
						"s3-object-lambda:GetObjectRetention",
						"s3-object-lambda:GetObjectTagging",
						"s3-object-lambda:GetObjectVersion",
						"s3-object-lambda:GetObjectVersionAcl",
						"s3-object-lambda:GetObjectVersionTagging",
						"s3-object-lambda:ListBucket",
						"s3-object-lambda:ListBucketMultipartUploads",
						"s3-object-lambda:ListBucketVersions",
						"s3-object-lambda:ListMultipartUploadParts",
						"s3:DescribeJob",
						"s3:Get*",
						"s3:List*",
						"sagemaker:Describe*",
						"sagemaker:GetSearchSuggestions",
						"sagemaker:List*",
						"sagemaker:Search",
						"savingsplans:DescribeSavingsPlanRates",
						"savingsplans:DescribeSavingsPlans",
						"savingsplans:DescribeSavingsPlansOfferingRates",
						"savingsplans:DescribeSavingsPlansOfferings",
						"savingsplans:ListTagsForResource",
						"schemas:Describe*",
						"schemas:Get*",
						"schemas:List*",
						"schemas:Search*",
						"sdb:Get*",
						"sdb:List*",
						"sdb:Select*",
						"secretsmanager:Describe*",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:List*",
						"securityhub:Describe*",
						"securityhub:Get*",
						"securityhub:List*",
						"serverlessrepo:Get*",
						"serverlessrepo:List*",
						"serverlessrepo:SearchApplications",
						"servicecatalog:Describe*",
						"servicecatalog:GetApplication",
						"servicecatalog:GetAttributeGroup",
						"servicecatalog:List*",
						"servicecatalog:Scan*",
						"servicecatalog:Search*",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicequotas:GetAssociationForServiceQuotaTemplate",
						"servicequotas:GetAWSDefaultServiceQuota",
						"servicequotas:GetRequestedServiceQuotaChange",
						"servicequotas:GetServiceQuota",
						"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:ListAWSDefaultServiceQuotas",
						"servicequotas:ListRequestedServiceQuotaChangeHistory",
						"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:ListServiceQuotas",
						"servicequotas:ListServices",
						"ses:Describe*",
						"ses:Get*",
						"ses:List*",
						"shield:Describe*",
						"shield:Get*",
						"shield:List*",
						"signer:DescribeSigningJob",
						"signer:GetSigningPlatform",
						"signer:GetSigningProfile",
						"signer:ListProfilePermissions",
						"signer:ListSigningJobs",
						"signer:ListSigningPlatforms",
						"signer:ListSigningProfiles",
						"signer:ListTagsForResource",
						"snowball:Describe*",
						"snowball:Get*",
						"snowball:List*",
						"sns:Check*",
						"sns:Get*",
						"sns:List*",
						"sqs:Get*",
						"sqs:List*",
						"sqs:Receive*",
						"ssm-contacts:DescribeEngagement",
						"ssm-contacts:DescribePage",
						"ssm-contacts:GetContact",
						"ssm-contacts:GetContactChannel",
						"ssm-contacts:ListContactChannels",
						"ssm-contacts:ListContacts",
						"ssm-contacts:ListEngagements",
						"ssm-contacts:ListPageReceipts",
						"ssm-contacts:ListPagesByContact",
						"ssm-contacts:ListPagesByEngagement",
						"ssm-incidents:GetIncidentRecord",
						"ssm-incidents:GetReplicationSet",
						"ssm-incidents:GetResourcePolicies",
						"ssm-incidents:GetResponsePlan",
						"ssm-incidents:GetTimelineEvent",
						"ssm-incidents:ListIncidentRecords",
						"ssm-incidents:ListRelatedItems",
						"ssm-incidents:ListReplicationSets",
						"ssm-incidents:ListResponsePlans",
						"ssm-incidents:ListTagsForResource",
						"ssm-incidents:ListTimelineEvents",
						"ssm:Describe*",
						"ssm:Get*",
						"ssm:List*",
						"sso-directory:Describe*",
						"sso-directory:List*",
						"sso-directory:Search*",
						"sso:Describe*",
						"sso:Get*",
						"sso:List*",
						"sso:Search*",
						"states:Describe*",
						"states:GetExecutionHistory",
						"states:List*",
						"storagegateway:Describe*",
						"storagegateway:List*",
						"sts:GetAccessKeyInfo",
						"sts:GetCallerIdentity",
						"sts:GetSessionToken",
						"support:DescribeCases",
						"swf:Count*",
						"swf:Describe*",
						"swf:Get*",
						"swf:List*",
						"synthetics:Describe*",
						"synthetics:Get*",
						"synthetics:List*",
						"tag:Get*",
						"timestream:DescribeDatabase",
						"timestream:DescribeEndpoints",
						"timestream:DescribeTable",
						"timestream:ListDatabases",
						"timestream:ListMeasures",
						"timestream:ListTables",
						"timestream:ListTagsForResource",
						"transcribe:Get*",
						"transcribe:List*",
						"transfer:Describe*",
						"transfer:List*",
						"transfer:TestIdentityProvider",
						"trustedadvisor:Describe*",
						"waf-regional:Get*",
						"waf-regional:List*",
						"waf:Get*",
						"waf:List*",
						"wafv2:CheckCapacity",
						"wafv2:Describe*",
						"wafv2:Get*",
						"wafv2:List*",
						"workdocs:CheckAlias",
						"workdocs:Describe*",
						"workdocs:Get*",
						"worklink:Describe*",
						"worklink:List*",
						"workmail:Describe*",
						"workmail:Get*",
						"workmail:List*",
						"workmail:Search*",
						"workspaces:Describe*",
						"xray:BatchGet*",
						"xray:Get*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAILL3HVNFSB6DCOWYQ",
		"version_id": "v82"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-09-19T22:19:04",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:UnassignIpv6Addresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-05-14T21:18:07",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:UnassignIpv6Addresses",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-03-18T21:51:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:UnassignIpv6Addresses",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-07T22:55:16",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:UnassignIpv6Addresses",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-05T19:32:02",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeCoipPools",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:GetCoipPoolUsage",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AllocateAddress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:UnassignIpv6Addresses",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries",
						"outposts:GetOutpostInstanceTypes"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-19T16:40:28",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeCoipPools",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:GetCoipPoolUsage",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AllocateAddress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:ReleaseAddress",
						"ec2:UnassignIpv6Addresses",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries",
						"outposts:GetOutpostInstanceTypes"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-26T19:01:48",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeCoipPools",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSubnets",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeAccountAttributes",
						"ec2:DescribeClassicLinkInstances",
						"ec2:DescribeVpcClassicLink",
						"ec2:CreateSecurityGroup",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:GetCoipPoolUsage",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:AllocateAddress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:AttachNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:AssignIpv6Addresses",
						"ec2:ReleaseAddress",
						"ec2:UnassignIpv6Addresses",
						"ec2:DescribeVpcPeeringConnections",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries",
						"outposts:GetOutpostInstanceTypes"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIMHWGGSRHLOQUICJQ",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-01-08T18:17:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:RevokeSecurityGroupIngress"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-07-10T15:54:54",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-16T19:47:43",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-11-19T22:40:08",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*"
					]
				},
				{
					"Action": [
						"kinesis:CreateStream",
						"kinesis:PutRecord",
						"kinesis:PutRecords",
						"kinesis:DescribeStream",
						"kinesis:SplitShard",
						"kinesis:MergeShards",
						"kinesis:DeleteStream",
						"kinesis:UpdateShardCount"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:kinesis:*:*:stream/aws-rds-das-*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-02-04T18:16:17",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*"
					]
				},
				{
					"Action": [
						"kinesis:CreateStream",
						"kinesis:PutRecord",
						"kinesis:PutRecords",
						"kinesis:DescribeStream",
						"kinesis:SplitShard",
						"kinesis:MergeShards",
						"kinesis:DeleteStream",
						"kinesis:UpdateShardCount"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:kinesis:*:*:stream/aws-rds-das-*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-04-16T20:12:27",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
					]
				},
				{
					"Action": [
						"kinesis:CreateStream",
						"kinesis:PutRecord",
						"kinesis:PutRecords",
						"kinesis:DescribeStream",
						"kinesis:SplitShard",
						"kinesis:MergeShards",
						"kinesis:DeleteStream",
						"kinesis:UpdateShardCount"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:kinesis:*:*:stream/aws-rds-das-*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-31T01:14:11",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
					]
				},
				{
					"Action": [
						"kinesis:CreateStream",
						"kinesis:PutRecord",
						"kinesis:PutRecords",
						"kinesis:DescribeStream",
						"kinesis:SplitShard",
						"kinesis:MergeShards",
						"kinesis:DeleteStream",
						"kinesis:UpdateShardCount"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:kinesis:*:*:stream/aws-rds-das-*"
					]
				},
				{
					"Action": [
						"cloudwatch:PutMetricData"
					],
					"Condition": {
						"StringEquals": {
							"cloudwatch:namespace": "AWS/RDS"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-21T22:31:39",
		"document": {
			"Statement": [
				{
					"Action": [
						"rds:CrossRegionCommunication"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
					]
				},
				{
					"Action": [
						"kinesis:CreateStream",
						"kinesis:PutRecord",
						"kinesis:PutRecords",
						"kinesis:DescribeStream",
						"kinesis:SplitShard",
						"kinesis:MergeShards",
						"kinesis:DeleteStream",
						"kinesis:UpdateShardCount"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:kinesis:*:*:stream/aws-rds-das-*"
					]
				},
				{
					"Action": [
						"cloudwatch:PutMetricData"
					],
					"Condition": {
						"StringEquals": {
							"cloudwatch:namespace": "AWS/RDS"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-11-21T00:08:24",
		"document": {
			"Statement": [
				{
					"Action": [
						"rds:CrossRegionCommunication"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:AllocateAddress",
						"ec2:AssociateAddress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:CreateNetworkInterface",
						"ec2:CreateSecurityGroup",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteSecurityGroup",
						"ec2:DescribeAddresses",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeCoipPools",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeLocalGatewayRouteTables",
						"ec2:DescribeLocalGatewayRouteTableVpcAssociations",
						"ec2:DescribeLocalGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeVpcs",
						"ec2:DisassociateAddress",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:ModifyVpcEndpoint",
						"ec2:ReleaseAddress",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateVpcEndpoint",
						"ec2:DescribeVpcEndpoints",
						"ec2:DeleteVpcEndpoints",
						"ec2:AssignPrivateIpAddresses",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*"
					]
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
						"arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
					]
				},
				{
					"Action": [
						"kinesis:CreateStream",
						"kinesis:PutRecord",
						"kinesis:PutRecords",
						"kinesis:DescribeStream",
						"kinesis:SplitShard",
						"kinesis:MergeShards",
						"kinesis:DeleteStream",
						"kinesis:UpdateShardCount"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:kinesis:*:*:stream/aws-rds-das-*"
					]
				},
				{
					"Action": [
						"cloudwatch:PutMetricData"
					],
					"Condition": {
						"StringEquals": {
							"cloudwatch:namespace": "AWS/RDS"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIPEU5ZOBJWKWHUIBA",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-10-10T23:04:07",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForOrganizations"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIQH6ROMVVECFVRJPK",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-11-01T06:01:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"
					],
					"Sid": "AllowDeletionOfServiceLinkedRoleForOrganizations"
				},
				{
					"Action": [
						"iam:CreateServiceLinkedRole"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AllowCreationOfServiceLinkedRoles"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIQH6ROMVVECFVRJPK",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-11-28T10:38:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudwatch:PutMetricData",
						"ds:AuthorizeApplication",
						"ds:UnauthorizeApplication",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"route53:AssociateVPCWithHostedZone"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVQ24YKVRBV5IYQ5G",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-18T13:25:32",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudwatch:PutMetricData",
						"ds:AuthorizeApplication",
						"ds:GetAuthorizedApplicationDetails",
						"ds:UnauthorizeApplication",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"route53:AssociateVPCWithHostedZone"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVQ24YKVRBV5IYQ5G",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-11-12T20:19:45",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudwatch:PutMetricData",
						"ds:AuthorizeApplication",
						"ds:GetAuthorizedApplicationDetails",
						"ds:UnauthorizeApplication",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeAddresses",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DisassociateAddress",
						"route53:AssociateVPCWithHostedZone"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVQ24YKVRBV5IYQ5G",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-06-07T21:03:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudwatch:PutMetricData",
						"ds:AuthorizeApplication",
						"ds:GetAuthorizedApplicationDetails",
						"ds:UnauthorizeApplication",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeAddresses",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DisassociateAddress",
						"route53:AssociateVPCWithHostedZone"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:DescribeLogGroups",
						"logs:DescribeLogStreams",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/fsx/*"
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/aws-fsx-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVQ24YKVRBV5IYQ5G",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-20T12:51:29",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudwatch:PutMetricData",
						"ds:AuthorizeApplication",
						"ds:GetAuthorizedApplicationDetails",
						"ds:UnauthorizeApplication",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DescribeAddresses",
						"ec2:DescribeDhcpOptions",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DisassociateAddress",
						"route53:AssociateVPCWithHostedZone"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"aws:TagKeys": "AmazonFSx.FileSystemId"
						},
						"StringEquals": {
							"ec2:CreateAction": "CreateNetworkInterface"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:network-interface/*"
					]
				},
				{
					"Action": [
						"ec2:AssignPrivateIpAddresses",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:UnassignPrivateIpAddresses"
					],
					"Condition": {
						"Null": {
							"aws:ResourceTag/AmazonFSx.FileSystemId": "false"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:network-interface/*"
					]
				},
				{
					"Action": [
						"ec2:CreateRoute",
						"ec2:ReplaceRoute",
						"ec2:DeleteRoute"
					],
					"Condition": {
						"StringEquals": {
							"aws:ResourceTag/AmazonFSx": "ManagedByAmazonFSx"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:route-table/*"
					]
				},
				{
					"Action": [
						"logs:DescribeLogGroups",
						"logs:DescribeLogStreams",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/fsx/*"
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/aws-fsx-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVQ24YKVRBV5IYQ5G",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-10-14T01:18:58",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-03-01T18:01:12",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-03-07T18:29:40",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"route53:ChangeResourceRecordSets",
						"route53:CreateHealthCheck",
						"route53:DeleteHealthCheck",
						"route53:Get*",
						"route53:List*",
						"route53:UpdateHealthCheck",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-03-22T01:20:59",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"route53:ChangeResourceRecordSets",
						"route53:CreateHealthCheck",
						"route53:DeleteHealthCheck",
						"route53:Get*",
						"route53:List*",
						"route53:UpdateHealthCheck",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance",
						"servicediscovery:UpdateInstanceCustomHealthStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-18T23:18:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"route53:ChangeResourceRecordSets",
						"route53:CreateHealthCheck",
						"route53:DeleteHealthCheck",
						"route53:Get*",
						"route53:List*",
						"route53:UpdateHealthCheck",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance",
						"servicediscovery:UpdateInstanceCustomHealthStatus"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ECSTaskManagement"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*",
					"Sid": "ECSTagging"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-24T23:16:41",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"route53:ChangeResourceRecordSets",
						"route53:CreateHealthCheck",
						"route53:DeleteHealthCheck",
						"route53:Get*",
						"route53:List*",
						"route53:UpdateHealthCheck",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance",
						"servicediscovery:UpdateInstanceCustomHealthStatus"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ECSTaskManagement"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*",
					"Sid": "ECSTagging"
				},
				{
					"Action": [
						"logs:CreateLogGroup",
						"logs:DescribeLogGroups",
						"logs:PutRetentionPolicy"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*",
					"Sid": "CWLogGroupManagement"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:DescribeLogStreams",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*:log-stream:*",
					"Sid": "CWLogStreamManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-21T19:49:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"route53:ChangeResourceRecordSets",
						"route53:CreateHealthCheck",
						"route53:DeleteHealthCheck",
						"route53:Get*",
						"route53:List*",
						"route53:UpdateHealthCheck",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance",
						"servicediscovery:UpdateInstanceCustomHealthStatus"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ECSTaskManagement"
				},
				{
					"Action": [
						"autoscaling:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AutoScaling"
				},
				{
					"Action": [
						"autoscaling:DeletePolicy",
						"autoscaling:PutScalingPolicy",
						"autoscaling:SetInstanceProtection",
						"autoscaling:UpdateAutoScalingGroup"
					],
					"Condition": {
						"Null": {
							"autoscaling:ResourceTag/AmazonECSManaged": "false"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AutoScalingManagement"
				},
				{
					"Action": [
						"autoscaling-plans:CreateScalingPlan",
						"autoscaling-plans:DeleteScalingPlan",
						"autoscaling-plans:DescribeScalingPlans"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AutoScalingPlanManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudwatch:*:*:alarm:*",
					"Sid": "CWAlarmManagement"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*",
					"Sid": "ECSTagging"
				},
				{
					"Action": [
						"logs:CreateLogGroup",
						"logs:DescribeLogGroups",
						"logs:PutRetentionPolicy"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*",
					"Sid": "CWLogGroupManagement"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:DescribeLogStreams",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*:log-stream:*",
					"Sid": "CWLogStreamManagement"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-01-13T20:04:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AttachNetworkInterface",
						"ec2:CreateNetworkInterface",
						"ec2:CreateNetworkInterfacePermission",
						"ec2:DeleteNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:Describe*",
						"ec2:DetachNetworkInterface",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets",
						"route53:ChangeResourceRecordSets",
						"route53:CreateHealthCheck",
						"route53:DeleteHealthCheck",
						"route53:Get*",
						"route53:List*",
						"route53:UpdateHealthCheck",
						"servicediscovery:DeregisterInstance",
						"servicediscovery:Get*",
						"servicediscovery:List*",
						"servicediscovery:RegisterInstance",
						"servicediscovery:UpdateInstanceCustomHealthStatus"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ECSTaskManagement"
				},
				{
					"Action": [
						"autoscaling:Describe*"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AutoScaling"
				},
				{
					"Action": [
						"autoscaling:DeletePolicy",
						"autoscaling:PutScalingPolicy",
						"autoscaling:SetInstanceProtection",
						"autoscaling:UpdateAutoScalingGroup"
					],
					"Condition": {
						"Null": {
							"autoscaling:ResourceTag/AmazonECSManaged": "false"
						}
					},
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AutoScalingManagement"
				},
				{
					"Action": [
						"autoscaling-plans:CreateScalingPlan",
						"autoscaling-plans:DeleteScalingPlan",
						"autoscaling-plans:DescribeScalingPlans"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "AutoScalingPlanManagement"
				},
				{
					"Action": [
						"cloudwatch:DeleteAlarms",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:PutMetricAlarm"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudwatch:*:*:alarm:*",
					"Sid": "CWAlarmManagement"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*",
					"Sid": "ECSTagging"
				},
				{
					"Action": [
						"logs:CreateLogGroup",
						"logs:DescribeLogGroups",
						"logs:PutRetentionPolicy"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*",
					"Sid": "CWLogGroupManagement"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:DescribeLogStreams",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*:log-stream:*",
					"Sid": "CWLogStreamManagement"
				},
				{
					"Action": [
						"ssm:DescribeSessions"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "ExecuteCommandSessionManagement"
				},
				{
					"Action": [
						"ssm:StartSession"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ecs:*:*:task/*",
						"arn:aws:ssm:*:*:document/AmazonECS-ExecuteInteractiveCommand"
					],
					"Sid": "ExecuteCommand"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIVUWKCAI7URU4WUEI",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-02-06T18:39:46",
		"document": {
			"Statement": [
				{
					"Action": "*",
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIWMBCKSKIEE64ZLYK",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-11-13T19:20:08",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-11-15T21:25:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-07-25T22:14:20",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-24T23:36:39",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-01-22T21:46:17",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-20T21:01:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-04T18:02:45",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-31T19:21:40",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-11-11T19:27:12",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:DescribeComplianceByConfigRule",
						"config:DescribeComplianceByResource",
						"config:DescribeRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-12-11T17:30:16",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:DescribeComplianceByConfigRule",
						"config:DescribeComplianceByResource",
						"config:DescribeRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "organizations:DescribeOrganization",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "cloudformation:ListStackSets",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"cloudformation:ListStackInstances",
						"cloudformation:DescribeStackSetOperation",
						"cloudformation:DeleteStackSet"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"
				},
				{
					"Action": "cloudformation:DeleteStackInstances",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:type/resource/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v10"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-01-05T23:57:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource",
						"ssm:GetCalendarState"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:DescribeComplianceByConfigRule",
						"config:DescribeComplianceByResource",
						"config:DescribeRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "organizations:DescribeOrganization",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "cloudformation:ListStackSets",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"cloudformation:ListStackInstances",
						"cloudformation:DescribeStackSetOperation",
						"cloudformation:DeleteStackSet"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"
				},
				{
					"Action": "cloudformation:DeleteStackInstances",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:type/resource/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v11"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-03-23T18:12:57",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource",
						"ssm:GetCalendarState"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ssm:UpdateServiceSetting",
						"ssm:GetServiceSetting"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:servicesetting/ssm/opsitem/*",
						"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:DescribeComplianceByConfigRule",
						"config:DescribeComplianceByResource",
						"config:DescribeRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "organizations:DescribeOrganization",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "cloudformation:ListStackSets",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"cloudformation:ListStackInstances",
						"cloudformation:DescribeStackSetOperation",
						"cloudformation:DeleteStackSet"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"
				},
				{
					"Action": "cloudformation:DeleteStackInstances",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:type/resource/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v12"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-04-26T20:43:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:CancelCommand",
						"ssm:GetCommandInvocation",
						"ssm:ListCommandInvocations",
						"ssm:ListCommands",
						"ssm:SendCommand",
						"ssm:GetAutomationExecution",
						"ssm:GetParameters",
						"ssm:StartAutomationExecution",
						"ssm:ListTagsForResource",
						"ssm:GetCalendarState"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ssm:UpdateServiceSetting",
						"ssm:GetServiceSetting"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:servicesetting/ssm/opsitem/*",
						"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/*"
					]
				},
				{
					"Action": [
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"lambda:InvokeFunction"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:lambda:*:*:function:SSM*",
						"arn:aws:lambda:*:*:function:*:SSM*"
					]
				},
				{
					"Action": [
						"states:DescribeExecution",
						"states:StartExecution"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:states:*:*:stateMachine:SSM*",
						"arn:aws:states:*:*:execution:SSM*"
					]
				},
				{
					"Action": [
						"resource-groups:ListGroups",
						"resource-groups:ListGroupResources",
						"resource-groups:GetGroupQuery"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"cloudformation:DescribeStacks",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"tag:GetResources"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"compute-optimizer:GetEC2InstanceRecommendations",
						"compute-optimizer:GetEnrollmentStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"support:DescribeTrustedAdvisorChecks",
						"support:DescribeTrustedAdvisorCheckSummaries",
						"support:DescribeTrustedAdvisorCheckResult",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"config:DescribeComplianceByConfigRule",
						"config:DescribeComplianceByResource",
						"config:DescribeRemediationConfigurations",
						"config:DescribeConfigurationRecorders"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ssm.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "organizations:DescribeOrganization",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "cloudformation:ListStackSets",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"cloudformation:ListStackInstances",
						"cloudformation:DescribeStackSetOperation",
						"cloudformation:DeleteStackSet"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"
				},
				{
					"Action": "cloudformation:DeleteStackInstances",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*",
						"arn:aws:cloudformation:*:*:type/resource/*"
					]
				},
				{
					"Action": [
						"events:PutRule",
						"events:PutTargets"
					],
					"Condition": {
						"StringEquals": {
							"events:ManagedBy": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"events:RemoveTargets",
						"events:DeleteRule"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:events:*:*:rule/SSMExplorerManagedRule"
					]
				},
				{
					"Action": "events:DescribeRule",
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "securityhub:DescribeHub",
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXJ26NUGBA3TCV7EC",
		"version_id": "v13"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-03-15T17:22:12",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:DescribeAssociation",
						"ssm:GetDeployablePatchSnapshotForInstance",
						"ssm:GetDocument",
						"ssm:DescribeDocument",
						"ssm:GetManifest",
						"ssm:GetParameters",
						"ssm:ListAssociations",
						"ssm:ListInstanceAssociations",
						"ssm:PutInventory",
						"ssm:PutComplianceItems",
						"ssm:PutConfigurePackageResult",
						"ssm:UpdateAssociationStatus",
						"ssm:UpdateInstanceAssociationStatus",
						"ssm:UpdateInstanceInformation"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssmmessages:CreateControlChannel",
						"ssmmessages:CreateDataChannel",
						"ssmmessages:OpenControlChannel",
						"ssmmessages:OpenDataChannel"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2messages:AcknowledgeMessage",
						"ec2messages:DeleteMessage",
						"ec2messages:FailMessage",
						"ec2messages:GetEndpoint",
						"ec2messages:GetMessages",
						"ec2messages:SendReply"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXSHM2BNB2D3AXXRU",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-23T16:54:21",
		"document": {
			"Statement": [
				{
					"Action": [
						"ssm:DescribeAssociation",
						"ssm:GetDeployablePatchSnapshotForInstance",
						"ssm:GetDocument",
						"ssm:DescribeDocument",
						"ssm:GetManifest",
						"ssm:GetParameter",
						"ssm:GetParameters",
						"ssm:ListAssociations",
						"ssm:ListInstanceAssociations",
						"ssm:PutInventory",
						"ssm:PutComplianceItems",
						"ssm:PutConfigurePackageResult",
						"ssm:UpdateAssociationStatus",
						"ssm:UpdateInstanceAssociationStatus",
						"ssm:UpdateInstanceInformation"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssmmessages:CreateControlChannel",
						"ssmmessages:CreateDataChannel",
						"ssmmessages:OpenControlChannel",
						"ssmmessages:OpenDataChannel"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2messages:AcknowledgeMessage",
						"ec2messages:DeleteMessage",
						"ec2messages:FailMessage",
						"ec2messages:GetEndpoint",
						"ec2messages:GetMessages",
						"ec2messages:SendReply"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIXSHM2BNB2D3AXXRU",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-09-18T18:51:54",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:StartInstances",
						"ec2:StopInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringLike": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIZJJBQNXQYVKTEXGM",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-11-15T00:03:05",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:StartInstances",
						"ec2:StopInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIZJJBQNXQYVKTEXGM",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-06-07T21:00:25",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:StartInstances",
						"ec2:StopInstances",
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringNotEquals": {
							"ec2:InstanceMarketType": "spot"
						}
					},
					"Effect": "Deny",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIZJJBQNXQYVKTEXGM",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-12-12T00:13:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeInstances",
						"ec2:StartInstances",
						"ec2:StopInstances",
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringNotEquals": {
							"ec2:InstanceMarketType": "spot"
						}
					},
					"Effect": "Deny",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"iam:PassRole"
					],
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"StringEquals": {
							"ec2:CreateAction": "RunInstances"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAIZJJBQNXQYVKTEXGM",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-04-19T18:04:44",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeFleets",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:getUser",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeDirectories",
						"ds:describeSnapshots",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeClassicLinkInstances",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeExportTasks",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunctionConfiguration",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeChapCredentials",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-06T20:57:29",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeFleets",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:getUser",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeDirectories",
						"ds:describeSnapshots",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeClassicLinkInstances",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeExportTasks",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThings",
						"iot:listTopicRules",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunctionConfiguration",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeModel",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeTrainingJob",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeChapCredentials",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-11-05T20:12:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:getGroup",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeStream",
						"dynamodb:listStreams",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeClassicLinkInstances",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:listClusters",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancingv2:describeListenerCertificates",
						"elasticloadbalancingv2:describeListeners",
						"elasticloadbalancingv2:describeLoadBalancerAttributes",
						"elasticloadbalancingv2:describeLoadBalancers",
						"elasticloadbalancingv2:describeRules",
						"elasticloadbalancingv2:describeSSLPolicies",
						"elasticloadbalancingv2:describeTags",
						"elasticloadbalancingv2:describeTargetGroupAttributes",
						"elasticloadbalancingv2:describeTargetGroups",
						"elasticloadbalancingv2:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEvents",
						"health:describeEventTypes",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:listChannels",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:getContainerPolicy",
						"mediastore:listContainers",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeModel",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-02-06T18:06:11",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeClassicLinkInstances",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:listClusters",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEvents",
						"health:describeEventTypes",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listOfferings",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:getContainerPolicy",
						"mediastore:listContainers",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:headBucket",
						"s3:listAllMyBuckets",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeModel",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-23T22:01:08",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlans",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"budgets:describeBudget",
						"budgets:describeBudgets",
						"budgets:describeNotificationsForBudget",
						"budgets:describeSubscribersForNotification",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeClassicLinkInstances",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGateways",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEvents",
						"health:describeEventTypes",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:headBucket",
						"s3:listAllMyBuckets",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-09-09T20:15:28",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:headBucket",
						"s3:listAllMyBuckets",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-17T21:49:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:headBucket",
						"s3:listAllMyBuckets",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getDocument",
						"ssm:getInventory",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getParameterHistory",
						"ssm:getParameters",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listInventoryEntries",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-12-16T19:39:42",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listBucket",
						"s3:listAllMyBuckets",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-03-10T18:55:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConfiguration",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listVersionsByFunction",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceAccessDetails",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAutomationExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-29T18:42:38",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:getDataSourceSyncJobHistory",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAssociationExecutions",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociationVersions",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v10"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-09T23:29:32",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:getDataSourceSyncJobHistory",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listCompilationJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAssociationExecutions",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociationVersions",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v11"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-26T19:01:32",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelines",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:getDataSourceSyncJobHistory",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeDomain",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listDomains",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listProcessingJobs",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAssociationExecutions",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociationVersions",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v12"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-10-13T17:46:33",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:getDataSourceSyncJobHistory",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputSecurityGroup",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeDomain",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listDomains",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listProcessingJobs",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAssociationExecutions",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociationVersions",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v13"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-01-28T20:00:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationUtilization",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndPoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listPackages",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listDeployments",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailViolations",
						"controltower:listGuardrailsForTarget",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeLocalGateways",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ec2:searchLocalGatewayRoutes",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeRule",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedEntities",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEvents",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:getDataSourceSyncJobHistory",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:listApplications",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplateVersions",
						"quicksight:listTemplates",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeDomain",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelPackage",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listDomains",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelPackages",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listProcessingJobs",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAssociationExecutions",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociationVersions",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v14"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-03-23T17:45:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeInstanceRefreshes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupPlans",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getCostAndUsageWithResources",
						"ce:getCostForecast",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationPurchaseRecommendation",
						"ce:getReservationUtilization",
						"ce:getRightsizingRecommendation",
						"ce:getSavingsPlansCoverage",
						"ce:getSavingsPlansPurchaseRecommendation",
						"ce:getSavingsPlansUtilization",
						"ce:getSavingsPlansUtilizationDetails",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:describeStacks",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudformation:listStacks",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:describeAnomalyDetectors",
						"cloudwatch:getDashboard",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndPoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listPackages",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listDeployments",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"compute-optimizer:getEBSVolumeRecommendations",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorderStatus",
						"config:describeConfigurationRecorders",
						"config:describeDeliveryChannelStatus",
						"config:describeDeliveryChannels",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailViolations",
						"controltower:listGuardrailsForTarget",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"databrew:describeDataset",
						"databrew:describeJob",
						"databrew:describeProject",
						"databrew:describeRecipe",
						"databrew:listDatasets",
						"databrew:listJobRuns",
						"databrew:listJobs",
						"databrew:listProjects",
						"databrew:listRecipes",
						"databrew:listRecipeVersions",
						"databrew:listTagsForResource",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationObjectStorage",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpointTypes",
						"dms:describeEndpoints",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdFormat",
						"ec2:describeIdentityIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstanceStatus",
						"ec2:describeInstances",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLaunchTemplates",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeLocalGateways",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeTransitGateways",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumeStatus",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ec2:searchLocalGatewayRoutes",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeEventBus",
						"events:describeEventSource",
						"events:describePartnerEventSource",
						"events:describeRule",
						"events:listEventBuses",
						"events:listEventSources",
						"events:listPartnerEventSourceAccounts",
						"events:listPartnerEventSources",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeDataRepositoryTasks",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:checkSchemaVersionValidity",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getRegistry",
						"glue:getSchema",
						"glue:getSchemaByDefinition",
						"glue:getSchemaVersion",
						"glue:getSchemaVersionsDiff",
						"glue:getTable",
						"glue:getTableVersions",
						"glue:getTables",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"glue:listRegistries",
						"glue:listSchemas",
						"glue:listSchemaVersions",
						"glue:querySchemaVersionMetadata",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listCoreDefinitions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listDeviceDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listGroupVersions",
						"greengrass:listGroups",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getIPSet",
						"guardduty:getInvitationsCount",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listIPSets",
						"guardduty:listInvitations",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedAccountsForOrganization",
						"health:describeAffectedEntities",
						"health:describeAffectedEntitiesForOrganization",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventTypes",
						"health:describeEventDetailsForOrganization",
						"health:describeEvents",
						"health:describeEventsForOrganization",
						"health:describeHealthServiceStatusForOrganization",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getSSHPublicKey",
						"iam:getServerCertificate",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listSSHPublicKeys",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getContainerRecipe",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listContainerRecipes",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThingTypes",
						"iot:listThings",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssets",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:describeApplicationSnapshot",
						"kinesisanalytics:listApplications",
						"kinesisanalytics:listApplicationSnapshots",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayerVersions",
						"lambda:listLayers",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBotVersions",
						"lex:getBots",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntentVersions",
						"lex:getIntents",
						"lex:getSlotType",
						"lex:getSlotTypeVersions",
						"lex:getSlotTypes",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getDisk",
						"lightsail:getDisks",
						"lightsail:getDiskSnapshot",
						"lightsail:getDiskSnapshots",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getExportSnapshotRecords",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getInstances",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getLoadBalancer",
						"lightsail:getLoadBalancers",
						"lightsail:getLoadBalancerTlsCertificates",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getRelationalDatabase",
						"lightsail:getRelationalDatabases",
						"lightsail:getRelationalDatabaseSnapshot",
						"lightsail:getRelationalDatabaseSnapshots",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconnect:describeFlow",
						"mediaconnect:listEntitlements",
						"mediaconnect:listFlows",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobTemplates",
						"mediaconvert:listJobs",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputSecurityGroups",
						"medialive:listInputs",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"network-firewall:describeFirewall",
						"network-firewall:describeFirewallPolicy",
						"network-firewall:describeLoggingConfiguration",
						"network-firewall:describeRuleGroup",
						"network-firewall:listFirewallPolicies",
						"network-firewall:listFirewalls",
						"network-firewall:listRuleGroups",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStackSummary",
						"opsworks:describeStacks",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutionVersions",
						"personalize:listSolutions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplateVersions",
						"quicksight:listTemplates",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBClusters",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEventSubscriptions",
						"rds:describeEvents",
						"rds:describeExportTasks",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeClusters",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEventSubscriptions",
						"redshift:describeEvents",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getResolverDnssecConfig",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listResolverDnssecConfigs",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAction",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeArtifact",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeContext",
						"sagemaker:describeDataQualityJobDefinition",
						"sagemaker:describeDevice",
						"sagemaker:describeDeviceFleet",
						"sagemaker:describeDomain",
						"sagemaker:describeEdgePackagingJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeFeatureGroup",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeImage",
						"sagemaker:describeImageVersion",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelBiasJobDefinition",
						"sagemaker:describeModelExplainabilityJobDefinition",
						"sagemaker:describeModelPackage",
						"sagemaker:describeModelPackageGroup",
						"sagemaker:describeModelQualityJobDefinition",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describePipeline",
						"sagemaker:describePipelineDefinitionForExecution",
						"sagemaker:describePipelineExecution",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeProject",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listActions",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listArtifacts",
						"sagemaker:listAssociations",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listContexts",
						"sagemaker:listDataQualityJobDefinitions",
						"sagemaker:listDeviceFleets",
						"sagemaker:listDevices",
						"sagemaker:listDomains",
						"sagemaker:listEdgePackagingJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFeatureGroups",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listImages",
						"sagemaker:listImageVersions",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelBiasJobDefinitions",
						"sagemaker:listModelExplainabilityJobDefinitions",
						"sagemaker:listModelPackageGroups",
						"sagemaker:listModelPackages",
						"sagemaker:listModelQualityJobDefinitions",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listPipelineExecutions",
						"sagemaker:listPipelineExecutionSteps",
						"sagemaker:listPipelineParametersForExecution",
						"sagemaker:listPipelines",
						"sagemaker:listProcessingJobs",
						"sagemaker:listProjects",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecretVersionIds",
						"secretsmanager:listSecrets",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAssociationExecutions",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInstancePatches",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroupState",
						"ssm:describePatchGroups",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociationVersions",
						"ssm:listAssociations",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocumentVersions",
						"ssm:listDocuments",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v15"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-07-01T21:52:12",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"airflow:getEnvironment",
						"airflow:listEnvironments",
						"airflow:listTagsForResource",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"appflow:describeConnectorEntity",
						"appflow:describeConnectorProfiles",
						"appflow:describeFlow",
						"appflow:listFlows",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"auditmanager:getAccountStatus",
						"auditmanager:getDelegations",
						"auditmanager:listAssessmentFrameworks",
						"auditmanager:listAssessmentReports",
						"auditmanager:listAssessments",
						"auditmanager:listControls",
						"auditmanager:listKeywordsForDataSource",
						"auditmanager:listNotifications",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeInstanceRefreshes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlans",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getCostAndUsageWithResources",
						"ce:getCostForecast",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationPurchaseRecommendation",
						"ce:getReservationUtilization",
						"ce:getRightsizingRecommendation",
						"ce:getSavingsPlansCoverage",
						"ce:getSavingsPlansPurchaseRecommendation",
						"ce:getSavingsPlansUtilization",
						"ce:getSavingsPlansUtilizationDetails",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:describeAnomalyDetectors",
						"cloudwatch:describeInsightRules",
						"cloudwatch:getDashboard",
						"cloudwatch:getInsightRuleReport",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndPoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackages",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEBSVolumeRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailsForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"databrew:describeDataset",
						"databrew:describeJob",
						"databrew:describeProject",
						"databrew:describeRecipe",
						"databrew:listDatasets",
						"databrew:listJobRuns",
						"databrew:listJobs",
						"databrew:listProjects",
						"databrew:listRecipes",
						"databrew:listRecipeVersions",
						"databrew:listTagsForResource",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationObjectStorage",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGateways",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGateways",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ec2:searchLocalGatewayRoutes",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeRepositories",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeApiDestination",
						"events:describeEventBus",
						"events:describeEventSource",
						"events:describePartnerEventSource",
						"events:describeRule",
						"events:listApiDestinations",
						"events:listConnections",
						"events:listEventBuses",
						"events:listEventSources",
						"events:listPartnerEventSourceAccounts",
						"events:listPartnerEventSources",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeDataRepositoryTasks",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:checkSchemaVersionValidity",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getRegistry",
						"glue:getSchema",
						"glue:getSchemaByDefinition",
						"glue:getSchemaVersion",
						"glue:getSchemaVersionsDiff",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"glue:listRegistries",
						"glue:listSchemas",
						"glue:listSchemaVersions",
						"glue:querySchemaVersionMetadata",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedAccountsForOrganization",
						"health:describeAffectedEntities",
						"health:describeAffectedEntitiesForOrganization",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventDetailsForOrganization",
						"health:describeEvents",
						"health:describeEventsForOrganization",
						"health:describeEventTypes",
						"health:describeHealthServiceStatusForOrganization",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getContainerRecipe",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listContainerRecipes",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssets",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"iotwireless:getDestination",
						"iotwireless:getDeviceProfile",
						"iotwireless:getPartnerAccount",
						"iotwireless:getServiceEndpoint",
						"iotwireless:getServiceProfile",
						"iotwireless:getWirelessDevice",
						"iotwireless:getWirelessDeviceStatistics",
						"iotwireless:getWirelessGateway",
						"iotwireless:getWirelessGatewayCertificate",
						"iotwireless:getWirelessGatewayFirmwareInformation",
						"iotwireless:getWirelessGatewayStatistics",
						"iotwireless:getWirelessGatewayTask",
						"iotwireless:getWirelessGatewayTaskDefinition",
						"iotwireless:listDestinations",
						"iotwireless:listDeviceProfiles",
						"iotwireless:listPartnerAccounts",
						"iotwireless:listServiceProfiles",
						"iotwireless:listTagsForResource",
						"iotwireless:listWirelessDevices",
						"iotwireless:listWirelessGateways",
						"iotwireless:listWirelessGatewayTaskDefinitions",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:describeApplicationSnapshot",
						"kinesisanalytics:listApplications",
						"kinesisanalytics:listApplicationSnapshots",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listLayers",
						"lambda:listLayerVersions",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getAlarms",
						"lightsail:getAutoSnapshots",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getCertificates",
						"lightsail:getContainerImages",
						"lightsail:getContainerServiceDeployments",
						"lightsail:getContainerServices",
						"lightsail:getDisk",
						"lightsail:getDisks",
						"lightsail:getDiskSnapshot",
						"lightsail:getDiskSnapshots",
						"lightsail:getDistributions",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getExportSnapshotRecords",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getLoadBalancer",
						"lightsail:getLoadBalancers",
						"lightsail:getLoadBalancerTlsCertificates",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getRelationalDatabase",
						"lightsail:getRelationalDatabases",
						"lightsail:getRelationalDatabaseSnapshot",
						"lightsail:getRelationalDatabaseSnapshots",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"lookoutmetrics:describeAlert",
						"lookoutmetrics:describeAnomalyDetector",
						"lookoutmetrics:describeMetricSet",
						"lookoutmetrics:getAnomalyGroup",
						"lookoutmetrics:getDataQualityMetrics",
						"lookoutmetrics:getFeedback",
						"lookoutmetrics:listAlerts",
						"lookoutmetrics:listAnomalyDetectors",
						"lookoutmetrics:listAnomalyGroupSummaries",
						"lookoutmetrics:listMetricSets",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconnect:describeFlow",
						"mediaconnect:listEntitlements",
						"mediaconnect:listFlows",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mgn:describeJobLogItems",
						"mgn:describeJobs",
						"mgn:describeReplicationConfigurationTemplates",
						"mgn:describeSourceServers",
						"mgn:getLaunchConfiguration",
						"mgn:getReplicationConfiguration",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"network-firewall:describeFirewall",
						"network-firewall:describeFirewallPolicy",
						"network-firewall:describeLoggingConfiguration",
						"network-firewall:describeRuleGroup",
						"network-firewall:listFirewallPolicies",
						"network-firewall:listFirewalls",
						"network-firewall:listRuleGroups",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"organizations:listAccounts",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutions",
						"personalize:listSolutionVersions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplates",
						"quicksight:listTemplateVersions",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeExportTasks",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"redshift-data:describeStatement",
						"redshift-data:listStatements",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getFirewallConfig",
						"route53resolver:getFirewallDomainList",
						"route53resolver:getFirewallRuleGroup",
						"route53resolver:getFirewallRuleGroupAssociation",
						"route53resolver:getResolverDnssecConfig",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listFirewallConfigs",
						"route53resolver:listFirewallDomainLists",
						"route53resolver:listFirewallDomains",
						"route53resolver:listFirewallRuleGroupAssociations",
						"route53resolver:listFirewallRuleGroups",
						"route53resolver:listFirewallRules",
						"route53resolver:listResolverDnssecConfigs",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAccessPointConfigurationForObjectLambda",
						"s3:getAccessPointForObjectLambda",
						"s3:getAccessPointPolicyStatusForObjectLambda",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAccessPointsForObjectLambda",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAction",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeArtifact",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeContext",
						"sagemaker:describeDataQualityJobDefinition",
						"sagemaker:describeDevice",
						"sagemaker:describeDeviceFleet",
						"sagemaker:describeDomain",
						"sagemaker:describeEdgePackagingJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeFeatureGroup",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeImage",
						"sagemaker:describeImageVersion",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelBiasJobDefinition",
						"sagemaker:describeModelExplainabilityJobDefinition",
						"sagemaker:describeModelPackage",
						"sagemaker:describeModelPackageGroup",
						"sagemaker:describeModelQualityJobDefinition",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describePipeline",
						"sagemaker:describePipelineDefinitionForExecution",
						"sagemaker:describePipelineExecution",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeProject",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listActions",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listArtifacts",
						"sagemaker:listAssociations",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listContexts",
						"sagemaker:listDataQualityJobDefinitions",
						"sagemaker:listDeviceFleets",
						"sagemaker:listDevices",
						"sagemaker:listDomains",
						"sagemaker:listEdgePackagingJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFeatureGroups",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listImages",
						"sagemaker:listImageVersions",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelBiasJobDefinitions",
						"sagemaker:listModelExplainabilityJobDefinitions",
						"sagemaker:listModelPackageGroups",
						"sagemaker:listModelPackages",
						"sagemaker:listModelQualityJobDefinitions",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listPipelineExecutions",
						"sagemaker:listPipelineExecutionSteps",
						"sagemaker:listPipelineParametersForExecution",
						"sagemaker:listPipelines",
						"sagemaker:listProcessingJobs",
						"sagemaker:listProjects",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutions",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeOpsItems",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getOpsItem",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociations",
						"ssm:listAssociationVersions",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listOpsItemEvents",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"synthetics:describeCanaries",
						"synthetics:describeCanariesLastRun",
						"synthetics:describeRuntimeVersions",
						"synthetics:getCanary",
						"synthetics:getCanaryRuns",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v16"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-09-16T21:02:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"airflow:getEnvironment",
						"airflow:listEnvironments",
						"airflow:listTagsForResource",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"appflow:describeConnectorEntity",
						"appflow:describeConnectorProfiles",
						"appflow:describeFlow",
						"appflow:listFlows",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"applicationinsights:describeComponentConfiguration",
						"applicationinsights:describeComponentConfigurationRecommendation",
						"applicationinsights:listApplications",
						"applicationinsights:listComponents",
						"applicationinsights:listConfigurationHistory",
						"applicationinsights:listLogPatterns",
						"applicationinsights:listLogPatternSets",
						"appmesh:describeGatewayRoute",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualGateway",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listGatewayRoutes",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listTagsForResource",
						"appmesh:listVirtualGateways",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"apprunner:describeAutoScalingConfiguration",
						"apprunner:describeCustomDomains",
						"apprunner:describeOperation",
						"apprunner:describeService",
						"apprunner:listAutoScalingConfigurations",
						"apprunner:listConnections",
						"apprunner:listOperations",
						"apprunner:listServices",
						"apprunner:listTagsForResource",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"auditmanager:getAccountStatus",
						"auditmanager:getDelegations",
						"auditmanager:listAssessmentFrameworks",
						"auditmanager:listAssessmentReports",
						"auditmanager:listAssessments",
						"auditmanager:listControls",
						"auditmanager:listKeywordsForDataSource",
						"auditmanager:listNotifications",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeInstanceRefreshes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlans",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getCostAndUsageWithResources",
						"ce:getCostForecast",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationPurchaseRecommendation",
						"ce:getReservationUtilization",
						"ce:getRightsizingRecommendation",
						"ce:getSavingsPlansCoverage",
						"ce:getSavingsPlansPurchaseRecommendation",
						"ce:getSavingsPlansUtilization",
						"ce:getSavingsPlansUtilizationDetails",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:describeAnomalyDetectors",
						"cloudwatch:describeInsightRules",
						"cloudwatch:getDashboard",
						"cloudwatch:getInsightRuleReport",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndPoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackages",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEBSVolumeRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailsForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"databrew:describeDataset",
						"databrew:describeJob",
						"databrew:describeProject",
						"databrew:describeRecipe",
						"databrew:listDatasets",
						"databrew:listJobRuns",
						"databrew:listJobs",
						"databrew:listProjects",
						"databrew:listRecipes",
						"databrew:listRecipeVersions",
						"databrew:listTagsForResource",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationObjectStorage",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:acceptReservedInstancesExchangeQuote",
						"ec2:cancelReservedInstancesListing",
						"ec2:createReservedInstancesListing",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGateways",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGateways",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:modifyReservedInstances",
						"ec2:purchaseReservedInstancesOffering",
						"ec2:searchLocalGatewayRoutes",
						"ecr-public:describeImages",
						"ecr-public:describeImageTags",
						"ecr-public:describeRegistries",
						"ecr-public:describeRepositories",
						"ecr-public:getRegistryCatalogData",
						"ecr-public:getRepositoryCatalogData",
						"ecr-public:getRepositoryPolicy",
						"ecr-public:listTagsForResource",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeImageScanFindings",
						"ecr:describeRegistry",
						"ecr:describeRepositories",
						"ecr:getLifecyclePolicy",
						"ecr:getRegistryPolicy",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecr:listTagsForResource",
						"ecs:describeCapacityProviders",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:describeTaskSets",
						"ecs:listAccountSettings",
						"ecs:listAttributes",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTagsForResource",
						"ecs:listTaskDefinitionFamilies",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeApiDestination",
						"events:describeEventBus",
						"events:describeEventSource",
						"events:describePartnerEventSource",
						"events:describeRule",
						"events:listApiDestinations",
						"events:listConnections",
						"events:listEventBuses",
						"events:listEventSources",
						"events:listPartnerEventSourceAccounts",
						"events:listPartnerEventSources",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeDataRepositoryTasks",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:checkSchemaVersionValidity",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getRegistry",
						"glue:getSchema",
						"glue:getSchemaByDefinition",
						"glue:getSchemaVersion",
						"glue:getSchemaVersionsDiff",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"glue:listRegistries",
						"glue:listSchemas",
						"glue:listSchemaVersions",
						"glue:querySchemaVersionMetadata",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedAccountsForOrganization",
						"health:describeAffectedEntities",
						"health:describeAffectedEntitiesForOrganization",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventDetailsForOrganization",
						"health:describeEvents",
						"health:describeEventsForOrganization",
						"health:describeEventTypes",
						"health:describeHealthServiceStatusForOrganization",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getContainerRecipe",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listContainerRecipes",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssets",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"iotwireless:getDestination",
						"iotwireless:getDeviceProfile",
						"iotwireless:getPartnerAccount",
						"iotwireless:getServiceEndpoint",
						"iotwireless:getServiceProfile",
						"iotwireless:getWirelessDevice",
						"iotwireless:getWirelessDeviceStatistics",
						"iotwireless:getWirelessGateway",
						"iotwireless:getWirelessGatewayCertificate",
						"iotwireless:getWirelessGatewayFirmwareInformation",
						"iotwireless:getWirelessGatewayStatistics",
						"iotwireless:getWirelessGatewayTask",
						"iotwireless:getWirelessGatewayTaskDefinition",
						"iotwireless:listDestinations",
						"iotwireless:listDeviceProfiles",
						"iotwireless:listPartnerAccounts",
						"iotwireless:listServiceProfiles",
						"iotwireless:listTagsForResource",
						"iotwireless:listWirelessDevices",
						"iotwireless:listWirelessGateways",
						"iotwireless:listWirelessGatewayTaskDefinitions",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:describeApplicationSnapshot",
						"kinesisanalytics:listApplications",
						"kinesisanalytics:listApplicationSnapshots",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getCodeSigningConfig",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionCodeSigningConfig",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listCodeSigningConfigs",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listFunctionsByCodeSigningConfig",
						"lambda:listLayers",
						"lambda:listLayerVersions",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getAlarms",
						"lightsail:getAutoSnapshots",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getCertificates",
						"lightsail:getContainerImages",
						"lightsail:getContainerServiceDeployments",
						"lightsail:getContainerServices",
						"lightsail:getDisk",
						"lightsail:getDisks",
						"lightsail:getDiskSnapshot",
						"lightsail:getDiskSnapshots",
						"lightsail:getDistributions",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getExportSnapshotRecords",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getLoadBalancer",
						"lightsail:getLoadBalancers",
						"lightsail:getLoadBalancerTlsCertificates",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getRelationalDatabase",
						"lightsail:getRelationalDatabases",
						"lightsail:getRelationalDatabaseSnapshot",
						"lightsail:getRelationalDatabaseSnapshots",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"lookoutmetrics:describeAlert",
						"lookoutmetrics:describeAnomalyDetectionExecutions",
						"lookoutmetrics:describeAnomalyDetector",
						"lookoutmetrics:describeMetricSet",
						"lookoutmetrics:getAnomalyGroup",
						"lookoutmetrics:getDataQualityMetrics",
						"lookoutmetrics:getFeedback",
						"lookoutmetrics:getSampleData",
						"lookoutmetrics:listAlerts",
						"lookoutmetrics:listAnomalyDetectors",
						"lookoutmetrics:listAnomalyGroupSummaries",
						"lookoutmetrics:listAnomalyGroupTimeSeries",
						"lookoutmetrics:listMetricSets",
						"lookoutmetrics:listTagsForResource",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconnect:describeFlow",
						"mediaconnect:listEntitlements",
						"mediaconnect:listFlows",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mgn:describeJobLogItems",
						"mgn:describeJobs",
						"mgn:describeReplicationConfigurationTemplates",
						"mgn:describeSourceServers",
						"mgn:getLaunchConfiguration",
						"mgn:getReplicationConfiguration",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"network-firewall:describeFirewall",
						"network-firewall:describeFirewallPolicy",
						"network-firewall:describeLoggingConfiguration",
						"network-firewall:describeRuleGroup",
						"network-firewall:listFirewallPolicies",
						"network-firewall:listFirewalls",
						"network-firewall:listRuleGroups",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"organizations:listAccounts",
						"organizations:listTagsForResource",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutions",
						"personalize:listSolutionVersions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplates",
						"quicksight:listTemplateVersions",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"ram:getPermission",
						"ram:getResourceShareAssociations",
						"ram:getResourceShareInvitations",
						"ram:getResourceShares",
						"ram:listPendingInvitationResources",
						"ram:listPrincipals",
						"ram:listResources",
						"ram:listResourceSharePermissions",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeExportTasks",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift-data:describeStatement",
						"redshift-data:listStatements",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53-recovery-readiness:getCell",
						"route53-recovery-readiness:getCellReadinessSummary",
						"route53-recovery-readiness:getReadinessCheck",
						"route53-recovery-readiness:getReadinessCheckResourceStatus",
						"route53-recovery-readiness:getReadinessCheckStatus",
						"route53-recovery-readiness:getRecoveryGroup",
						"route53-recovery-readiness:getRecoveryGroupReadinessSummary",
						"route53-recovery-readiness:listCells",
						"route53-recovery-readiness:listReadinessChecks",
						"route53-recovery-readiness:listRecoveryGroups",
						"route53-recovery-readiness:listResourceSets",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getFirewallConfig",
						"route53resolver:getFirewallDomainList",
						"route53resolver:getFirewallRuleGroup",
						"route53resolver:getFirewallRuleGroupAssociation",
						"route53resolver:getResolverDnssecConfig",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listFirewallConfigs",
						"route53resolver:listFirewallDomainLists",
						"route53resolver:listFirewallDomains",
						"route53resolver:listFirewallRuleGroupAssociations",
						"route53resolver:listFirewallRuleGroups",
						"route53resolver:listFirewallRules",
						"route53resolver:listResolverDnssecConfigs",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAccessPointConfigurationForObjectLambda",
						"s3:getAccessPointForObjectLambda",
						"s3:getAccessPointPolicyStatusForObjectLambda",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAccessPointsForObjectLambda",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAction",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeArtifact",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeContext",
						"sagemaker:describeDataQualityJobDefinition",
						"sagemaker:describeDevice",
						"sagemaker:describeDeviceFleet",
						"sagemaker:describeDomain",
						"sagemaker:describeEdgePackagingJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeFeatureGroup",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeImage",
						"sagemaker:describeImageVersion",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelBiasJobDefinition",
						"sagemaker:describeModelExplainabilityJobDefinition",
						"sagemaker:describeModelPackage",
						"sagemaker:describeModelPackageGroup",
						"sagemaker:describeModelQualityJobDefinition",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describePipeline",
						"sagemaker:describePipelineDefinitionForExecution",
						"sagemaker:describePipelineExecution",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeProject",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listActions",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listArtifacts",
						"sagemaker:listAssociations",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listContexts",
						"sagemaker:listDataQualityJobDefinitions",
						"sagemaker:listDeviceFleets",
						"sagemaker:listDevices",
						"sagemaker:listDomains",
						"sagemaker:listEdgePackagingJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFeatureGroups",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listImages",
						"sagemaker:listImageVersions",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelBiasJobDefinitions",
						"sagemaker:listModelExplainabilityJobDefinitions",
						"sagemaker:listModelPackageGroups",
						"sagemaker:listModelPackages",
						"sagemaker:listModelQualityJobDefinitions",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listPipelineExecutions",
						"sagemaker:listPipelineExecutionSteps",
						"sagemaker:listPipelineParametersForExecution",
						"sagemaker:listPipelines",
						"sagemaker:listProcessingJobs",
						"sagemaker:listProjects",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm-contacts:describeEngagement",
						"ssm-contacts:describePage",
						"ssm-contacts:getContact",
						"ssm-contacts:getContactChannel",
						"ssm-contacts:listContactChannels",
						"ssm-contacts:listContacts",
						"ssm-contacts:listEngagements",
						"ssm-contacts:listPageReceipts",
						"ssm-contacts:listPagesByContact",
						"ssm-contacts:listPagesByEngagement",
						"ssm-incidents:getIncidentRecord",
						"ssm-incidents:getReplicationSet",
						"ssm-incidents:getResponsePlan",
						"ssm-incidents:listIncidentRecords",
						"ssm-incidents:listReplicationSets",
						"ssm-incidents:listResponsePlans",
						"ssm-incidents:listTimelineEvents",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutions",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeOpsItems",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getOpsItem",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociations",
						"ssm:listAssociationVersions",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listOpsItemEvents",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeFileSystemAssociations",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listFileSystemAssociations",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"synthetics:describeCanaries",
						"synthetics:describeCanariesLastRun",
						"synthetics:describeRuntimeVersions",
						"synthetics:getCanary",
						"synthetics:getCanaryRuns",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v17"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-10-06T19:23:26",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"airflow:getEnvironment",
						"airflow:listEnvironments",
						"airflow:listTagsForResource",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"appflow:describeConnectorEntity",
						"appflow:describeConnectorProfiles",
						"appflow:describeFlow",
						"appflow:listFlows",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"applicationinsights:describeComponentConfiguration",
						"applicationinsights:describeComponentConfigurationRecommendation",
						"applicationinsights:listApplications",
						"applicationinsights:listComponents",
						"applicationinsights:listConfigurationHistory",
						"applicationinsights:listLogPatterns",
						"applicationinsights:listLogPatternSets",
						"appmesh:describeGatewayRoute",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualGateway",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listGatewayRoutes",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listTagsForResource",
						"appmesh:listVirtualGateways",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"apprunner:describeAutoScalingConfiguration",
						"apprunner:describeCustomDomains",
						"apprunner:describeOperation",
						"apprunner:describeService",
						"apprunner:listAutoScalingConfigurations",
						"apprunner:listConnections",
						"apprunner:listOperations",
						"apprunner:listServices",
						"apprunner:listTagsForResource",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"auditmanager:getAccountStatus",
						"auditmanager:getDelegations",
						"auditmanager:listAssessmentFrameworks",
						"auditmanager:listAssessmentReports",
						"auditmanager:listAssessments",
						"auditmanager:listControls",
						"auditmanager:listKeywordsForDataSource",
						"auditmanager:listNotifications",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeInstanceRefreshes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlans",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getCostAndUsageWithResources",
						"ce:getCostForecast",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationPurchaseRecommendation",
						"ce:getReservationUtilization",
						"ce:getRightsizingRecommendation",
						"ce:getSavingsPlansCoverage",
						"ce:getSavingsPlansPurchaseRecommendation",
						"ce:getSavingsPlansUtilization",
						"ce:getSavingsPlansUtilizationDetails",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:describeAnomalyDetectors",
						"cloudwatch:describeInsightRules",
						"cloudwatch:getDashboard",
						"cloudwatch:getInsightRuleReport",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndPoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackages",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEBSVolumeRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:getResourceConfigHistory",
						"config:listDiscoveredResources",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailsForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"databrew:describeDataset",
						"databrew:describeJob",
						"databrew:describeProject",
						"databrew:describeRecipe",
						"databrew:listDatasets",
						"databrew:listJobRuns",
						"databrew:listJobs",
						"databrew:listProjects",
						"databrew:listRecipes",
						"databrew:listRecipeVersions",
						"databrew:listTagsForResource",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationObjectStorage",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGateways",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGateways",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:searchLocalGatewayRoutes",
						"ecr-public:describeImages",
						"ecr-public:describeImageTags",
						"ecr-public:describeRegistries",
						"ecr-public:describeRepositories",
						"ecr-public:getRegistryCatalogData",
						"ecr-public:getRepositoryCatalogData",
						"ecr-public:getRepositoryPolicy",
						"ecr-public:listTagsForResource",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeImageScanFindings",
						"ecr:describeRegistry",
						"ecr:describeRepositories",
						"ecr:getLifecyclePolicy",
						"ecr:getRegistryPolicy",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecr:listTagsForResource",
						"ecs:describeCapacityProviders",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:describeTaskSets",
						"ecs:listAccountSettings",
						"ecs:listAttributes",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTagsForResource",
						"ecs:listTaskDefinitionFamilies",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeApiDestination",
						"events:describeEventBus",
						"events:describeEventSource",
						"events:describePartnerEventSource",
						"events:describeRule",
						"events:listApiDestinations",
						"events:listConnections",
						"events:listEventBuses",
						"events:listEventSources",
						"events:listPartnerEventSourceAccounts",
						"events:listPartnerEventSources",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeDataRepositoryTasks",
						"fsx:describeFileSystems",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:checkSchemaVersionValidity",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getRegistry",
						"glue:getSchema",
						"glue:getSchemaByDefinition",
						"glue:getSchemaVersion",
						"glue:getSchemaVersionsDiff",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"glue:listRegistries",
						"glue:listSchemas",
						"glue:listSchemaVersions",
						"glue:querySchemaVersionMetadata",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedAccountsForOrganization",
						"health:describeAffectedEntities",
						"health:describeAffectedEntitiesForOrganization",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventDetailsForOrganization",
						"health:describeEvents",
						"health:describeEventsForOrganization",
						"health:describeEventTypes",
						"health:describeHealthServiceStatusForOrganization",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getContainerRecipe",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listContainerRecipes",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssets",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"iotwireless:getDestination",
						"iotwireless:getDeviceProfile",
						"iotwireless:getPartnerAccount",
						"iotwireless:getServiceEndpoint",
						"iotwireless:getServiceProfile",
						"iotwireless:getWirelessDevice",
						"iotwireless:getWirelessDeviceStatistics",
						"iotwireless:getWirelessGateway",
						"iotwireless:getWirelessGatewayCertificate",
						"iotwireless:getWirelessGatewayFirmwareInformation",
						"iotwireless:getWirelessGatewayStatistics",
						"iotwireless:getWirelessGatewayTask",
						"iotwireless:getWirelessGatewayTaskDefinition",
						"iotwireless:listDestinations",
						"iotwireless:listDeviceProfiles",
						"iotwireless:listPartnerAccounts",
						"iotwireless:listServiceProfiles",
						"iotwireless:listTagsForResource",
						"iotwireless:listWirelessDevices",
						"iotwireless:listWirelessGateways",
						"iotwireless:listWirelessGatewayTaskDefinitions",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:describeApplicationSnapshot",
						"kinesisanalytics:listApplications",
						"kinesisanalytics:listApplicationSnapshots",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getCodeSigningConfig",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionCodeSigningConfig",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listCodeSigningConfigs",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listFunctionsByCodeSigningConfig",
						"lambda:listLayers",
						"lambda:listLayerVersions",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getAlarms",
						"lightsail:getAutoSnapshots",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getCertificates",
						"lightsail:getContainerImages",
						"lightsail:getContainerServiceDeployments",
						"lightsail:getContainerServices",
						"lightsail:getDisk",
						"lightsail:getDisks",
						"lightsail:getDiskSnapshot",
						"lightsail:getDiskSnapshots",
						"lightsail:getDistributions",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getExportSnapshotRecords",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getLoadBalancer",
						"lightsail:getLoadBalancers",
						"lightsail:getLoadBalancerTlsCertificates",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getRelationalDatabase",
						"lightsail:getRelationalDatabases",
						"lightsail:getRelationalDatabaseSnapshot",
						"lightsail:getRelationalDatabaseSnapshots",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"lookoutmetrics:describeAlert",
						"lookoutmetrics:describeAnomalyDetectionExecutions",
						"lookoutmetrics:describeAnomalyDetector",
						"lookoutmetrics:describeMetricSet",
						"lookoutmetrics:getAnomalyGroup",
						"lookoutmetrics:getDataQualityMetrics",
						"lookoutmetrics:getFeedback",
						"lookoutmetrics:getSampleData",
						"lookoutmetrics:listAlerts",
						"lookoutmetrics:listAnomalyDetectors",
						"lookoutmetrics:listAnomalyGroupSummaries",
						"lookoutmetrics:listAnomalyGroupTimeSeries",
						"lookoutmetrics:listMetricSets",
						"lookoutmetrics:listTagsForResource",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconnect:describeFlow",
						"mediaconnect:listEntitlements",
						"mediaconnect:listFlows",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mgn:describeJobLogItems",
						"mgn:describeJobs",
						"mgn:describeReplicationConfigurationTemplates",
						"mgn:describeSourceServers",
						"mgn:getLaunchConfiguration",
						"mgn:getReplicationConfiguration",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"network-firewall:describeFirewall",
						"network-firewall:describeFirewallPolicy",
						"network-firewall:describeLoggingConfiguration",
						"network-firewall:describeRuleGroup",
						"network-firewall:listFirewallPolicies",
						"network-firewall:listFirewalls",
						"network-firewall:listRuleGroups",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"organizations:listAccounts",
						"organizations:listTagsForResource",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutions",
						"personalize:listSolutionVersions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplates",
						"quicksight:listTemplateVersions",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"ram:getPermission",
						"ram:getResourceShareAssociations",
						"ram:getResourceShareInvitations",
						"ram:getResourceShares",
						"ram:listPendingInvitationResources",
						"ram:listPrincipals",
						"ram:listResources",
						"ram:listResourceSharePermissions",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeExportTasks",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift-data:describeStatement",
						"redshift-data:listStatements",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53-recovery-readiness:getCell",
						"route53-recovery-readiness:getCellReadinessSummary",
						"route53-recovery-readiness:getReadinessCheck",
						"route53-recovery-readiness:getReadinessCheckResourceStatus",
						"route53-recovery-readiness:getReadinessCheckStatus",
						"route53-recovery-readiness:getRecoveryGroup",
						"route53-recovery-readiness:getRecoveryGroupReadinessSummary",
						"route53-recovery-readiness:listCells",
						"route53-recovery-readiness:listReadinessChecks",
						"route53-recovery-readiness:listRecoveryGroups",
						"route53-recovery-readiness:listResourceSets",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getFirewallConfig",
						"route53resolver:getFirewallDomainList",
						"route53resolver:getFirewallRuleGroup",
						"route53resolver:getFirewallRuleGroupAssociation",
						"route53resolver:getResolverDnssecConfig",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listFirewallConfigs",
						"route53resolver:listFirewallDomainLists",
						"route53resolver:listFirewallDomains",
						"route53resolver:listFirewallRuleGroupAssociations",
						"route53resolver:listFirewallRuleGroups",
						"route53resolver:listFirewallRules",
						"route53resolver:listResolverDnssecConfigs",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAccessPointConfigurationForObjectLambda",
						"s3:getAccessPointForObjectLambda",
						"s3:getAccessPointPolicyStatusForObjectLambda",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAccessPointsForObjectLambda",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAction",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeArtifact",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeContext",
						"sagemaker:describeDataQualityJobDefinition",
						"sagemaker:describeDevice",
						"sagemaker:describeDeviceFleet",
						"sagemaker:describeDomain",
						"sagemaker:describeEdgePackagingJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeFeatureGroup",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeImage",
						"sagemaker:describeImageVersion",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelBiasJobDefinition",
						"sagemaker:describeModelExplainabilityJobDefinition",
						"sagemaker:describeModelPackage",
						"sagemaker:describeModelPackageGroup",
						"sagemaker:describeModelQualityJobDefinition",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describePipeline",
						"sagemaker:describePipelineDefinitionForExecution",
						"sagemaker:describePipelineExecution",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeProject",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listActions",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listArtifacts",
						"sagemaker:listAssociations",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listContexts",
						"sagemaker:listDataQualityJobDefinitions",
						"sagemaker:listDeviceFleets",
						"sagemaker:listDevices",
						"sagemaker:listDomains",
						"sagemaker:listEdgePackagingJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFeatureGroups",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listImages",
						"sagemaker:listImageVersions",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelBiasJobDefinitions",
						"sagemaker:listModelExplainabilityJobDefinitions",
						"sagemaker:listModelPackageGroups",
						"sagemaker:listModelPackages",
						"sagemaker:listModelQualityJobDefinitions",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listPipelineExecutions",
						"sagemaker:listPipelineExecutionSteps",
						"sagemaker:listPipelineParametersForExecution",
						"sagemaker:listPipelines",
						"sagemaker:listProcessingJobs",
						"sagemaker:listProjects",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm-contacts:describeEngagement",
						"ssm-contacts:describePage",
						"ssm-contacts:getContact",
						"ssm-contacts:getContactChannel",
						"ssm-contacts:listContactChannels",
						"ssm-contacts:listContacts",
						"ssm-contacts:listEngagements",
						"ssm-contacts:listPageReceipts",
						"ssm-contacts:listPagesByContact",
						"ssm-contacts:listPagesByEngagement",
						"ssm-incidents:getIncidentRecord",
						"ssm-incidents:getReplicationSet",
						"ssm-incidents:getResponsePlan",
						"ssm-incidents:listIncidentRecords",
						"ssm-incidents:listReplicationSets",
						"ssm-incidents:listResponsePlans",
						"ssm-incidents:listTimelineEvents",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutions",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeOpsItems",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getOpsItem",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociations",
						"ssm:listAssociationVersions",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listOpsItemEvents",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeFileSystemAssociations",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listFileSystemAssociations",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"synthetics:describeCanaries",
						"synthetics:describeCanariesLastRun",
						"synthetics:describeRuntimeVersions",
						"synthetics:getCanary",
						"synthetics:getCanaryRuns",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v18"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-11-12T00:01:03",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"airflow:getEnvironment",
						"airflow:listEnvironments",
						"airflow:listTagsForResource",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"appflow:describeConnectorEntity",
						"appflow:describeConnectorProfiles",
						"appflow:describeFlow",
						"appflow:listFlows",
						"appflow:describeConnectors",
						"appflow:describeFlowExecutionRecords",
						"appflow:listConnectorEntities",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"applicationinsights:describeComponentConfiguration",
						"applicationinsights:describeComponentConfigurationRecommendation",
						"applicationinsights:listApplications",
						"applicationinsights:listComponents",
						"applicationinsights:listConfigurationHistory",
						"applicationinsights:listLogPatterns",
						"applicationinsights:listLogPatternSets",
						"appmesh:describeGatewayRoute",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualGateway",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listGatewayRoutes",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listTagsForResource",
						"appmesh:listVirtualGateways",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"apprunner:describeAutoScalingConfiguration",
						"apprunner:describeCustomDomains",
						"apprunner:describeOperation",
						"apprunner:describeService",
						"apprunner:listAutoScalingConfigurations",
						"apprunner:listConnections",
						"apprunner:listOperations",
						"apprunner:listServices",
						"apprunner:listTagsForResource",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"auditmanager:getAccountStatus",
						"auditmanager:getDelegations",
						"auditmanager:listAssessmentFrameworks",
						"auditmanager:listAssessmentReports",
						"auditmanager:listAssessments",
						"auditmanager:listControls",
						"auditmanager:listKeywordsForDataSource",
						"auditmanager:listNotifications",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeInstanceRefreshes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlans",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getCostAndUsageWithResources",
						"ce:getCostForecast",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationPurchaseRecommendation",
						"ce:getReservationUtilization",
						"ce:getRightsizingRecommendation",
						"ce:getSavingsPlansCoverage",
						"ce:getSavingsPlansPurchaseRecommendation",
						"ce:getSavingsPlansUtilization",
						"ce:getSavingsPlansUtilizationDetails",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:describeAnomalyDetectors",
						"cloudwatch:describeInsightRules",
						"cloudwatch:getDashboard",
						"cloudwatch:getInsightRuleReport",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndPoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackages",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:adminGetUser",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUser",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEBSVolumeRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:batchGetAggregateResourceConfig",
						"config:batchGetResourceConfig",
						"config:describeAggregateComplianceByConfigRules",
						"config:describeAggregationAuthorizations",
						"config:describeComplianceByConfigRule",
						"config:describeComplianceByResource",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationAggregators",
						"config:describeConfigurationAggregatorSourcesStatus",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeConformancePackCompliance",
						"config:describeConformancePacks",
						"config:describeConformancePackStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:describeOrganizationConfigRules",
						"config:describeOrganizationConfigRuleStatuses",
						"config:describeOrganizationConformancePacks",
						"config:describeOrganizationConformancePackStatuses",
						"config:describePendingAggregationRequests",
						"config:describeRemediationConfigurations",
						"config:describeRemediationExceptions",
						"config:describeRemediationExecutionStatus",
						"config:describeRetentionConfigurations",
						"config:getAggregateComplianceDetailsByConfigRule",
						"config:getAggregateConfigRuleComplianceSummary",
						"config:getAggregateDiscoveredResourceCounts",
						"config:getAggregateResourceConfig",
						"config:getComplianceDetailsByConfigRule",
						"config:getComplianceDetailsByResource",
						"config:getComplianceSummaryByConfigRule",
						"config:getComplianceSummaryByResourceType",
						"config:getConformancePackComplianceDetails",
						"config:getConformancePackComplianceSummary",
						"config:getDiscoveredResourceCounts",
						"config:getOrganizationConfigRuleDetailedStatus",
						"config:getOrganizationConformancePackDetailedStatus",
						"config:getResourceConfigHistory",
						"config:listAggregateDiscoveredResources",
						"config:listDiscoveredResources",
						"config:listTagsForResource",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailsForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"databrew:describeDataset",
						"databrew:describeJob",
						"databrew:describeProject",
						"databrew:describeRecipe",
						"databrew:listDatasets",
						"databrew:listJobRuns",
						"databrew:listJobs",
						"databrew:listProjects",
						"databrew:listRecipes",
						"databrew:listRecipeVersions",
						"databrew:listTagsForResource",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationObjectStorage",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGateways",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGateways",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:getTransitGatewayAttachmentPropagations",
						"ec2:getTransitGatewayRouteTableAssociations",
						"ec2:getTransitGatewayRouteTablePropagations",
						"ec2:searchLocalGatewayRoutes",
						"ecr-public:describeImages",
						"ecr-public:describeImageTags",
						"ecr-public:describeRegistries",
						"ecr-public:describeRepositories",
						"ecr-public:getRegistryCatalogData",
						"ecr-public:getRepositoryCatalogData",
						"ecr-public:getRepositoryPolicy",
						"ecr-public:listTagsForResource",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeImageScanFindings",
						"ecr:describeRegistry",
						"ecr:describeRepositories",
						"ecr:getLifecyclePolicy",
						"ecr:getRegistryPolicy",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecr:listTagsForResource",
						"ecs:describeCapacityProviders",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:describeTaskSets",
						"ecs:listAccountSettings",
						"ecs:listAttributes",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTagsForResource",
						"ecs:listTaskDefinitionFamilies",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplications",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeConfigurationSettings",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"es:listTags",
						"events:describeApiDestination",
						"events:describeEventBus",
						"events:describeEventSource",
						"events:describePartnerEventSource",
						"events:describeRule",
						"events:listApiDestinations",
						"events:listConnections",
						"events:listEventBuses",
						"events:listEventSources",
						"events:listPartnerEventSourceAccounts",
						"events:listPartnerEventSources",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeDataRepositoryTasks",
						"fsx:describeFileSystems",
						"fsx:describeStorageVirtualMachines",
						"fsx:describeVolumes",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:checkSchemaVersionValidity",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getRegistry",
						"glue:getSchema",
						"glue:getSchemaByDefinition",
						"glue:getSchemaVersion",
						"glue:getSchemaVersionsDiff",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"glue:listRegistries",
						"glue:listSchemas",
						"glue:listSchemaVersions",
						"glue:querySchemaVersionMetadata",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedAccountsForOrganization",
						"health:describeAffectedEntities",
						"health:describeAffectedEntitiesForOrganization",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventDetailsForOrganization",
						"health:describeEvents",
						"health:describeEventsForOrganization",
						"health:describeEventTypes",
						"health:describeHealthServiceStatusForOrganization",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getContainerRecipe",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listContainerRecipes",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"importexport:getStatus",
						"importexport:listJobs",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssets",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"iotwireless:getDestination",
						"iotwireless:getDeviceProfile",
						"iotwireless:getPartnerAccount",
						"iotwireless:getServiceEndpoint",
						"iotwireless:getServiceProfile",
						"iotwireless:getWirelessDevice",
						"iotwireless:getWirelessDeviceStatistics",
						"iotwireless:getWirelessGateway",
						"iotwireless:getWirelessGatewayCertificate",
						"iotwireless:getWirelessGatewayFirmwareInformation",
						"iotwireless:getWirelessGatewayStatistics",
						"iotwireless:getWirelessGatewayTask",
						"iotwireless:getWirelessGatewayTaskDefinition",
						"iotwireless:listDestinations",
						"iotwireless:listDeviceProfiles",
						"iotwireless:listPartnerAccounts",
						"iotwireless:listServiceProfiles",
						"iotwireless:listTagsForResource",
						"iotwireless:listWirelessDevices",
						"iotwireless:listWirelessGateways",
						"iotwireless:listWirelessGatewayTaskDefinitions",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:describeApplicationSnapshot",
						"kinesisanalytics:listApplications",
						"kinesisanalytics:listApplicationSnapshots",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getCodeSigningConfig",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionCodeSigningConfig",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listCodeSigningConfigs",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listFunctionsByCodeSigningConfig",
						"lambda:listLayers",
						"lambda:listLayerVersions",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getAlarms",
						"lightsail:getAutoSnapshots",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getCertificates",
						"lightsail:getContainerImages",
						"lightsail:getContainerServiceDeployments",
						"lightsail:getContainerServiceMetricData",
						"lightsail:getContainerServicePowers",
						"lightsail:getContainerServices",
						"lightsail:getDisk",
						"lightsail:getDisks",
						"lightsail:getDiskSnapshot",
						"lightsail:getDiskSnapshots",
						"lightsail:getDistributionBundles",
						"lightsail:getDistributionMetricData",
						"lightsail:getDistributions",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getExportSnapshotRecords",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getLoadBalancer",
						"lightsail:getLoadBalancerMetricData",
						"lightsail:getLoadBalancers",
						"lightsail:getLoadBalancerTlsCertificates",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getRelationalDatabase",
						"lightsail:getRelationalDatabaseMetricData",
						"lightsail:getRelationalDatabases",
						"lightsail:getRelationalDatabaseSnapshot",
						"lightsail:getRelationalDatabaseSnapshots",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"lightsail:isVpcPeered",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"lookoutmetrics:describeAlert",
						"lookoutmetrics:describeAnomalyDetectionExecutions",
						"lookoutmetrics:describeAnomalyDetector",
						"lookoutmetrics:describeMetricSet",
						"lookoutmetrics:getAnomalyGroup",
						"lookoutmetrics:getDataQualityMetrics",
						"lookoutmetrics:getFeedback",
						"lookoutmetrics:getSampleData",
						"lookoutmetrics:listAlerts",
						"lookoutmetrics:listAnomalyDetectors",
						"lookoutmetrics:listAnomalyGroupSummaries",
						"lookoutmetrics:listAnomalyGroupTimeSeries",
						"lookoutmetrics:listMetricSets",
						"lookoutmetrics:listTagsForResource",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconnect:describeFlow",
						"mediaconnect:listEntitlements",
						"mediaconnect:listFlows",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:describeObject",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediastore:listItems",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mgn:describeJobLogItems",
						"mgn:describeJobs",
						"mgn:describeReplicationConfigurationTemplates",
						"mgn:describeSourceServers",
						"mgn:getLaunchConfiguration",
						"mgn:getReplicationConfiguration",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"network-firewall:describeFirewall",
						"network-firewall:describeFirewallPolicy",
						"network-firewall:describeLoggingConfiguration",
						"network-firewall:describeRuleGroup",
						"network-firewall:listFirewallPolicies",
						"network-firewall:listFirewalls",
						"network-firewall:listRuleGroups",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"organizations:listAccounts",
						"organizations:listTagsForResource",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutions",
						"personalize:listSolutionVersions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplates",
						"quicksight:listTemplateVersions",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"ram:getPermission",
						"ram:getResourceShareAssociations",
						"ram:getResourceShareInvitations",
						"ram:getResourceShares",
						"ram:listPendingInvitationResources",
						"ram:listPrincipals",
						"ram:listResources",
						"ram:listResourceSharePermissions",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeExportTasks",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift-data:describeStatement",
						"redshift-data:listStatements",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53-recovery-readiness:getCell",
						"route53-recovery-readiness:getCellReadinessSummary",
						"route53-recovery-readiness:getReadinessCheck",
						"route53-recovery-readiness:getReadinessCheckResourceStatus",
						"route53-recovery-readiness:getReadinessCheckStatus",
						"route53-recovery-readiness:getRecoveryGroup",
						"route53-recovery-readiness:getRecoveryGroupReadinessSummary",
						"route53-recovery-readiness:listCells",
						"route53-recovery-readiness:listReadinessChecks",
						"route53-recovery-readiness:listRecoveryGroups",
						"route53-recovery-readiness:listResourceSets",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTagsForResource",
						"route53:listTagsForResources",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getFirewallConfig",
						"route53resolver:getFirewallDomainList",
						"route53resolver:getFirewallRuleGroup",
						"route53resolver:getFirewallRuleGroupAssociation",
						"route53resolver:getResolverDnssecConfig",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listFirewallConfigs",
						"route53resolver:listFirewallDomainLists",
						"route53resolver:listFirewallDomains",
						"route53resolver:listFirewallRuleGroupAssociations",
						"route53resolver:listFirewallRuleGroups",
						"route53resolver:listFirewallRules",
						"route53resolver:listResolverDnssecConfigs",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:getAccelerateConfiguration",
						"s3:getAccessPointConfigurationForObjectLambda",
						"s3:getAccessPointForObjectLambda",
						"s3:getAccessPointPolicyStatusForObjectLambda",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketPolicy",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getReplicationConfiguration",
						"s3:listAccessPointsForObjectLambda",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"sagemaker:describeAction",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeArtifact",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeContext",
						"sagemaker:describeDataQualityJobDefinition",
						"sagemaker:describeDevice",
						"sagemaker:describeDeviceFleet",
						"sagemaker:describeDomain",
						"sagemaker:describeEdgePackagingJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeFeatureGroup",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeImage",
						"sagemaker:describeImageVersion",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelBiasJobDefinition",
						"sagemaker:describeModelExplainabilityJobDefinition",
						"sagemaker:describeModelPackage",
						"sagemaker:describeModelPackageGroup",
						"sagemaker:describeModelQualityJobDefinition",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describePipeline",
						"sagemaker:describePipelineDefinitionForExecution",
						"sagemaker:describePipelineExecution",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeProject",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listActions",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listArtifacts",
						"sagemaker:listAssociations",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listContexts",
						"sagemaker:listDataQualityJobDefinitions",
						"sagemaker:listDeviceFleets",
						"sagemaker:listDevices",
						"sagemaker:listDomains",
						"sagemaker:listEdgePackagingJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFeatureGroups",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listImages",
						"sagemaker:listImageVersions",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelBiasJobDefinitions",
						"sagemaker:listModelExplainabilityJobDefinitions",
						"sagemaker:listModelPackageGroups",
						"sagemaker:listModelPackages",
						"sagemaker:listModelQualityJobDefinitions",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listPipelineExecutions",
						"sagemaker:listPipelineExecutionSteps",
						"sagemaker:listPipelineParametersForExecution",
						"sagemaker:listPipelines",
						"sagemaker:listProcessingJobs",
						"sagemaker:listProjects",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm-contacts:describeEngagement",
						"ssm-contacts:describePage",
						"ssm-contacts:getContact",
						"ssm-contacts:getContactChannel",
						"ssm-contacts:listContactChannels",
						"ssm-contacts:listContacts",
						"ssm-contacts:listEngagements",
						"ssm-contacts:listPageReceipts",
						"ssm-contacts:listPagesByContact",
						"ssm-contacts:listPagesByEngagement",
						"ssm-incidents:getIncidentRecord",
						"ssm-incidents:getReplicationSet",
						"ssm-incidents:getResponsePlan",
						"ssm-incidents:listIncidentRecords",
						"ssm-incidents:listReplicationSets",
						"ssm-incidents:listResponsePlans",
						"ssm-incidents:listTimelineEvents",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutions",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeOpsItems",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getOpsItem",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociations",
						"ssm:listAssociationVersions",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listOpsItemEvents",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeFileSystemAssociations",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listFileSystemAssociations",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"synthetics:describeCanaries",
						"synthetics:describeCanariesLastRun",
						"synthetics:describeRuntimeVersions",
						"synthetics:getCanary",
						"synthetics:getCanaryRuns",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v19"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-21T23:48:04",
		"document": {
			"Statement": [
				{
					"Action": [
						"apigateway:GET"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:apigateway:*::/account",
						"arn:aws:apigateway:*::/apis",
						"arn:aws:apigateway:*::/apis/*",
						"arn:aws:apigateway:*::/apis/*/authorizers",
						"arn:aws:apigateway:*::/apis/*/authorizers/*",
						"arn:aws:apigateway:*::/apis/*/deployments",
						"arn:aws:apigateway:*::/apis/*/deployments/*",
						"arn:aws:apigateway:*::/apis/*/integrations",
						"arn:aws:apigateway:*::/apis/*/integrations/*",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
						"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
						"arn:aws:apigateway:*::/apis/*/models",
						"arn:aws:apigateway:*::/apis/*/models/*",
						"arn:aws:apigateway:*::/apis/*/routes",
						"arn:aws:apigateway:*::/apis/*/routes/*",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
						"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
						"arn:aws:apigateway:*::/apis/*/stages",
						"arn:aws:apigateway:*::/apis/*/stages/*",
						"arn:aws:apigateway:*::/clientcertificates",
						"arn:aws:apigateway:*::/clientcertificates/*",
						"arn:aws:apigateway:*::/domainnames",
						"arn:aws:apigateway:*::/domainnames/*",
						"arn:aws:apigateway:*::/domainnames/*/apimappings",
						"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
						"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
						"arn:aws:apigateway:*::/restapis",
						"arn:aws:apigateway:*::/restapis/*",
						"arn:aws:apigateway:*::/restapis/*/authorizers",
						"arn:aws:apigateway:*::/restapis/*/authorizers/*",
						"arn:aws:apigateway:*::/restapis/*/deployments",
						"arn:aws:apigateway:*::/restapis/*/deployments/*",
						"arn:aws:apigateway:*::/restapis/*/models",
						"arn:aws:apigateway:*::/restapis/*/models/*",
						"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
						"arn:aws:apigateway:*::/restapis/*/resources",
						"arn:aws:apigateway:*::/restapis/*/resources/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
						"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
						"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
						"arn:aws:apigateway:*::/restapis/*/stages",
						"arn:aws:apigateway:*::/restapis/*/stages/*"
					]
				},
				{
					"Action": [
						"iam:DeleteRole"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
					]
				},
				{
					"Action": [
						"a4b:getDevice",
						"a4b:getProfile",
						"a4b:getRoom",
						"a4b:getRoomSkillParameter",
						"a4b:getSkillGroup",
						"a4b:searchDevices",
						"a4b:searchProfiles",
						"a4b:searchRooms",
						"a4b:searchSkillGroups",
						"access-analyzer:getFinding",
						"access-analyzer:listAnalyzers",
						"access-analyzer:listArchiveRules",
						"access-analyzer:listFindings",
						"acm-pca:describeCertificateAuthority",
						"acm-pca:describeCertificateAuthorityAuditReport",
						"acm-pca:getCertificate",
						"acm-pca:getCertificateAuthorityCertificate",
						"acm-pca:getCertificateAuthorityCsr",
						"acm-pca:listCertificateAuthorities",
						"acm-pca:listTags",
						"acm:describeCertificate",
						"acm:getCertificate",
						"acm:listCertificates",
						"acm:listTagsForCertificate",
						"airflow:getEnvironment",
						"airflow:listEnvironments",
						"airflow:listTagsForResource",
						"amplify:getApp",
						"amplify:getBranch",
						"amplify:getDomainAssociation",
						"amplify:getJob",
						"amplify:getWebhook",
						"amplify:listApps",
						"amplify:listWebhooks",
						"appflow:describeConnectorEntity",
						"appflow:describeConnectorProfiles",
						"appflow:describeConnectors",
						"appflow:describeFlow",
						"appflow:describeFlowExecutionRecords",
						"appflow:listConnectorEntities",
						"appflow:listFlows",
						"application-autoscaling:describeScalableTargets",
						"application-autoscaling:describeScalingActivities",
						"application-autoscaling:describeScalingPolicies",
						"application-autoscaling:describeScheduledActions",
						"applicationinsights:describeComponentConfiguration",
						"applicationinsights:describeComponentConfigurationRecommendation",
						"applicationinsights:listApplications",
						"applicationinsights:listComponents",
						"applicationinsights:listConfigurationHistory",
						"applicationinsights:listLogPatterns",
						"applicationinsights:listLogPatternSets",
						"appmesh:describeGatewayRoute",
						"appmesh:describeMesh",
						"appmesh:describeRoute",
						"appmesh:describeVirtualGateway",
						"appmesh:describeVirtualNode",
						"appmesh:describeVirtualRouter",
						"appmesh:describeVirtualService",
						"appmesh:listGatewayRoutes",
						"appmesh:listMeshes",
						"appmesh:listRoutes",
						"appmesh:listTagsForResource",
						"appmesh:listVirtualGateways",
						"appmesh:listVirtualNodes",
						"appmesh:listVirtualRouters",
						"appmesh:listVirtualServices",
						"apprunner:describeAutoScalingConfiguration",
						"apprunner:describeCustomDomains",
						"apprunner:describeOperation",
						"apprunner:describeService",
						"apprunner:listAutoScalingConfigurations",
						"apprunner:listConnections",
						"apprunner:listOperations",
						"apprunner:listServices",
						"apprunner:listTagsForResource",
						"appstream:describeDirectoryConfigs",
						"appstream:describeFleets",
						"appstream:describeImageBuilders",
						"appstream:describeImages",
						"appstream:describeSessions",
						"appstream:describeStacks",
						"appstream:listAssociatedFleets",
						"appstream:listAssociatedStacks",
						"appstream:listTagsForResource",
						"appsync:getFunction",
						"appsync:getGraphqlApi",
						"appsync:getIntrospectionSchema",
						"appsync:getResolver",
						"appsync:getSchemaCreationStatus",
						"appsync:getType",
						"appsync:listDataSources",
						"appsync:listFunctions",
						"appsync:listGraphqlApis",
						"appsync:listResolvers",
						"appsync:listTypes",
						"athena:batchGetNamedQuery",
						"athena:batchGetQueryExecution",
						"athena:getNamedQuery",
						"athena:getQueryExecution",
						"athena:getWorkGroup",
						"athena:listNamedQueries",
						"athena:listQueryExecutions",
						"athena:listTagsForResource",
						"athena:listWorkGroups",
						"auditmanager:getAccountStatus",
						"auditmanager:getDelegations",
						"auditmanager:listAssessmentFrameworks",
						"auditmanager:listAssessmentReports",
						"auditmanager:listAssessments",
						"auditmanager:listControls",
						"auditmanager:listKeywordsForDataSource",
						"auditmanager:listNotifications",
						"autoscaling-plans:describeScalingPlanResources",
						"autoscaling-plans:describeScalingPlans",
						"autoscaling-plans:getScalingPlanResourceForecastData",
						"autoscaling:describeAccountLimits",
						"autoscaling:describeAdjustmentTypes",
						"autoscaling:describeAutoScalingGroups",
						"autoscaling:describeAutoScalingInstances",
						"autoscaling:describeAutoScalingNotificationTypes",
						"autoscaling:describeInstanceRefreshes",
						"autoscaling:describeLaunchConfigurations",
						"autoscaling:describeLifecycleHooks",
						"autoscaling:describeLifecycleHookTypes",
						"autoscaling:describeLoadBalancers",
						"autoscaling:describeLoadBalancerTargetGroups",
						"autoscaling:describeMetricCollectionTypes",
						"autoscaling:describeNotificationConfigurations",
						"autoscaling:describePolicies",
						"autoscaling:describeScalingActivities",
						"autoscaling:describeScalingProcessTypes",
						"autoscaling:describeScheduledActions",
						"autoscaling:describeTags",
						"autoscaling:describeTerminationPolicyTypes",
						"backup:describeBackupJob",
						"backup:describeBackupVault",
						"backup:describeProtectedResource",
						"backup:describeRecoveryPoint",
						"backup:describeRestoreJob",
						"backup:getBackupPlan",
						"backup:getBackupPlanFromJSON",
						"backup:getBackupPlanFromTemplate",
						"backup:getBackupSelection",
						"backup:getBackupVaultAccessPolicy",
						"backup:getBackupVaultNotifications",
						"backup:getRecoveryPointRestoreMetadata",
						"backup:getSupportedResourceTypes",
						"backup:listBackupJobs",
						"backup:listBackupPlans",
						"backup:listBackupPlanTemplates",
						"backup:listBackupPlanVersions",
						"backup:listBackupSelections",
						"backup:listBackupVaults",
						"backup:listProtectedResources",
						"backup:listRecoveryPointsByBackupVault",
						"backup:listRecoveryPointsByResource",
						"backup:listRestoreJobs",
						"backup:listTags",
						"batch:describeComputeEnvironments",
						"batch:describeJobDefinitions",
						"batch:describeJobQueues",
						"batch:describeJobs",
						"batch:listJobs",
						"braket:getDevice",
						"braket:getQuantumTask",
						"braket:searchDevices",
						"braket:searchQuantumTasks",
						"budgets:viewBudget",
						"ce:getCostAndUsage",
						"ce:getCostAndUsageWithResources",
						"ce:getCostForecast",
						"ce:getDimensionValues",
						"ce:getReservationCoverage",
						"ce:getReservationPurchaseRecommendation",
						"ce:getReservationUtilization",
						"ce:getRightsizingRecommendation",
						"ce:getSavingsPlansCoverage",
						"ce:getSavingsPlansPurchaseRecommendation",
						"ce:getSavingsPlansUtilization",
						"ce:getSavingsPlansUtilizationDetails",
						"ce:getTags",
						"cloud9:describeEnvironmentMemberships",
						"cloud9:describeEnvironments",
						"cloud9:listEnvironments",
						"clouddirectory:getDirectory",
						"clouddirectory:listDirectories",
						"cloudformation:describeAccountLimits",
						"cloudformation:describeChangeSet",
						"cloudformation:describeStackEvents",
						"cloudformation:describeStackInstance",
						"cloudformation:describeStackResource",
						"cloudformation:describeStackResources",
						"cloudformation:describeStacks",
						"cloudformation:describeStackSet",
						"cloudformation:describeStackSetOperation",
						"cloudformation:estimateTemplateCost",
						"cloudformation:getStackPolicy",
						"cloudformation:getTemplate",
						"cloudformation:getTemplateSummary",
						"cloudformation:listChangeSets",
						"cloudformation:listExports",
						"cloudformation:listImports",
						"cloudformation:listStackInstances",
						"cloudformation:listStackResources",
						"cloudformation:listStacks",
						"cloudformation:listStackSetOperationResults",
						"cloudformation:listStackSetOperations",
						"cloudformation:listStackSets",
						"cloudfront:getCloudFrontOriginAccessIdentity",
						"cloudfront:getCloudFrontOriginAccessIdentityConfig",
						"cloudfront:getDistribution",
						"cloudfront:getDistributionConfig",
						"cloudfront:getInvalidation",
						"cloudfront:getStreamingDistribution",
						"cloudfront:getStreamingDistributionConfig",
						"cloudfront:listCloudFrontOriginAccessIdentities",
						"cloudfront:listDistributions",
						"cloudfront:listDistributionsByWebACLId",
						"cloudfront:listInvalidations",
						"cloudfront:listStreamingDistributions",
						"cloudhsm:describeBackups",
						"cloudhsm:describeClusters",
						"cloudsearch:describeAnalysisSchemes",
						"cloudsearch:describeAvailabilityOptions",
						"cloudsearch:describeDomains",
						"cloudsearch:describeExpressions",
						"cloudsearch:describeIndexFields",
						"cloudsearch:describeScalingParameters",
						"cloudsearch:describeServiceAccessPolicies",
						"cloudsearch:describeSuggesters",
						"cloudsearch:listDomainNames",
						"cloudtrail:describeTrails",
						"cloudtrail:getEventSelectors",
						"cloudtrail:getInsightSelectors",
						"cloudtrail:getTrail",
						"cloudtrail:getTrailStatus",
						"cloudtrail:listPublicKeys",
						"cloudtrail:listTags",
						"cloudtrail:listTrails",
						"cloudtrail:lookupEvents",
						"cloudwatch:describeAlarmHistory",
						"cloudwatch:describeAlarms",
						"cloudwatch:describeAlarmsForMetric",
						"cloudwatch:describeAnomalyDetectors",
						"cloudwatch:describeInsightRules",
						"cloudwatch:getDashboard",
						"cloudwatch:getInsightRuleReport",
						"cloudwatch:getMetricData",
						"cloudwatch:getMetricStatistics",
						"cloudwatch:listDashboards",
						"cloudwatch:listMetrics",
						"codeartifact:describeDomain",
						"codeartifact:describePackageVersion",
						"codeartifact:describeRepository",
						"codeartifact:getDomainPermissionsPolicy",
						"codeartifact:getRepositoryEndpoint",
						"codeartifact:getRepositoryPermissionsPolicy",
						"codeartifact:listDomains",
						"codeartifact:listPackages",
						"codeartifact:listPackageVersionAssets",
						"codeartifact:listPackageVersions",
						"codeartifact:listRepositories",
						"codeartifact:listRepositoriesInDomain",
						"codebuild:batchGetBuildBatches",
						"codebuild:batchGetBuilds",
						"codebuild:batchGetProjects",
						"codebuild:listBuildBatches",
						"codebuild:listBuildBatchesForProject",
						"codebuild:listBuilds",
						"codebuild:listBuildsForProject",
						"codebuild:listCuratedEnvironmentImages",
						"codebuild:listProjects",
						"codebuild:listSourceCredentials",
						"codecommit:batchGetRepositories",
						"codecommit:getBranch",
						"codecommit:getRepository",
						"codecommit:getRepositoryTriggers",
						"codecommit:listBranches",
						"codecommit:listRepositories",
						"codedeploy:batchGetApplicationRevisions",
						"codedeploy:batchGetApplications",
						"codedeploy:batchGetDeploymentGroups",
						"codedeploy:batchGetDeploymentInstances",
						"codedeploy:batchGetDeployments",
						"codedeploy:batchGetDeploymentTargets",
						"codedeploy:batchGetOnPremisesInstances",
						"codedeploy:getApplication",
						"codedeploy:getApplicationRevision",
						"codedeploy:getDeployment",
						"codedeploy:getDeploymentConfig",
						"codedeploy:getDeploymentGroup",
						"codedeploy:getDeploymentInstance",
						"codedeploy:getDeploymentTarget",
						"codedeploy:getOnPremisesInstance",
						"codedeploy:listApplicationRevisions",
						"codedeploy:listApplications",
						"codedeploy:listDeploymentConfigs",
						"codedeploy:listDeploymentGroups",
						"codedeploy:listDeploymentInstances",
						"codedeploy:listDeployments",
						"codedeploy:listDeploymentTargets",
						"codedeploy:listGitHubAccountTokenNames",
						"codedeploy:listOnPremisesInstances",
						"codepipeline:getJobDetails",
						"codepipeline:getPipeline",
						"codepipeline:getPipelineExecution",
						"codepipeline:getPipelineState",
						"codepipeline:listActionExecutions",
						"codepipeline:listActionTypes",
						"codepipeline:listPipelineExecutions",
						"codepipeline:listPipelines",
						"codepipeline:listWebhooks",
						"codestar:describeProject",
						"codestar:listProjects",
						"codestar:listResources",
						"codestar:listTeamMembers",
						"codestar:listUserProfiles",
						"cognito-identity:describeIdentityPool",
						"cognito-identity:getIdentityPoolRoles",
						"cognito-identity:listIdentities",
						"cognito-identity:listIdentityPools",
						"cognito-idp:describeIdentityProvider",
						"cognito-idp:describeResourceServer",
						"cognito-idp:describeRiskConfiguration",
						"cognito-idp:describeUserImportJob",
						"cognito-idp:describeUserPool",
						"cognito-idp:describeUserPoolClient",
						"cognito-idp:describeUserPoolDomain",
						"cognito-idp:getGroup",
						"cognito-idp:getUICustomization",
						"cognito-idp:getUserPoolMfaConfig",
						"cognito-idp:listGroups",
						"cognito-idp:listIdentityProviders",
						"cognito-idp:listResourceServers",
						"cognito-idp:listUserImportJobs",
						"cognito-idp:listUserPoolClients",
						"cognito-idp:listUserPools",
						"cognito-sync:describeDataset",
						"cognito-sync:describeIdentityPoolUsage",
						"cognito-sync:describeIdentityUsage",
						"cognito-sync:getCognitoEvents",
						"cognito-sync:getIdentityPoolConfiguration",
						"cognito-sync:listDatasets",
						"cognito-sync:listIdentityPoolUsage",
						"compute-optimizer:getAutoScalingGroupRecommendations",
						"compute-optimizer:getEBSVolumeRecommendations",
						"compute-optimizer:getEC2InstanceRecommendations",
						"compute-optimizer:getEC2RecommendationProjectedMetrics",
						"compute-optimizer:getEnrollmentStatus",
						"compute-optimizer:getRecommendationSummaries",
						"config:batchGetAggregateResourceConfig",
						"config:batchGetResourceConfig",
						"config:describeAggregateComplianceByConfigRules",
						"config:describeAggregationAuthorizations",
						"config:describeComplianceByConfigRule",
						"config:describeComplianceByResource",
						"config:describeConfigRuleEvaluationStatus",
						"config:describeConfigRules",
						"config:describeConfigurationAggregators",
						"config:describeConfigurationAggregatorSourcesStatus",
						"config:describeConfigurationRecorders",
						"config:describeConfigurationRecorderStatus",
						"config:describeConformancePackCompliance",
						"config:describeConformancePacks",
						"config:describeConformancePackStatus",
						"config:describeDeliveryChannels",
						"config:describeDeliveryChannelStatus",
						"config:describeOrganizationConfigRules",
						"config:describeOrganizationConfigRuleStatuses",
						"config:describeOrganizationConformancePacks",
						"config:describeOrganizationConformancePackStatuses",
						"config:describePendingAggregationRequests",
						"config:describeRemediationConfigurations",
						"config:describeRemediationExceptions",
						"config:describeRemediationExecutionStatus",
						"config:describeRetentionConfigurations",
						"config:getAggregateComplianceDetailsByConfigRule",
						"config:getAggregateConfigRuleComplianceSummary",
						"config:getAggregateDiscoveredResourceCounts",
						"config:getAggregateResourceConfig",
						"config:getComplianceDetailsByConfigRule",
						"config:getComplianceDetailsByResource",
						"config:getComplianceSummaryByConfigRule",
						"config:getComplianceSummaryByResourceType",
						"config:getConformancePackComplianceDetails",
						"config:getConformancePackComplianceSummary",
						"config:getDiscoveredResourceCounts",
						"config:getOrganizationConfigRuleDetailedStatus",
						"config:getOrganizationConformancePackDetailedStatus",
						"config:getResourceConfigHistory",
						"config:listAggregateDiscoveredResources",
						"config:listDiscoveredResources",
						"config:listTagsForResource",
						"connect:describeUser",
						"connect:getCurrentMetricData",
						"connect:getMetricData",
						"connect:listRoutingProfiles",
						"connect:listSecurityProfiles",
						"connect:listUsers",
						"controltower:describeAccountFactoryConfig",
						"controltower:describeCoreService",
						"controltower:describeGuardrail",
						"controltower:describeGuardrailForTarget",
						"controltower:describeManagedAccount",
						"controltower:describeSingleSignOn",
						"controltower:getAvailableUpdates",
						"controltower:getHomeRegion",
						"controltower:getLandingZoneStatus",
						"controltower:listDirectoryGroups",
						"controltower:listGuardrailsForTarget",
						"controltower:listGuardrailViolations",
						"controltower:listManagedAccounts",
						"controltower:listManagedAccountsForGuardrail",
						"controltower:listManagedAccountsForParent",
						"controltower:listManagedOrganizationalUnits",
						"controltower:listManagedOrganizationalUnitsForGuardrail",
						"databrew:describeDataset",
						"databrew:describeJob",
						"databrew:describeProject",
						"databrew:describeRecipe",
						"databrew:listDatasets",
						"databrew:listJobRuns",
						"databrew:listJobs",
						"databrew:listProjects",
						"databrew:listRecipes",
						"databrew:listRecipeVersions",
						"databrew:listTagsForResource",
						"datapipeline:describeObjects",
						"datapipeline:describePipelines",
						"datapipeline:getPipelineDefinition",
						"datapipeline:listPipelines",
						"datapipeline:queryObjects",
						"datasync:describeAgent",
						"datasync:describeLocationEfs",
						"datasync:describeLocationFsxWindows",
						"datasync:describeLocationNfs",
						"datasync:describeLocationObjectStorage",
						"datasync:describeLocationS3",
						"datasync:describeLocationSmb",
						"datasync:describeTask",
						"datasync:describeTaskExecution",
						"datasync:listAgents",
						"datasync:listLocations",
						"datasync:listTaskExecutions",
						"datasync:listTasks",
						"dax:describeClusters",
						"dax:describeDefaultParameters",
						"dax:describeEvents",
						"dax:describeParameterGroups",
						"dax:describeParameters",
						"dax:describeSubnetGroups",
						"detective:getMembers",
						"detective:listGraphs",
						"detective:listInvitations",
						"detective:listMembers",
						"devicefarm:getAccountSettings",
						"devicefarm:getDevice",
						"devicefarm:getDevicePool",
						"devicefarm:getDevicePoolCompatibility",
						"devicefarm:getJob",
						"devicefarm:getProject",
						"devicefarm:getRemoteAccessSession",
						"devicefarm:getRun",
						"devicefarm:getSuite",
						"devicefarm:getTest",
						"devicefarm:getTestGridProject",
						"devicefarm:getTestGridSession",
						"devicefarm:getUpload",
						"devicefarm:listArtifacts",
						"devicefarm:listDevicePools",
						"devicefarm:listDevices",
						"devicefarm:listJobs",
						"devicefarm:listProjects",
						"devicefarm:listRemoteAccessSessions",
						"devicefarm:listRuns",
						"devicefarm:listSamples",
						"devicefarm:listSuites",
						"devicefarm:listTestGridProjects",
						"devicefarm:listTestGridSessionActions",
						"devicefarm:listTestGridSessionArtifacts",
						"devicefarm:listTestGridSessions",
						"devicefarm:listTests",
						"devicefarm:listUniqueProblems",
						"devicefarm:listUploads",
						"directconnect:describeConnections",
						"directconnect:describeConnectionsOnInterconnect",
						"directconnect:describeInterconnects",
						"directconnect:describeLocations",
						"directconnect:describeVirtualGateways",
						"directconnect:describeVirtualInterfaces",
						"dlm:getLifecyclePolicies",
						"dlm:getLifecyclePolicy",
						"dms:describeAccountAttributes",
						"dms:describeConnections",
						"dms:describeEndpoints",
						"dms:describeEndpointTypes",
						"dms:describeOrderableReplicationInstances",
						"dms:describeRefreshSchemasStatus",
						"dms:describeReplicationInstances",
						"dms:describeReplicationSubnetGroups",
						"drs:describeJobLogItems",
						"drs:describeJobs",
						"drs:describeRecoveryInstances",
						"drs:describeRecoverySnapshots",
						"drs:describeReplicationConfigurationTemplates",
						"drs:describeSourceServers",
						"drs:getLaunchConfiguration",
						"drs:getReplicationConfiguration",
						"ds:describeConditionalForwarders",
						"ds:describeDirectories",
						"ds:describeEventTopics",
						"ds:describeSnapshots",
						"ds:describeTrusts",
						"ds:getDirectoryLimits",
						"ds:getSnapshotLimits",
						"ds:listIpRoutes",
						"ds:listSchemaExtensions",
						"ds:listTagsForResource",
						"dynamodb:describeBackup",
						"dynamodb:describeContinuousBackups",
						"dynamodb:describeGlobalTable",
						"dynamodb:describeLimits",
						"dynamodb:describeStream",
						"dynamodb:describeTable",
						"dynamodb:describeTimeToLive",
						"dynamodb:listBackups",
						"dynamodb:listGlobalTables",
						"dynamodb:listStreams",
						"dynamodb:listTables",
						"dynamodb:listTagsOfResource",
						"ec2:describeAccountAttributes",
						"ec2:describeAddresses",
						"ec2:describeAvailabilityZones",
						"ec2:describeBundleTasks",
						"ec2:describeByoipCidrs",
						"ec2:describeCapacityReservations",
						"ec2:describeClassicLinkInstances",
						"ec2:describeClientVpnAuthorizationRules",
						"ec2:describeClientVpnConnections",
						"ec2:describeClientVpnEndpoints",
						"ec2:describeClientVpnRoutes",
						"ec2:describeClientVpnTargetNetworks",
						"ec2:describeCoipPools",
						"ec2:describeConversionTasks",
						"ec2:describeCustomerGateways",
						"ec2:describeDhcpOptions",
						"ec2:describeElasticGpus",
						"ec2:describeExportImageTasks",
						"ec2:describeExportTasks",
						"ec2:describeFastSnapshotRestores",
						"ec2:describeFleetHistory",
						"ec2:describeFleetInstances",
						"ec2:describeFleets",
						"ec2:describeFlowLogs",
						"ec2:describeHostReservationOfferings",
						"ec2:describeHostReservations",
						"ec2:describeHosts",
						"ec2:describeIdentityIdFormat",
						"ec2:describeIdFormat",
						"ec2:describeImageAttribute",
						"ec2:describeImages",
						"ec2:describeImportImageTasks",
						"ec2:describeImportSnapshotTasks",
						"ec2:describeInstanceAttribute",
						"ec2:describeInstances",
						"ec2:describeInstanceStatus",
						"ec2:describeInternetGateways",
						"ec2:describeKeyPairs",
						"ec2:describeLaunchTemplates",
						"ec2:describeLaunchTemplateVersions",
						"ec2:describeLocalGatewayRouteTables",
						"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
						"ec2:describeLocalGatewayRouteTableVpcAssociations",
						"ec2:describeLocalGateways",
						"ec2:describeLocalGatewayVirtualInterfaceGroups",
						"ec2:describeLocalGatewayVirtualInterfaces",
						"ec2:describeMovingAddresses",
						"ec2:describeNatGateways",
						"ec2:describeNetworkAcls",
						"ec2:describeNetworkInterfaceAttribute",
						"ec2:describeNetworkInterfaces",
						"ec2:describePlacementGroups",
						"ec2:describePrefixLists",
						"ec2:describePublicIpv4Pools",
						"ec2:describeRegions",
						"ec2:describeReservedInstances",
						"ec2:describeReservedInstancesListings",
						"ec2:describeReservedInstancesModifications",
						"ec2:describeReservedInstancesOfferings",
						"ec2:describeRouteTables",
						"ec2:describeScheduledInstances",
						"ec2:describeSecurityGroups",
						"ec2:describeSnapshotAttribute",
						"ec2:describeSnapshots",
						"ec2:describeSpotDatafeedSubscription",
						"ec2:describeSpotFleetInstances",
						"ec2:describeSpotFleetRequestHistory",
						"ec2:describeSpotFleetRequests",
						"ec2:describeSpotInstanceRequests",
						"ec2:describeSpotPriceHistory",
						"ec2:describeSubnets",
						"ec2:describeTags",
						"ec2:describeTrafficMirrorFilters",
						"ec2:describeTrafficMirrorSessions",
						"ec2:describeTrafficMirrorTargets",
						"ec2:describeTransitGatewayAttachments",
						"ec2:describeTransitGatewayRouteTables",
						"ec2:describeTransitGateways",
						"ec2:describeTransitGatewayVpcAttachments",
						"ec2:describeVolumeAttribute",
						"ec2:describeVolumes",
						"ec2:describeVolumesModifications",
						"ec2:describeVolumeStatus",
						"ec2:describeVpcAttribute",
						"ec2:describeVpcClassicLink",
						"ec2:describeVpcClassicLinkDnsSupport",
						"ec2:describeVpcEndpointConnectionNotifications",
						"ec2:describeVpcEndpointConnections",
						"ec2:describeVpcEndpoints",
						"ec2:describeVpcEndpointServiceConfigurations",
						"ec2:describeVpcEndpointServicePermissions",
						"ec2:describeVpcEndpointServices",
						"ec2:describeVpcPeeringConnections",
						"ec2:describeVpcs",
						"ec2:describeVpnConnections",
						"ec2:describeVpnGateways",
						"ec2:getCoipPoolUsage",
						"ec2:getConsoleScreenshot",
						"ec2:getReservedInstancesExchangeQuote",
						"ec2:searchLocalGatewayRoutes",
						"ecr-public:describeImages",
						"ecr-public:describeImageTags",
						"ecr-public:describeRegistries",
						"ecr-public:describeRepositories",
						"ecr-public:getRegistryCatalogData",
						"ecr-public:getRepositoryCatalogData",
						"ecr-public:getRepositoryPolicy",
						"ecr-public:listTagsForResource",
						"ecr:batchCheckLayerAvailability",
						"ecr:describeImages",
						"ecr:describeImageScanFindings",
						"ecr:describeRegistry",
						"ecr:describeRepositories",
						"ecr:getLifecyclePolicy",
						"ecr:getRegistryPolicy",
						"ecr:getRepositoryPolicy",
						"ecr:listImages",
						"ecr:listTagsForResource",
						"ecs:describeCapacityProviders",
						"ecs:describeClusters",
						"ecs:describeContainerInstances",
						"ecs:describeServices",
						"ecs:describeTaskDefinition",
						"ecs:describeTasks",
						"ecs:describeTaskSets",
						"ecs:listAccountSettings",
						"ecs:listAttributes",
						"ecs:listClusters",
						"ecs:listContainerInstances",
						"ecs:listServices",
						"ecs:listTagsForResource",
						"ecs:listTaskDefinitionFamilies",
						"ecs:listTaskDefinitions",
						"ecs:listTasks",
						"eks:describeCluster",
						"eks:describeFargateProfile",
						"eks:describeNodegroup",
						"eks:describeUpdate",
						"eks:listClusters",
						"eks:listFargateProfiles",
						"eks:listNodegroups",
						"eks:listUpdates",
						"elasticache:describeCacheClusters",
						"elasticache:describeCacheEngineVersions",
						"elasticache:describeCacheParameterGroups",
						"elasticache:describeCacheParameters",
						"elasticache:describeCacheSecurityGroups",
						"elasticache:describeCacheSubnetGroups",
						"elasticache:describeEngineDefaultParameters",
						"elasticache:describeEvents",
						"elasticache:describeReplicationGroups",
						"elasticache:describeReservedCacheNodes",
						"elasticache:describeReservedCacheNodesOfferings",
						"elasticache:describeSnapshots",
						"elasticache:listAllowedNodeTypeModifications",
						"elasticache:listTagsForResource",
						"elasticbeanstalk:checkDNSAvailability",
						"elasticbeanstalk:describeApplicationVersions",
						"elasticbeanstalk:describeConfigurationOptions",
						"elasticbeanstalk:describeEnvironmentHealth",
						"elasticbeanstalk:describeEnvironmentManagedActionHistory",
						"elasticbeanstalk:describeEnvironmentManagedActions",
						"elasticbeanstalk:describeEnvironmentResources",
						"elasticbeanstalk:describeEnvironments",
						"elasticbeanstalk:describeEvents",
						"elasticbeanstalk:describeInstancesHealth",
						"elasticbeanstalk:describePlatformVersion",
						"elasticbeanstalk:listAvailableSolutionStacks",
						"elasticbeanstalk:listPlatformVersions",
						"elasticbeanstalk:validateConfigurationSettings",
						"elasticfilesystem:describeAccessPoints",
						"elasticfilesystem:describeFileSystemPolicy",
						"elasticfilesystem:describeFileSystems",
						"elasticfilesystem:describeLifecycleConfiguration",
						"elasticfilesystem:describeMountTargets",
						"elasticfilesystem:describeMountTargetSecurityGroups",
						"elasticfilesystem:describeTags",
						"elasticfilesystem:listTagsForResource",
						"elasticloadbalancing:describeInstanceHealth",
						"elasticloadbalancing:describeListenerCertificates",
						"elasticloadbalancing:describeListeners",
						"elasticloadbalancing:describeLoadBalancerAttributes",
						"elasticloadbalancing:describeLoadBalancerPolicies",
						"elasticloadbalancing:describeLoadBalancerPolicyTypes",
						"elasticloadbalancing:describeLoadBalancers",
						"elasticloadbalancing:describeRules",
						"elasticloadbalancing:describeSSLPolicies",
						"elasticloadbalancing:describeTags",
						"elasticloadbalancing:describeTargetGroupAttributes",
						"elasticloadbalancing:describeTargetGroups",
						"elasticloadbalancing:describeTargetHealth",
						"elasticmapreduce:describeCluster",
						"elasticmapreduce:describeSecurityConfiguration",
						"elasticmapreduce:describeStep",
						"elasticmapreduce:listBootstrapActions",
						"elasticmapreduce:listClusters",
						"elasticmapreduce:listInstanceGroups",
						"elasticmapreduce:listInstances",
						"elasticmapreduce:listSecurityConfigurations",
						"elasticmapreduce:listSteps",
						"elastictranscoder:listJobsByPipeline",
						"elastictranscoder:listJobsByStatus",
						"elastictranscoder:listPipelines",
						"elastictranscoder:listPresets",
						"elastictranscoder:readPipeline",
						"elastictranscoder:readPreset",
						"es:describeElasticsearchDomain",
						"es:describeElasticsearchDomainConfig",
						"es:describeElasticsearchDomains",
						"es:listDomainNames",
						"events:describeApiDestination",
						"events:describeEventBus",
						"events:describeEventSource",
						"events:describePartnerEventSource",
						"events:describeRule",
						"events:listApiDestinations",
						"events:listConnections",
						"events:listEventBuses",
						"events:listEventSources",
						"events:listPartnerEventSourceAccounts",
						"events:listPartnerEventSources",
						"events:listRuleNamesByTarget",
						"events:listRules",
						"events:listTargetsByRule",
						"events:testEventPattern",
						"firehose:describeDeliveryStream",
						"firehose:listDeliveryStreams",
						"fms:getAdminAccount",
						"fms:getComplianceDetail",
						"fms:getNotificationChannel",
						"fms:getPolicy",
						"fms:getProtectionStatus",
						"fms:listComplianceStatus",
						"fms:listMemberAccounts",
						"fms:listPolicies",
						"forecast:describeDataset",
						"forecast:describeDatasetGroup",
						"forecast:describeDatasetImportJob",
						"forecast:describeForecast",
						"forecast:describeForecastExportJob",
						"forecast:describePredictor",
						"forecast:getAccuracyMetrics",
						"forecast:listDatasetGroups",
						"forecast:listDatasetImportJobs",
						"forecast:listDatasets",
						"forecast:listForecastExportJobs",
						"forecast:listForecasts",
						"forecast:listPredictors",
						"fsx:describeBackups",
						"fsx:describeDataRepositoryTasks",
						"fsx:describeFileSystems",
						"fsx:describeSnapshots",
						"fsx:describeStorageVirtualMachines",
						"fsx:describeVolumes",
						"fsx:listTagsForResource",
						"glacier:describeJob",
						"glacier:describeVault",
						"glacier:getDataRetrievalPolicy",
						"glacier:getVaultAccessPolicy",
						"glacier:getVaultLock",
						"glacier:getVaultNotifications",
						"glacier:listJobs",
						"glacier:listTagsForVault",
						"glacier:listVaults",
						"globalaccelerator:describeAccelerator",
						"globalaccelerator:describeAcceleratorAttributes",
						"globalaccelerator:describeEndpointGroup",
						"globalaccelerator:describeListener",
						"globalaccelerator:listAccelerators",
						"globalaccelerator:listEndpointGroups",
						"globalaccelerator:listListeners",
						"glue:batchGetPartition",
						"glue:checkSchemaVersionValidity",
						"glue:getCatalogImportStatus",
						"glue:getClassifier",
						"glue:getClassifiers",
						"glue:getCrawler",
						"glue:getCrawlerMetrics",
						"glue:getCrawlers",
						"glue:getDatabase",
						"glue:getDatabases",
						"glue:getDataflowGraph",
						"glue:getDevEndpoint",
						"glue:getDevEndpoints",
						"glue:getJob",
						"glue:getJobRun",
						"glue:getJobRuns",
						"glue:getJobs",
						"glue:getMapping",
						"glue:getPartition",
						"glue:getPartitions",
						"glue:getRegistry",
						"glue:getSchema",
						"glue:getSchemaByDefinition",
						"glue:getSchemaVersion",
						"glue:getSchemaVersionsDiff",
						"glue:getTable",
						"glue:getTables",
						"glue:getTableVersions",
						"glue:getTrigger",
						"glue:getTriggers",
						"glue:getUserDefinedFunction",
						"glue:getUserDefinedFunctions",
						"glue:listRegistries",
						"glue:listSchemas",
						"glue:listSchemaVersions",
						"glue:querySchemaVersionMetadata",
						"greengrass:getConnectivityInfo",
						"greengrass:getCoreDefinition",
						"greengrass:getCoreDefinitionVersion",
						"greengrass:getDeploymentStatus",
						"greengrass:getDeviceDefinition",
						"greengrass:getDeviceDefinitionVersion",
						"greengrass:getFunctionDefinition",
						"greengrass:getFunctionDefinitionVersion",
						"greengrass:getGroup",
						"greengrass:getGroupCertificateAuthority",
						"greengrass:getGroupVersion",
						"greengrass:getLoggerDefinition",
						"greengrass:getLoggerDefinitionVersion",
						"greengrass:getResourceDefinitionVersion",
						"greengrass:getServiceRoleForAccount",
						"greengrass:getSubscriptionDefinition",
						"greengrass:getSubscriptionDefinitionVersion",
						"greengrass:listCoreDefinitions",
						"greengrass:listCoreDefinitionVersions",
						"greengrass:listDeployments",
						"greengrass:listDeviceDefinitions",
						"greengrass:listDeviceDefinitionVersions",
						"greengrass:listFunctionDefinitions",
						"greengrass:listFunctionDefinitionVersions",
						"greengrass:listGroups",
						"greengrass:listGroupVersions",
						"greengrass:listLoggerDefinitions",
						"greengrass:listLoggerDefinitionVersions",
						"greengrass:listResourceDefinitions",
						"greengrass:listResourceDefinitionVersions",
						"greengrass:listSubscriptionDefinitions",
						"greengrass:listSubscriptionDefinitionVersions",
						"guardduty:getDetector",
						"guardduty:getFindings",
						"guardduty:getFindingsStatistics",
						"guardduty:getInvitationsCount",
						"guardduty:getIPSet",
						"guardduty:getMasterAccount",
						"guardduty:getMembers",
						"guardduty:getThreatIntelSet",
						"guardduty:listDetectors",
						"guardduty:listFindings",
						"guardduty:listInvitations",
						"guardduty:listIPSets",
						"guardduty:listMembers",
						"guardduty:listThreatIntelSets",
						"health:describeAffectedAccountsForOrganization",
						"health:describeAffectedEntities",
						"health:describeAffectedEntitiesForOrganization",
						"health:describeEntityAggregates",
						"health:describeEventAggregates",
						"health:describeEventDetails",
						"health:describeEventDetailsForOrganization",
						"health:describeEvents",
						"health:describeEventsForOrganization",
						"health:describeEventTypes",
						"health:describeHealthServiceStatusForOrganization",
						"iam:getAccessKeyLastUsed",
						"iam:getAccountAuthorizationDetails",
						"iam:getAccountPasswordPolicy",
						"iam:getAccountSummary",
						"iam:getContextKeysForCustomPolicy",
						"iam:getContextKeysForPrincipalPolicy",
						"iam:getCredentialReport",
						"iam:getGroup",
						"iam:getGroupPolicy",
						"iam:getInstanceProfile",
						"iam:getLoginProfile",
						"iam:getOpenIDConnectProvider",
						"iam:getPolicy",
						"iam:getPolicyVersion",
						"iam:getRole",
						"iam:getRolePolicy",
						"iam:getSAMLProvider",
						"iam:getServerCertificate",
						"iam:getSSHPublicKey",
						"iam:getUser",
						"iam:getUserPolicy",
						"iam:listAccessKeys",
						"iam:listAccountAliases",
						"iam:listAttachedGroupPolicies",
						"iam:listAttachedRolePolicies",
						"iam:listAttachedUserPolicies",
						"iam:listEntitiesForPolicy",
						"iam:listGroupPolicies",
						"iam:listGroups",
						"iam:listGroupsForUser",
						"iam:listInstanceProfiles",
						"iam:listInstanceProfilesForRole",
						"iam:listMFADevices",
						"iam:listOpenIDConnectProviders",
						"iam:listPolicies",
						"iam:listPolicyVersions",
						"iam:listRolePolicies",
						"iam:listRoles",
						"iam:listSAMLProviders",
						"iam:listServerCertificates",
						"iam:listSigningCertificates",
						"iam:listSSHPublicKeys",
						"iam:listUserPolicies",
						"iam:listUsers",
						"iam:listVirtualMFADevices",
						"iam:simulateCustomPolicy",
						"iam:simulatePrincipalPolicy",
						"imagebuilder:getComponent",
						"imagebuilder:getComponentPolicy",
						"imagebuilder:getContainerRecipe",
						"imagebuilder:getDistributionConfiguration",
						"imagebuilder:getImage",
						"imagebuilder:getImagePipeline",
						"imagebuilder:getImagePolicy",
						"imagebuilder:getImageRecipe",
						"imagebuilder:getImageRecipePolicy",
						"imagebuilder:getInfrastructureConfiguration",
						"imagebuilder:listComponentBuildVersions",
						"imagebuilder:listComponents",
						"imagebuilder:listContainerRecipes",
						"imagebuilder:listDistributionConfigurations",
						"imagebuilder:listImageBuildVersions",
						"imagebuilder:listImagePipelineImages",
						"imagebuilder:listImagePipelines",
						"imagebuilder:listImageRecipes",
						"imagebuilder:listImages",
						"imagebuilder:listInfrastructureConfigurations",
						"imagebuilder:listTagsForResource",
						"inspector:describeAssessmentRuns",
						"inspector:describeAssessmentTargets",
						"inspector:describeAssessmentTemplates",
						"inspector:describeCrossAccountAccessRole",
						"inspector:describeResourceGroups",
						"inspector:describeRulesPackages",
						"inspector:getTelemetryMetadata",
						"inspector:listAssessmentRunAgents",
						"inspector:listAssessmentRuns",
						"inspector:listAssessmentTargets",
						"inspector:listAssessmentTemplates",
						"inspector:listEventSubscriptions",
						"inspector:listRulesPackages",
						"inspector:listTagsForResource",
						"iot:describeAuthorizer",
						"iot:describeCACertificate",
						"iot:describeCertificate",
						"iot:describeDefaultAuthorizer",
						"iot:describeEndpoint",
						"iot:describeIndex",
						"iot:describeJobExecution",
						"iot:describeThing",
						"iot:describeThingGroup",
						"iot:describeTunnel",
						"iot:getEffectivePolicies",
						"iot:getIndexingConfiguration",
						"iot:getLoggingOptions",
						"iot:getPolicy",
						"iot:getPolicyVersion",
						"iot:getTopicRule",
						"iot:getV2LoggingOptions",
						"iot:listAttachedPolicies",
						"iot:listAuthorizers",
						"iot:listCACertificates",
						"iot:listCertificates",
						"iot:listCertificatesByCA",
						"iot:listJobExecutionsForJob",
						"iot:listJobExecutionsForThing",
						"iot:listJobs",
						"iot:listOutgoingCertificates",
						"iot:listPolicies",
						"iot:listPolicyPrincipals",
						"iot:listPolicyVersions",
						"iot:listPrincipalPolicies",
						"iot:listPrincipalThings",
						"iot:listRoleAliases",
						"iot:listTargetsForPolicy",
						"iot:listThingGroups",
						"iot:listThingGroupsForThing",
						"iot:listThingPrincipals",
						"iot:listThingRegistrationTasks",
						"iot:listThings",
						"iot:listThingTypes",
						"iot:listTopicRules",
						"iot:listTunnels",
						"iot:listV2LoggingLevels",
						"iotevents:describeDetector",
						"iotevents:describeDetectorModel",
						"iotevents:describeInput",
						"iotevents:describeLoggingOptions",
						"iotevents:listDetectorModels",
						"iotevents:listDetectorModelVersions",
						"iotevents:listDetectors",
						"iotevents:listInputs",
						"iotsitewise:describeAccessPolicy",
						"iotsitewise:describeAsset",
						"iotsitewise:describeAssetModel",
						"iotsitewise:describeAssetProperty",
						"iotsitewise:describeDashboard",
						"iotsitewise:describeGateway",
						"iotsitewise:describeGatewayCapabilityConfiguration",
						"iotsitewise:describeLoggingOptions",
						"iotsitewise:describePortal",
						"iotsitewise:describeProject",
						"iotsitewise:listAccessPolicies",
						"iotsitewise:listAssetModels",
						"iotsitewise:listAssets",
						"iotsitewise:listAssociatedAssets",
						"iotsitewise:listDashboards",
						"iotsitewise:listGateways",
						"iotsitewise:listPortals",
						"iotsitewise:listProjectAssets",
						"iotsitewise:listProjects",
						"iotwireless:getDestination",
						"iotwireless:getDeviceProfile",
						"iotwireless:getPartnerAccount",
						"iotwireless:getServiceEndpoint",
						"iotwireless:getServiceProfile",
						"iotwireless:getWirelessDevice",
						"iotwireless:getWirelessDeviceStatistics",
						"iotwireless:getWirelessGateway",
						"iotwireless:getWirelessGatewayCertificate",
						"iotwireless:getWirelessGatewayFirmwareInformation",
						"iotwireless:getWirelessGatewayStatistics",
						"iotwireless:getWirelessGatewayTask",
						"iotwireless:getWirelessGatewayTaskDefinition",
						"iotwireless:listDestinations",
						"iotwireless:listDeviceProfiles",
						"iotwireless:listPartnerAccounts",
						"iotwireless:listServiceProfiles",
						"iotwireless:listTagsForResource",
						"iotwireless:listWirelessDevices",
						"iotwireless:listWirelessGateways",
						"iotwireless:listWirelessGatewayTaskDefinitions",
						"kafka:describeCluster",
						"kafka:getBootstrapBrokers",
						"kafka:listClusters",
						"kafka:listNodes",
						"kendra:describeDataSource",
						"kendra:describeFaq",
						"kendra:describeIndex",
						"kendra:listDataSources",
						"kendra:listFaqs",
						"kendra:listIndices",
						"kinesis:describeStream",
						"kinesis:listStreams",
						"kinesis:listTagsForStream",
						"kinesisanalytics:describeApplication",
						"kinesisanalytics:describeApplicationSnapshot",
						"kinesisanalytics:listApplications",
						"kinesisanalytics:listApplicationSnapshots",
						"kms:describeKey",
						"kms:getKeyPolicy",
						"kms:getKeyRotationStatus",
						"kms:listAliases",
						"kms:listGrants",
						"kms:listKeyPolicies",
						"kms:listKeys",
						"kms:listResourceTags",
						"kms:listRetirableGrants",
						"lambda:getAccountSettings",
						"lambda:getAlias",
						"lambda:getCodeSigningConfig",
						"lambda:getEventSourceMapping",
						"lambda:getFunction",
						"lambda:getFunctionCodeSigningConfig",
						"lambda:getFunctionConcurrency",
						"lambda:getFunctionConfiguration",
						"lambda:getFunctionEventInvokeConfig",
						"lambda:getLayerVersion",
						"lambda:getLayerVersionPolicy",
						"lambda:getPolicy",
						"lambda:getProvisionedConcurrencyConfig",
						"lambda:listAliases",
						"lambda:listCodeSigningConfigs",
						"lambda:listEventSourceMappings",
						"lambda:listFunctionEventInvokeConfigs",
						"lambda:listFunctions",
						"lambda:listFunctionsByCodeSigningConfig",
						"lambda:listLayers",
						"lambda:listLayerVersions",
						"lambda:listProvisionedConcurrencyConfigs",
						"lambda:listVersionsByFunction",
						"launchwizard:describeProvisionedApp",
						"launchwizard:describeProvisioningEvents",
						"launchwizard:listProvisionedApps",
						"lex:getBot",
						"lex:getBotAlias",
						"lex:getBotAliases",
						"lex:getBotChannelAssociation",
						"lex:getBotChannelAssociations",
						"lex:getBots",
						"lex:getBotVersions",
						"lex:getBuiltinIntent",
						"lex:getBuiltinIntents",
						"lex:getBuiltinSlotTypes",
						"lex:getIntent",
						"lex:getIntents",
						"lex:getIntentVersions",
						"lex:getSlotType",
						"lex:getSlotTypes",
						"lex:getSlotTypeVersions",
						"license-manager:getLicenseConfiguration",
						"license-manager:getServiceSettings",
						"license-manager:listAssociationsForLicenseConfiguration",
						"license-manager:listFailuresForLicenseConfigurationOperations",
						"license-manager:listLicenseConfigurations",
						"license-manager:listLicenseSpecificationsForResource",
						"license-manager:listResourceInventory",
						"license-manager:listUsageForLicenseConfiguration",
						"lightsail:getActiveNames",
						"lightsail:getAlarms",
						"lightsail:getAutoSnapshots",
						"lightsail:getBlueprints",
						"lightsail:getBundles",
						"lightsail:getCertificates",
						"lightsail:getContainerImages",
						"lightsail:getContainerServiceDeployments",
						"lightsail:getContainerServiceMetricData",
						"lightsail:getContainerServicePowers",
						"lightsail:getContainerServices",
						"lightsail:getDisk",
						"lightsail:getDisks",
						"lightsail:getDiskSnapshot",
						"lightsail:getDiskSnapshots",
						"lightsail:getDistributionBundles",
						"lightsail:getDistributionMetricData",
						"lightsail:getDistributions",
						"lightsail:getDomain",
						"lightsail:getDomains",
						"lightsail:getExportSnapshotRecords",
						"lightsail:getInstance",
						"lightsail:getInstanceMetricData",
						"lightsail:getInstancePortStates",
						"lightsail:getInstances",
						"lightsail:getInstanceSnapshot",
						"lightsail:getInstanceSnapshots",
						"lightsail:getInstanceState",
						"lightsail:getKeyPair",
						"lightsail:getKeyPairs",
						"lightsail:getLoadBalancer",
						"lightsail:getLoadBalancerMetricData",
						"lightsail:getLoadBalancers",
						"lightsail:getLoadBalancerTlsCertificates",
						"lightsail:getOperation",
						"lightsail:getOperations",
						"lightsail:getOperationsForResource",
						"lightsail:getRegions",
						"lightsail:getRelationalDatabase",
						"lightsail:getRelationalDatabaseMetricData",
						"lightsail:getRelationalDatabases",
						"lightsail:getRelationalDatabaseSnapshot",
						"lightsail:getRelationalDatabaseSnapshots",
						"lightsail:getStaticIp",
						"lightsail:getStaticIps",
						"lightsail:isVpcPeered",
						"logs:describeDestinations",
						"logs:describeExportTasks",
						"logs:describeLogGroups",
						"logs:describeLogStreams",
						"logs:describeMetricFilters",
						"logs:describeQueries",
						"logs:describeSubscriptionFilters",
						"logs:testMetricFilter",
						"lookoutmetrics:describeAlert",
						"lookoutmetrics:describeAnomalyDetectionExecutions",
						"lookoutmetrics:describeAnomalyDetector",
						"lookoutmetrics:describeMetricSet",
						"lookoutmetrics:getAnomalyGroup",
						"lookoutmetrics:getDataQualityMetrics",
						"lookoutmetrics:getFeedback",
						"lookoutmetrics:getSampleData",
						"lookoutmetrics:listAlerts",
						"lookoutmetrics:listAnomalyDetectors",
						"lookoutmetrics:listAnomalyGroupSummaries",
						"lookoutmetrics:listAnomalyGroupTimeSeries",
						"lookoutmetrics:listMetricSets",
						"lookoutmetrics:listTagsForResource",
						"machinelearning:describeBatchPredictions",
						"machinelearning:describeDataSources",
						"machinelearning:describeEvaluations",
						"machinelearning:describeMLModels",
						"machinelearning:getBatchPrediction",
						"machinelearning:getDataSource",
						"machinelearning:getEvaluation",
						"machinelearning:getMLModel",
						"managedblockchain:getMember",
						"managedblockchain:getNetwork",
						"managedblockchain:getNode",
						"managedblockchain:listMembers",
						"managedblockchain:listNetworks",
						"managedblockchain:listNodes",
						"mediaconnect:describeFlow",
						"mediaconnect:listEntitlements",
						"mediaconnect:listFlows",
						"mediaconnect:listTagsForResource",
						"mediaconvert:describeEndpoints",
						"mediaconvert:getJob",
						"mediaconvert:getJobTemplate",
						"mediaconvert:getPreset",
						"mediaconvert:getQueue",
						"mediaconvert:listJobs",
						"mediaconvert:listJobTemplates",
						"medialive:describeChannel",
						"medialive:describeInput",
						"medialive:describeInputDevice",
						"medialive:describeInputSecurityGroup",
						"medialive:describeMultiplex",
						"medialive:describeOffering",
						"medialive:describeReservation",
						"medialive:describeSchedule",
						"medialive:listChannels",
						"medialive:listInputDevices",
						"medialive:listInputs",
						"medialive:listInputSecurityGroups",
						"medialive:listMultiplexes",
						"medialive:listOfferings",
						"medialive:listReservations",
						"mediapackage:describeChannel",
						"mediapackage:describeOriginEndpoint",
						"mediapackage:listChannels",
						"mediapackage:listOriginEndpoints",
						"mediastore:describeContainer",
						"mediastore:getContainerPolicy",
						"mediastore:getCorsPolicy",
						"mediastore:listContainers",
						"mediatailor:getPlaybackConfiguration",
						"mediatailor:listPlaybackConfigurations",
						"mgn:describeJobLogItems",
						"mgn:describeJobs",
						"mgn:describeReplicationConfigurationTemplates",
						"mgn:describeSourceServers",
						"mgn:describeVcenterClients",
						"mgn:getLaunchConfiguration",
						"mgn:getReplicationConfiguration",
						"mobiletargeting:getAdmChannel",
						"mobiletargeting:getApnsChannel",
						"mobiletargeting:getApnsSandboxChannel",
						"mobiletargeting:getApnsVoipChannel",
						"mobiletargeting:getApnsVoipSandboxChannel",
						"mobiletargeting:getApp",
						"mobiletargeting:getApplicationSettings",
						"mobiletargeting:getApps",
						"mobiletargeting:getBaiduChannel",
						"mobiletargeting:getCampaign",
						"mobiletargeting:getCampaignActivities",
						"mobiletargeting:getCampaigns",
						"mobiletargeting:getCampaignVersion",
						"mobiletargeting:getCampaignVersions",
						"mobiletargeting:getEmailChannel",
						"mobiletargeting:getEndpoint",
						"mobiletargeting:getEventStream",
						"mobiletargeting:getExportJob",
						"mobiletargeting:getExportJobs",
						"mobiletargeting:getGcmChannel",
						"mobiletargeting:getImportJob",
						"mobiletargeting:getImportJobs",
						"mobiletargeting:getSegment",
						"mobiletargeting:getSegmentImportJobs",
						"mobiletargeting:getSegments",
						"mobiletargeting:getSegmentVersion",
						"mobiletargeting:getSegmentVersions",
						"mobiletargeting:getSmsChannel",
						"mq:describeBroker",
						"mq:describeConfiguration",
						"mq:describeConfigurationRevision",
						"mq:describeUser",
						"mq:listBrokers",
						"mq:listConfigurationRevisions",
						"mq:listConfigurations",
						"mq:listUsers",
						"network-firewall:describeFirewall",
						"network-firewall:describeFirewallPolicy",
						"network-firewall:describeLoggingConfiguration",
						"network-firewall:describeRuleGroup",
						"network-firewall:listFirewallPolicies",
						"network-firewall:listFirewalls",
						"network-firewall:listRuleGroups",
						"networkmanager:describeGlobalNetworks",
						"networkmanager:getCustomerGatewayAssociations",
						"networkmanager:getDevices",
						"networkmanager:getLinkAssociations",
						"networkmanager:getLinks",
						"networkmanager:getSites",
						"networkmanager:getTransitGatewayRegistrations",
						"opsworks-cm:describeAccountAttributes",
						"opsworks-cm:describeBackups",
						"opsworks-cm:describeEvents",
						"opsworks-cm:describeNodeAssociationStatus",
						"opsworks-cm:describeServers",
						"opsworks:describeAgentVersions",
						"opsworks:describeApps",
						"opsworks:describeCommands",
						"opsworks:describeDeployments",
						"opsworks:describeEcsClusters",
						"opsworks:describeElasticIps",
						"opsworks:describeElasticLoadBalancers",
						"opsworks:describeInstances",
						"opsworks:describeLayers",
						"opsworks:describeLoadBasedAutoScaling",
						"opsworks:describeMyUserProfile",
						"opsworks:describePermissions",
						"opsworks:describeRaidArrays",
						"opsworks:describeRdsDbInstances",
						"opsworks:describeServiceErrors",
						"opsworks:describeStackProvisioningParameters",
						"opsworks:describeStacks",
						"opsworks:describeStackSummary",
						"opsworks:describeTimeBasedAutoScaling",
						"opsworks:describeUserProfiles",
						"opsworks:describeVolumes",
						"opsworks:getHostnameSuggestion",
						"organizations:listAccounts",
						"organizations:listTagsForResource",
						"outposts:getOutpost",
						"outposts:getOutpostInstanceTypes",
						"outposts:listOutposts",
						"outposts:listSites",
						"personalize:describeAlgorithm",
						"personalize:describeCampaign",
						"personalize:describeDataset",
						"personalize:describeDatasetGroup",
						"personalize:describeDatasetImportJob",
						"personalize:describeEventTracker",
						"personalize:describeFeatureTransformation",
						"personalize:describeRecipe",
						"personalize:describeSchema",
						"personalize:describeSolution",
						"personalize:describeSolutionVersion",
						"personalize:listCampaigns",
						"personalize:listDatasetGroups",
						"personalize:listDatasetImportJobs",
						"personalize:listDatasets",
						"personalize:listEventTrackers",
						"personalize:listRecipes",
						"personalize:listSchemas",
						"personalize:listSolutions",
						"personalize:listSolutionVersions",
						"polly:describeVoices",
						"polly:getLexicon",
						"polly:listLexicons",
						"pricing:describeServices",
						"pricing:getAttributeValues",
						"pricing:getProducts",
						"quicksight:describeDashboard",
						"quicksight:describeDashboardPermissions",
						"quicksight:describeGroup",
						"quicksight:describeIAMPolicyAssignment",
						"quicksight:describeTemplate",
						"quicksight:describeTemplateAlias",
						"quicksight:describeTemplatePermissions",
						"quicksight:describeUser",
						"quicksight:listDashboards",
						"quicksight:listGroupMemberships",
						"quicksight:listGroups",
						"quicksight:listIAMPolicyAssignments",
						"quicksight:listIAMPolicyAssignmentsForUser",
						"quicksight:listTemplateAliases",
						"quicksight:listTemplates",
						"quicksight:listTemplateVersions",
						"quicksight:listUserGroups",
						"quicksight:listUsers",
						"ram:getPermission",
						"ram:getResourceShareAssociations",
						"ram:getResourceShareInvitations",
						"ram:getResourceShares",
						"ram:listPendingInvitationResources",
						"ram:listPrincipals",
						"ram:listResources",
						"ram:listResourceSharePermissions",
						"rbin:getRule",
						"rbin:listRules",
						"rds:describeAccountAttributes",
						"rds:describeCertificates",
						"rds:describeDBClusterParameterGroups",
						"rds:describeDBClusterParameters",
						"rds:describeDBClusters",
						"rds:describeDBClusterSnapshots",
						"rds:describeDBEngineVersions",
						"rds:describeDBInstances",
						"rds:describeDBParameterGroups",
						"rds:describeDBParameters",
						"rds:describeDBSecurityGroups",
						"rds:describeDBSnapshotAttributes",
						"rds:describeDBSnapshots",
						"rds:describeDBSubnetGroups",
						"rds:describeEngineDefaultClusterParameters",
						"rds:describeEngineDefaultParameters",
						"rds:describeEventCategories",
						"rds:describeEvents",
						"rds:describeEventSubscriptions",
						"rds:describeExportTasks",
						"rds:describeOptionGroupOptions",
						"rds:describeOptionGroups",
						"rds:describeOrderableDBInstanceOptions",
						"rds:describePendingMaintenanceActions",
						"rds:describeReservedDBInstances",
						"rds:describeReservedDBInstancesOfferings",
						"rds:listTagsForResource",
						"redshift-data:describeStatement",
						"redshift-data:listStatements",
						"redshift:describeClusterParameterGroups",
						"redshift:describeClusterParameters",
						"redshift:describeClusters",
						"redshift:describeClusterSecurityGroups",
						"redshift:describeClusterSnapshots",
						"redshift:describeClusterSubnetGroups",
						"redshift:describeClusterVersions",
						"redshift:describeDefaultClusterParameters",
						"redshift:describeEventCategories",
						"redshift:describeEvents",
						"redshift:describeEventSubscriptions",
						"redshift:describeHsmClientCertificates",
						"redshift:describeHsmConfigurations",
						"redshift:describeLoggingStatus",
						"redshift:describeOrderableClusterOptions",
						"redshift:describeReservedNodeOfferings",
						"redshift:describeReservedNodes",
						"redshift:describeResize",
						"redshift:describeSnapshotCopyGrants",
						"redshift:describeStorage",
						"redshift:describeTableRestoreStatus",
						"redshift:describeTags",
						"rekognition:listCollections",
						"rekognition:listFaces",
						"resource-groups:getGroup",
						"resource-groups:getGroupQuery",
						"resource-groups:getTags",
						"resource-groups:listGroupResources",
						"resource-groups:listGroups",
						"resource-groups:searchResources",
						"robomaker:batchDescribeSimulationJob",
						"robomaker:describeDeploymentJob",
						"robomaker:describeFleet",
						"robomaker:describeRobot",
						"robomaker:describeRobotApplication",
						"robomaker:describeSimulationApplication",
						"robomaker:describeSimulationJob",
						"robomaker:listDeploymentJobs",
						"robomaker:listFleets",
						"robomaker:listRobotApplications",
						"robomaker:listRobots",
						"robomaker:listSimulationApplications",
						"robomaker:listSimulationJobs",
						"route53-recovery-readiness:getCell",
						"route53-recovery-readiness:getCellReadinessSummary",
						"route53-recovery-readiness:getReadinessCheck",
						"route53-recovery-readiness:getReadinessCheckResourceStatus",
						"route53-recovery-readiness:getReadinessCheckStatus",
						"route53-recovery-readiness:getRecoveryGroup",
						"route53-recovery-readiness:getRecoveryGroupReadinessSummary",
						"route53-recovery-readiness:listCells",
						"route53-recovery-readiness:listReadinessChecks",
						"route53-recovery-readiness:listRecoveryGroups",
						"route53-recovery-readiness:listResourceSets",
						"route53:getChange",
						"route53:getCheckerIpRanges",
						"route53:getGeoLocation",
						"route53:getHealthCheck",
						"route53:getHealthCheckCount",
						"route53:getHealthCheckLastFailureReason",
						"route53:getHealthCheckStatus",
						"route53:getHostedZone",
						"route53:getHostedZoneCount",
						"route53:getReusableDelegationSet",
						"route53:getTrafficPolicy",
						"route53:getTrafficPolicyInstance",
						"route53:getTrafficPolicyInstanceCount",
						"route53:listGeoLocations",
						"route53:listHealthChecks",
						"route53:listHostedZones",
						"route53:listHostedZonesByName",
						"route53:listResourceRecordSets",
						"route53:listReusableDelegationSets",
						"route53:listTrafficPolicies",
						"route53:listTrafficPolicyInstances",
						"route53:listTrafficPolicyInstancesByHostedZone",
						"route53:listTrafficPolicyInstancesByPolicy",
						"route53:listTrafficPolicyVersions",
						"route53domains:checkDomainAvailability",
						"route53domains:getContactReachabilityStatus",
						"route53domains:getDomainDetail",
						"route53domains:getOperationDetail",
						"route53domains:listDomains",
						"route53domains:listOperations",
						"route53domains:listTagsForDomain",
						"route53domains:viewBilling",
						"route53resolver:getFirewallConfig",
						"route53resolver:getFirewallDomainList",
						"route53resolver:getFirewallRuleGroup",
						"route53resolver:getFirewallRuleGroupAssociation",
						"route53resolver:getResolverDnssecConfig",
						"route53resolver:getResolverRulePolicy",
						"route53resolver:listFirewallConfigs",
						"route53resolver:listFirewallDomainLists",
						"route53resolver:listFirewallDomains",
						"route53resolver:listFirewallRuleGroupAssociations",
						"route53resolver:listFirewallRuleGroups",
						"route53resolver:listFirewallRules",
						"route53resolver:listResolverDnssecConfigs",
						"route53resolver:listResolverEndpointIpAddresses",
						"route53resolver:listResolverEndpoints",
						"route53resolver:listResolverRuleAssociations",
						"route53resolver:listResolverRules",
						"route53resolver:listTagsForResource",
						"s3:describeJob",
						"s3:describeMultiRegionAccessPointOperation",
						"s3:getAccelerateConfiguration",
						"s3:getAccessPoint",
						"s3:getAccessPointConfigurationForObjectLambda",
						"s3:getAccessPointForObjectLambda",
						"s3:getAccessPointPolicy",
						"s3:getAccessPointPolicyForObjectLambda",
						"s3:getAccessPointPolicyStatus",
						"s3:getAccessPointPolicyStatusForObjectLambda",
						"s3:getAccountPublicAccessBlock",
						"s3:getAnalyticsConfiguration",
						"s3:getBucketAcl",
						"s3:getBucketCORS",
						"s3:getBucketLocation",
						"s3:getBucketLogging",
						"s3:getBucketNotification",
						"s3:getBucketObjectLockConfiguration",
						"s3:getBucketOwnershipControls",
						"s3:getBucketPolicy",
						"s3:getBucketPolicyStatus",
						"s3:getBucketPublicAccessBlock",
						"s3:getBucketRequestPayment",
						"s3:getBucketTagging",
						"s3:getBucketVersioning",
						"s3:getBucketWebsite",
						"s3:getEncryptionConfiguration",
						"s3:getIntelligentTieringConfiguration",
						"s3:getInventoryConfiguration",
						"s3:getJobTagging",
						"s3:getLifecycleConfiguration",
						"s3:getMetricsConfiguration",
						"s3:getMultiRegionAccessPoint",
						"s3:getMultiRegionAccessPointPolicy",
						"s3:getMultiRegionAccessPointPolicyStatus",
						"s3:getObject",
						"s3:getObjectLegalHold",
						"s3:getObjectTagging",
						"s3:getObjectRetention",
						"s3:getReplicationConfiguration",
						"s3:getStorageLensConfiguration",
						"s3:getStorageLensConfigurationTagging",
						"s3:listAccessPoints",
						"s3:listAccessPointsForObjectLambda",
						"s3:listAllMyBuckets",
						"s3:listBucket",
						"s3:listBucketMultipartUploads",
						"s3:listBucketVersions",
						"s3:listJobs",
						"s3:listMultipartUploadParts",
						"s3:listMultiRegionAccessPoints",
						"s3:listStorageLensConfigurations",
						"sagemaker:describeAction",
						"sagemaker:describeAlgorithm",
						"sagemaker:describeApp",
						"sagemaker:describeArtifact",
						"sagemaker:describeAutoMLJob",
						"sagemaker:describeCompilationJob",
						"sagemaker:describeContext",
						"sagemaker:describeDataQualityJobDefinition",
						"sagemaker:describeDevice",
						"sagemaker:describeDeviceFleet",
						"sagemaker:describeDomain",
						"sagemaker:describeEdgePackagingJob",
						"sagemaker:describeEndpoint",
						"sagemaker:describeEndpointConfig",
						"sagemaker:describeExperiment",
						"sagemaker:describeFeatureGroup",
						"sagemaker:describeHumanTaskUi",
						"sagemaker:describeHyperParameterTuningJob",
						"sagemaker:describeImage",
						"sagemaker:describeImageVersion",
						"sagemaker:describeLabelingJob",
						"sagemaker:describeModel",
						"sagemaker:describeModelBiasJobDefinition",
						"sagemaker:describeModelExplainabilityJobDefinition",
						"sagemaker:describeModelPackage",
						"sagemaker:describeModelPackageGroup",
						"sagemaker:describeModelQualityJobDefinition",
						"sagemaker:describeMonitoringSchedule",
						"sagemaker:describeNotebookInstance",
						"sagemaker:describeNotebookInstanceLifecycleConfig",
						"sagemaker:describePipeline",
						"sagemaker:describePipelineDefinitionForExecution",
						"sagemaker:describePipelineExecution",
						"sagemaker:describeProcessingJob",
						"sagemaker:describeProject",
						"sagemaker:describeSubscribedWorkteam",
						"sagemaker:describeTrainingJob",
						"sagemaker:describeTransformJob",
						"sagemaker:describeTrial",
						"sagemaker:describeTrialComponent",
						"sagemaker:describeUserProfile",
						"sagemaker:describeWorkteam",
						"sagemaker:listActions",
						"sagemaker:listAlgorithms",
						"sagemaker:listApps",
						"sagemaker:listArtifacts",
						"sagemaker:listAssociations",
						"sagemaker:listAutoMLJobs",
						"sagemaker:listCandidatesForAutoMLJob",
						"sagemaker:listCodeRepositories",
						"sagemaker:listCompilationJobs",
						"sagemaker:listContexts",
						"sagemaker:listDataQualityJobDefinitions",
						"sagemaker:listDeviceFleets",
						"sagemaker:listDevices",
						"sagemaker:listDomains",
						"sagemaker:listEdgePackagingJobs",
						"sagemaker:listEndpointConfigs",
						"sagemaker:listEndpoints",
						"sagemaker:listExperiments",
						"sagemaker:listFeatureGroups",
						"sagemaker:listFlowDefinitions",
						"sagemaker:listHumanTaskUis",
						"sagemaker:listHyperParameterTuningJobs",
						"sagemaker:listImages",
						"sagemaker:listImageVersions",
						"sagemaker:listLabelingJobs",
						"sagemaker:listLabelingJobsForWorkteam",
						"sagemaker:listModelBiasJobDefinitions",
						"sagemaker:listModelExplainabilityJobDefinitions",
						"sagemaker:listModelPackageGroups",
						"sagemaker:listModelPackages",
						"sagemaker:listModelQualityJobDefinitions",
						"sagemaker:listModels",
						"sagemaker:listMonitoringExecutions",
						"sagemaker:listMonitoringSchedules",
						"sagemaker:listNotebookInstanceLifecycleConfigs",
						"sagemaker:listNotebookInstances",
						"sagemaker:listPipelineExecutions",
						"sagemaker:listPipelineExecutionSteps",
						"sagemaker:listPipelineParametersForExecution",
						"sagemaker:listPipelines",
						"sagemaker:listProcessingJobs",
						"sagemaker:listProjects",
						"sagemaker:listSubscribedWorkteams",
						"sagemaker:listTags",
						"sagemaker:listTrainingJobs",
						"sagemaker:listTrainingJobsForHyperParameterTuningJob",
						"sagemaker:listTransformJobs",
						"sagemaker:listTrialComponents",
						"sagemaker:listTrials",
						"sagemaker:listUserProfiles",
						"sagemaker:listWorkteams",
						"sdb:domainMetadata",
						"sdb:listDomains",
						"secretsmanager:describeSecret",
						"secretsmanager:getResourcePolicy",
						"secretsmanager:listSecrets",
						"secretsmanager:listSecretVersionIds",
						"securityhub:getEnabledStandards",
						"securityhub:getFindings",
						"securityhub:getInsightResults",
						"securityhub:getInsights",
						"securityhub:getMasterAccount",
						"securityhub:getMembers",
						"securityhub:listEnabledProductsForImport",
						"securityhub:listInvitations",
						"securityhub:listMembers",
						"servicecatalog:describeConstraint",
						"servicecatalog:describePortfolio",
						"servicecatalog:describeProduct",
						"servicecatalog:describeProductAsAdmin",
						"servicecatalog:describeProductView",
						"servicecatalog:describeProvisioningArtifact",
						"servicecatalog:describeProvisioningParameters",
						"servicecatalog:describeRecord",
						"servicecatalog:listAcceptedPortfolioShares",
						"servicecatalog:listConstraintsForPortfolio",
						"servicecatalog:listLaunchPaths",
						"servicecatalog:listPortfolioAccess",
						"servicecatalog:listPortfolios",
						"servicecatalog:listPortfoliosForProduct",
						"servicecatalog:listPrincipalsForPortfolio",
						"servicecatalog:listProvisioningArtifacts",
						"servicecatalog:listRecordHistory",
						"servicecatalog:scanProvisionedProducts",
						"servicecatalog:searchProducts",
						"servicequotas:getAssociationForServiceQuotaTemplate",
						"servicequotas:getAWSDefaultServiceQuota",
						"servicequotas:getRequestedServiceQuotaChange",
						"servicequotas:getServiceQuota",
						"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
						"servicequotas:listAWSDefaultServiceQuotas",
						"servicequotas:listRequestedServiceQuotaChangeHistory",
						"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
						"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
						"servicequotas:listServiceQuotas",
						"servicequotas:listServices",
						"ses:describeActiveReceiptRuleSet",
						"ses:describeReceiptRule",
						"ses:describeReceiptRuleSet",
						"ses:getAccount",
						"ses:getBlacklistReports",
						"ses:getConfigurationSet",
						"ses:getConfigurationSetEventDestinations",
						"ses:getDedicatedIp",
						"ses:getDedicatedIps",
						"ses:getDeliverabilityDashboardOptions",
						"ses:getDeliverabilityTestReport",
						"ses:getDomainDeliverabilityCampaign",
						"ses:getDomainStatisticsReport",
						"ses:getEmailIdentity",
						"ses:getIdentityDkimAttributes",
						"ses:getIdentityMailFromDomainAttributes",
						"ses:getIdentityNotificationAttributes",
						"ses:getIdentityPolicies",
						"ses:getIdentityVerificationAttributes",
						"ses:getSendQuota",
						"ses:getSendStatistics",
						"ses:listConfigurationSets",
						"ses:listDedicatedIpPools",
						"ses:listDeliverabilityTestReports",
						"ses:listDomainDeliverabilityCampaigns",
						"ses:listEmailIdentities",
						"ses:listIdentities",
						"ses:listIdentityPolicies",
						"ses:listReceiptFilters",
						"ses:listReceiptRuleSets",
						"ses:listTagsForResource",
						"ses:listVerifiedEmailAddresses",
						"shield:describeAttack",
						"shield:describeProtection",
						"shield:describeSubscription",
						"shield:listAttacks",
						"shield:listProtections",
						"sms-voice:getConfigurationSetEventDestinations",
						"sms:getConnectors",
						"sms:getReplicationJobs",
						"sms:getReplicationRuns",
						"sms:getServers",
						"snowball:describeAddress",
						"snowball:describeAddresses",
						"snowball:describeJob",
						"snowball:getSnowballUsage",
						"snowball:listJobs",
						"sns:checkIfPhoneNumberIsOptedOut",
						"sns:getEndpointAttributes",
						"sns:getPlatformApplicationAttributes",
						"sns:getSMSAttributes",
						"sns:getSubscriptionAttributes",
						"sns:getTopicAttributes",
						"sns:listEndpointsByPlatformApplication",
						"sns:listPhoneNumbersOptedOut",
						"sns:listPlatformApplications",
						"sns:listSubscriptions",
						"sns:listSubscriptionsByTopic",
						"sns:listTopics",
						"sqs:getQueueAttributes",
						"sqs:getQueueUrl",
						"sqs:listDeadLetterSourceQueues",
						"sqs:listQueues",
						"ssm-contacts:describeEngagement",
						"ssm-contacts:describePage",
						"ssm-contacts:getContact",
						"ssm-contacts:getContactChannel",
						"ssm-contacts:listContactChannels",
						"ssm-contacts:listContacts",
						"ssm-contacts:listEngagements",
						"ssm-contacts:listPageReceipts",
						"ssm-contacts:listPagesByContact",
						"ssm-contacts:listPagesByEngagement",
						"ssm-incidents:getIncidentRecord",
						"ssm-incidents:getReplicationSet",
						"ssm-incidents:getResponsePlan",
						"ssm-incidents:listIncidentRecords",
						"ssm-incidents:listReplicationSets",
						"ssm-incidents:listResponsePlans",
						"ssm-incidents:listTimelineEvents",
						"ssm:describeActivations",
						"ssm:describeAssociation",
						"ssm:describeAssociationExecutions",
						"ssm:describeAssociationExecutionTargets",
						"ssm:describeAutomationExecutions",
						"ssm:describeAutomationStepExecutions",
						"ssm:describeAvailablePatches",
						"ssm:describeDocument",
						"ssm:describeDocumentPermission",
						"ssm:describeEffectiveInstanceAssociations",
						"ssm:describeEffectivePatchesForPatchBaseline",
						"ssm:describeInstanceAssociationsStatus",
						"ssm:describeInstanceInformation",
						"ssm:describeInstancePatches",
						"ssm:describeInstancePatchStates",
						"ssm:describeInstancePatchStatesForPatchGroup",
						"ssm:describeInventoryDeletions",
						"ssm:describeMaintenanceWindowExecutions",
						"ssm:describeMaintenanceWindowExecutionTaskInvocations",
						"ssm:describeMaintenanceWindowExecutionTasks",
						"ssm:describeMaintenanceWindows",
						"ssm:describeMaintenanceWindowSchedule",
						"ssm:describeMaintenanceWindowsForTarget",
						"ssm:describeMaintenanceWindowTargets",
						"ssm:describeMaintenanceWindowTasks",
						"ssm:describeOpsItems",
						"ssm:describeParameters",
						"ssm:describePatchBaselines",
						"ssm:describePatchGroups",
						"ssm:describePatchGroupState",
						"ssm:describePatchProperties",
						"ssm:describeSessions",
						"ssm:getAutomationExecution",
						"ssm:getCommandInvocation",
						"ssm:getConnectionStatus",
						"ssm:getDefaultPatchBaseline",
						"ssm:getDeployablePatchSnapshotForInstance",
						"ssm:getInventorySchema",
						"ssm:getMaintenanceWindow",
						"ssm:getMaintenanceWindowExecution",
						"ssm:getMaintenanceWindowExecutionTask",
						"ssm:getMaintenanceWindowExecutionTaskInvocation",
						"ssm:getMaintenanceWindowTask",
						"ssm:getOpsItem",
						"ssm:getPatchBaseline",
						"ssm:getPatchBaselineForPatchGroup",
						"ssm:getServiceSetting",
						"ssm:labelParameterVersion",
						"ssm:listAssociations",
						"ssm:listAssociationVersions",
						"ssm:listCommandInvocations",
						"ssm:listCommands",
						"ssm:listComplianceItems",
						"ssm:listComplianceSummaries",
						"ssm:listDocuments",
						"ssm:listDocumentVersions",
						"ssm:listOpsItemEvents",
						"ssm:listResourceComplianceSummaries",
						"ssm:listResourceDataSync",
						"ssm:listTagsForResource",
						"states:describeActivity",
						"states:describeExecution",
						"states:describeStateMachine",
						"states:describeStateMachineForExecution",
						"states:getExecutionHistory",
						"states:listActivities",
						"states:listExecutions",
						"states:listStateMachines",
						"storagegateway:describeBandwidthRateLimit",
						"storagegateway:describeCache",
						"storagegateway:describeCachediSCSIVolumes",
						"storagegateway:describeFileSystemAssociations",
						"storagegateway:describeGatewayInformation",
						"storagegateway:describeMaintenanceStartTime",
						"storagegateway:describeNFSFileShares",
						"storagegateway:describeSMBFileShares",
						"storagegateway:describeSMBSettings",
						"storagegateway:describeSnapshotSchedule",
						"storagegateway:describeStorediSCSIVolumes",
						"storagegateway:describeTapeArchives",
						"storagegateway:describeTapeRecoveryPoints",
						"storagegateway:describeTapes",
						"storagegateway:describeUploadBuffer",
						"storagegateway:describeVTLDevices",
						"storagegateway:describeWorkingStorage",
						"storagegateway:listFileShares",
						"storagegateway:listFileSystemAssociations",
						"storagegateway:listGateways",
						"storagegateway:listLocalDisks",
						"storagegateway:listTagsForResource",
						"storagegateway:listTapes",
						"storagegateway:listVolumeInitiators",
						"storagegateway:listVolumeRecoveryPoints",
						"storagegateway:listVolumes",
						"swf:countClosedWorkflowExecutions",
						"swf:countOpenWorkflowExecutions",
						"swf:countPendingActivityTasks",
						"swf:countPendingDecisionTasks",
						"swf:describeActivityType",
						"swf:describeDomain",
						"swf:describeWorkflowExecution",
						"swf:describeWorkflowType",
						"swf:getWorkflowExecutionHistory",
						"swf:listActivityTypes",
						"swf:listClosedWorkflowExecutions",
						"swf:listDomains",
						"swf:listOpenWorkflowExecutions",
						"swf:listWorkflowTypes",
						"synthetics:describeCanaries",
						"synthetics:describeCanariesLastRun",
						"synthetics:describeRuntimeVersions",
						"synthetics:getCanary",
						"synthetics:getCanaryRuns",
						"transfer:describeServer",
						"transfer:describeUser",
						"transfer:listServers",
						"transfer:listTagsForResource",
						"transfer:listUsers",
						"waf-regional:getByteMatchSet",
						"waf-regional:getChangeTokenStatus",
						"waf-regional:getIPSet",
						"waf-regional:getRule",
						"waf-regional:getSqlInjectionMatchSet",
						"waf-regional:getWebACL",
						"waf-regional:getWebACLForResource",
						"waf-regional:listByteMatchSets",
						"waf-regional:listIPSets",
						"waf-regional:listResourcesForWebACL",
						"waf-regional:listRules",
						"waf-regional:listSqlInjectionMatchSets",
						"waf-regional:listWebACLs",
						"waf:getByteMatchSet",
						"waf:getChangeTokenStatus",
						"waf:getIPSet",
						"waf:getRule",
						"waf:getSampledRequests",
						"waf:getSizeConstraintSet",
						"waf:getSqlInjectionMatchSet",
						"waf:getWebACL",
						"waf:getXssMatchSet",
						"waf:listByteMatchSets",
						"waf:listIPSets",
						"waf:listRules",
						"waf:listSizeConstraintSets",
						"waf:listSqlInjectionMatchSets",
						"waf:listWebACLs",
						"waf:listXssMatchSets",
						"wafv2:checkCapacity",
						"wafv2:describeManagedRuleGroup",
						"wafv2:getIPSet",
						"wafv2:getLoggingConfiguration",
						"wafv2:getPermissionPolicy",
						"wafv2:getRateBasedStatementManagedKeys",
						"wafv2:getRegexPatternSet",
						"wafv2:getRuleGroup",
						"wafv2:getSampledRequests",
						"wafv2:getWebACL",
						"wafv2:getWebACLForResource",
						"wafv2:listAvailableManagedRuleGroups",
						"wafv2:listIPSets",
						"wafv2:listLoggingConfigurations",
						"wafv2:listRegexPatternSets",
						"wafv2:listResourcesForWebACL",
						"wafv2:listRuleGroups",
						"wafv2:listTagsForResource",
						"wafv2:listWebACLs",
						"workdocs:checkAlias",
						"workdocs:describeAvailableDirectories",
						"workdocs:describeInstances",
						"worklink:describeAuditStreamConfiguration",
						"worklink:describeCompanyNetworkConfiguration",
						"worklink:describeDevice",
						"worklink:describeDevicePolicyConfiguration",
						"worklink:describeDomain",
						"worklink:describeFleetMetadata",
						"worklink:describeIdentityProviderConfiguration",
						"worklink:describeWebsiteCertificateAuthority",
						"worklink:listDevices",
						"worklink:listDomains",
						"worklink:listFleets",
						"worklink:listWebsiteAuthorizationProviders",
						"worklink:listWebsiteCertificateAuthorities",
						"workmail:describeGroup",
						"workmail:describeOrganization",
						"workmail:describeResource",
						"workmail:describeUser",
						"workmail:listAliases",
						"workmail:listGroupMembers",
						"workmail:listGroups",
						"workmail:listMailboxPermissions",
						"workmail:listOrganizations",
						"workmail:listResourceDelegates",
						"workmail:listResources",
						"workmail:listUsers",
						"workspaces:describeAccount",
						"workspaces:describeAccountModifications",
						"workspaces:describeIpGroups",
						"workspaces:describeTags",
						"workspaces:describeWorkspaceBundles",
						"workspaces:describeWorkspaceDirectories",
						"workspaces:describeWorkspaceImages",
						"workspaces:describeWorkspaces",
						"workspaces:describeWorkspacesConnectionStatus"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJ7W6266ELXF5MISDS",
		"version_id": "v20"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-01-07T23:44:53",
		"document": {
			"Statement": [
				{
					"Action": [
						"logs:DescribeLogGroups"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					],
					"Sid": "AllowDescribeOnAllLogGroups"
				},
				{
					"Action": [
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:dms-tasks-*"
					],
					"Sid": "AllowDescribeOfAllLogStreamsOnDmsTasksLogGroup"
				},
				{
					"Action": [
						"logs:CreateLogGroup"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:dms-tasks-*"
					],
					"Sid": "AllowCreationOfDmsTasksLogGroups"
				},
				{
					"Action": [
						"logs:CreateLogStream"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
					],
					"Sid": "AllowCreationOfDmsTaskLogStream"
				},
				{
					"Action": [
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
					],
					"Sid": "AllowUploadOfLogEventsToDmsTaskLogStream"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJBG7UXZZXUJD3TDJE",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-02-22T21:24:25",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:ListBucket",
						"s3:ListObjects",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-21T22:29:41",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:ListBucket",
						"s3:ListObjects",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-10-08T21:27:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:ListBucket",
						"s3:ListObjects",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-12-13T21:54:30",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:GetPublicAccessBlock",
						"s3:ListBucket",
						"s3:ListObjects",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-01-22T19:58:36",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListBucket",
						"s3:ListObjects",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-12T21:21:39",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListBucket",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics",
						"ce:GetReservationPurchaseRecommendation"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-15T22:11:48",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeAccountLimits",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListBucket",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics",
						"ce:GetReservationPurchaseRecommendation"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-08T16:15:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeAccountLimits",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListBucket",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics",
						"ce:GetReservationPurchaseRecommendation",
						"ce:GetSavingsPlansPurchaseRecommendation"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-10T22:41:30",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAccountLimits",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"cloudformation:DescribeAccountLimits",
						"cloudformation:DescribeStacks",
						"cloudformation:ListStacks",
						"cloudfront:ListDistributions",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"ec2:DescribeAddresses",
						"ec2:DescribeReservedInstances",
						"ec2:DescribeInstances",
						"ec2:DescribeVpcs",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeImages",
						"ec2:DescribeVolumes",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeReservedInstancesOfferings",
						"ec2:DescribeSnapshots",
						"ec2:DescribeVpnConnections",
						"ec2:DescribeVpnGateways",
						"ec2:DescribeLaunchTemplateVersions",
						"elasticloadbalancing:DescribeAccountLimits",
						"elasticloadbalancing:DescribeInstanceHealth",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTargetGroups",
						"iam:GenerateCredentialReport",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetServerCertificate",
						"iam:ListServerCertificates",
						"kinesis:DescribeLimits",
						"rds:DescribeAccountAttributes",
						"rds:DescribeDBClusters",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBParameters",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEngineDefaultParameters",
						"rds:DescribeEvents",
						"rds:DescribeOptionGroupOptions",
						"rds:DescribeOptionGroups",
						"rds:DescribeOrderableDBInstanceOptions",
						"rds:DescribeReservedDBInstances",
						"rds:DescribeReservedDBInstancesOfferings",
						"rds:ListTagsForResource",
						"redshift:DescribeClusters",
						"redshift:DescribeReservedNodeOfferings",
						"redshift:DescribeReservedNodes",
						"route53:GetAccountLimit",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketPolicy",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketVersioning",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListBucket",
						"s3:ListAllMyBuckets",
						"ses:GetSendQuota",
						"sqs:ListQueues",
						"cloudwatch:GetMetricStatistics",
						"ce:GetReservationPurchaseRecommendation",
						"ce:GetSavingsPlansPurchaseRecommendation"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJH4QJ2WMHBOB47BUE",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-11-18T16:33:19",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DeleteNetworkInterface"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJHKIGMBQI4AEFFSYO",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-12-17T21:09:34",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DeleteNetworkInterface"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJHKIGMBQI4AEFFSYO",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-05-23T16:29:57",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJHKIGMBQI4AEFFSYO",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-03-19T18:45:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"ecs:CreateCluster",
						"ecs:DeregisterContainerInstance",
						"ecs:DiscoverPollEndpoint",
						"ecs:Poll",
						"ecs:RegisterContainerInstance",
						"ecs:Submit*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJLYJCVHC7TQHCSQDS",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-08-17T23:33:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"ecs:CreateCluster",
						"ecs:DeregisterContainerInstance",
						"ecs:DiscoverPollEndpoint",
						"ecs:Poll",
						"ecs:RegisterContainerInstance",
						"ecs:StartTelemetrySession",
						"ecs:Submit*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJLYJCVHC7TQHCSQDS",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-12-19T00:12:16",
		"document": {
			"Statement": [
				{
					"Action": [
						"ecs:CreateCluster",
						"ecs:DeregisterContainerInstance",
						"ecs:DiscoverPollEndpoint",
						"ecs:Poll",
						"ecs:RegisterContainerInstance",
						"ecs:StartTelemetrySession",
						"ecs:Submit*",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:BatchGetImage"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJLYJCVHC7TQHCSQDS",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-05-04T18:56:55",
		"document": {
			"Statement": [
				{
					"Action": [
						"ecs:CreateCluster",
						"ecs:DeregisterContainerInstance",
						"ecs:DiscoverPollEndpoint",
						"ecs:Poll",
						"ecs:RegisterContainerInstance",
						"ecs:StartTelemetrySession",
						"ecs:Submit*",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:BatchGetImage",
						"logs:CreateLogStream",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJLYJCVHC7TQHCSQDS",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-05-17T23:09:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"ecs:CreateCluster",
						"ecs:DeregisterContainerInstance",
						"ecs:DiscoverPollEndpoint",
						"ecs:Poll",
						"ecs:RegisterContainerInstance",
						"ecs:StartTelemetrySession",
						"ecs:UpdateContainerInstancesState",
						"ecs:Submit*",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:BatchGetImage",
						"logs:CreateLogStream",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJLYJCVHC7TQHCSQDS",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-13T19:11:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeTags",
						"ecs:CreateCluster",
						"ecs:DeregisterContainerInstance",
						"ecs:DiscoverPollEndpoint",
						"ecs:Poll",
						"ecs:RegisterContainerInstance",
						"ecs:StartTelemetrySession",
						"ecs:UpdateContainerInstancesState",
						"ecs:Submit*",
						"ecr:GetAuthorizationToken",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:BatchGetImage",
						"logs:CreateLogStream",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJLYJCVHC7TQHCSQDS",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2015-04-09T16:14:19",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:Describe*",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJO53W2XHNACG7V77Q",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2016-08-11T13:08:01",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:Describe*",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:DeregisterTargets",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RegisterTargets"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJO53W2XHNACG7V77Q",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-09-18T19:19:45",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeVpcs",
						"ec2:DescribeSubnets",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAddress",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJPY2VXNRUYOY3SRZS",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-09-25T21:20:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeVpcs",
						"ec2:DescribeSubnets",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAddresses",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJPY2VXNRUYOY3SRZS",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-09-15T20:44:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeVpcs",
						"ec2:DescribeSubnets",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAddresses",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:CreateVpcEndpoint",
						"ec2:DeleteVpcEndpoints",
						"ec2:DescribeVpcEndpoints",
						"ec2:ModifyVpcEndpoint"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJPY2VXNRUYOY3SRZS",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-11-15T06:41:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeVpcs",
						"ec2:DescribeSubnets",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAddresses",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:CreateVpcEndpoint",
						"ec2:DeleteVpcEndpoints",
						"ec2:DescribeVpcEndpoints",
						"ec2:ModifyVpcEndpoint"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup",
						"logs:PutRetentionPolicy"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/redshift/*"
					],
					"Sid": "EnableCreationAndManagementOfRedshiftCloudwatchLogGroups"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams",
						"logs:GetLogEvents"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/redshift/*:log-stream:*"
					],
					"Sid": "EnableCreationAndManagementOfRedshiftCloudwatchLogStreams"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJPY2VXNRUYOY3SRZS",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-11-22T21:08:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeVpcs",
						"ec2:DescribeSubnets",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAddresses",
						"ec2:AssociateAddress",
						"ec2:DisassociateAddress",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:CreateVpcEndpoint",
						"ec2:DeleteVpcEndpoints",
						"ec2:DescribeVpcEndpoints",
						"ec2:ModifyVpcEndpoint"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"logs:CreateLogGroup",
						"logs:PutRetentionPolicy"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/redshift/*"
					],
					"Sid": "EnableCreationAndManagementOfRedshiftCloudwatchLogGroups"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:PutLogEvents",
						"logs:DescribeLogStreams",
						"logs:GetLogEvents"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:logs:*:*:log-group:/aws/redshift/*:log-stream:*"
					],
					"Sid": "EnableCreationAndManagementOfRedshiftCloudwatchLogStreams"
				},
				{
					"Action": [
						"ec2:AuthorizeSecurityGroupEgress",
						"ec2:AuthorizeSecurityGroupIngress",
						"ec2:UpdateSecurityGroupRuleDescriptionsEgress",
						"ec2:ReplaceRouteTableAssociation",
						"ec2:CreateRouteTable",
						"ec2:AttachInternetGateway",
						"ec2:UpdateSecurityGroupRuleDescriptionsIngress",
						"ec2:AssociateRouteTable",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:CreateRoute",
						"ec2:CreateSecurityGroup",
						"ec2:RevokeSecurityGroupEgress",
						"ec2:ModifyVpcAttribute",
						"ec2:CreateSubnet"
					],
					"Condition": {
						"StringEquals": {
							"aws:ResourceTag/Purpose": "RedshiftMigrateToVpc"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:route-table/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:vpc/*",
						"arn:aws:ec2:*:*:internet-gateway/*"
					]
				},
				{
					"Action": [
						"ec2:CreateSecurityGroup",
						"ec2:CreateInternetGateway",
						"ec2:CreateVpc",
						"ec2:CreateRouteTable",
						"ec2:CreateSubnet"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/Purpose": "RedshiftMigrateToVpc"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:route-table/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:vpc/*",
						"arn:aws:ec2:*:*:internet-gateway/*"
					]
				},
				{
					"Action": "ec2:CreateTags",
					"Condition": {
						"StringEquals": {
							"ec2:CreateAction": [
								"CreateVpc",
								"CreateSecurityGroup",
								"CreateSubnet",
								"CreateInternetGateway",
								"CreateRouteTable"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:route-table/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:vpc/*",
						"arn:aws:ec2:*:*:internet-gateway/*"
					]
				},
				{
					"Action": [
						"ec2:DescribeVpcAttribute",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeInternetGateways",
						"ec2:DescribeSecurityGroupRules",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeNetworkAcls",
						"ec2:DescribeRouteTables"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJPY2VXNRUYOY3SRZS",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-11-27T23:47:51",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-12T21:11:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-02-05T21:38:52",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-08T20:26:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-21T19:59:17",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:DescribeAlarmsForMetric",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-31T20:29:25",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:DescribeAlarmsForMetric",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"organizations:ListAccounts",
						"organizations:DescribeAccount"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-09-21T19:59:01",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:DescribeAlarmsForMetric",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-06-29T19:55:36",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:DescribeAlarmsForMetric",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus",
						"config:PutEvaluations"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-07-14T20:32:48",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:GetEventSelectors",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:DescribeAlarmsForMetric",
						"logs:DescribeMetricFilters",
						"sns:ListSubscriptionsByTopic",
						"config:DescribeConfigurationRecorders",
						"config:DescribeConfigurationRecorderStatus",
						"config:DescribeConfigRules",
						"config:BatchGetResourceConfig",
						"config:SelectResourceConfig",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"config:PutEvaluations"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:GetComplianceDetailsByConfigRule",
						"config:DescribeConfigRuleEvaluationStatus"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQPCESDDYDLLSOGYO",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2017-10-20T17:23:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-01-05T19:09:44",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-10T17:57:44",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-20T18:22:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-25T20:03:52",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
				},
				{
					"Action": [
						"acm:DescribeCertificate"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:acm:*:*:certificate/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-22T18:22:01",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
				},
				{
					"Action": [
						"acm:DescribeCertificate"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:acm:*:*:certificate/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-01-15T20:18:59",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancers",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries",
						"servicediscovery:DiscoverInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
				},
				{
					"Action": [
						"acm:DescribeCertificate"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:acm:*:*:certificate/*"
				},
				{
					"Action": "ec2:CreateNetworkInterfacePermission",
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*"
				},
				{
					"Action": [
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:DeleteNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeNetworkInterfaceAttribute",
						"ec2:DescribeVpcs",
						"ec2:DescribeNetworkInterfacePermissions",
						"ec2:UnassignPrivateIpAddresses",
						"ec2:DescribeSubnets",
						"ec2:DescribeRouteTables"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "servicediscovery:GetNamespace",
					"Effect": "Allow",
					"Resource": "arn:aws:servicediscovery:*:*:namespace/*"
				},
				{
					"Action": "servicediscovery:GetService",
					"Effect": "Allow",
					"Resource": "arn:aws:servicediscovery:*:*:service/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-02-25T20:24:49",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancers",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries",
						"servicediscovery:DiscoverInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
				},
				{
					"Action": [
						"acm:DescribeCertificate"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:acm:*:*:certificate/*"
				},
				{
					"Action": "ec2:CreateNetworkInterfacePermission",
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*"
				},
				{
					"Action": "ec2:CreateTags",
					"Condition": {
						"ForAllValues:StringEquals": {
							"aws:TagKeys": [
								"Owner",
								"VpcLinkId"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*"
				},
				{
					"Action": [
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:DeleteNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeNetworkInterfaceAttribute",
						"ec2:DescribeVpcs",
						"ec2:DescribeNetworkInterfacePermissions",
						"ec2:UnassignPrivateIpAddresses",
						"ec2:DescribeSubnets",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "servicediscovery:GetNamespace",
					"Effect": "Allow",
					"Resource": "arn:aws:servicediscovery:*:*:namespace/*"
				},
				{
					"Action": "servicediscovery:GetService",
					"Effect": "Allow",
					"Resource": "arn:aws:servicediscovery:*:*:service/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-07-12T22:24:40",
		"document": {
			"Statement": [
				{
					"Action": [
						"elasticloadbalancing:AddListenerCertificates",
						"elasticloadbalancing:RemoveListenerCertificates",
						"elasticloadbalancing:ModifyListener",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancers",
						"xray:PutTraceSegments",
						"xray:PutTelemetryRecords",
						"xray:GetSamplingTargets",
						"xray:GetSamplingRules",
						"logs:CreateLogDelivery",
						"logs:GetLogDelivery",
						"logs:UpdateLogDelivery",
						"logs:DeleteLogDelivery",
						"logs:ListLogDeliveries",
						"servicediscovery:DiscoverInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"*"
					]
				},
				{
					"Action": [
						"firehose:DescribeDeliveryStream",
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
				},
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:GetCertificate"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:acm:*:*:certificate/*"
				},
				{
					"Action": "ec2:CreateNetworkInterfacePermission",
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*"
				},
				{
					"Action": "ec2:CreateTags",
					"Condition": {
						"ForAllValues:StringEquals": {
							"aws:TagKeys": [
								"Owner",
								"VpcLinkId"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:network-interface/*"
				},
				{
					"Action": [
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:DeleteNetworkInterface",
						"ec2:AssignPrivateIpAddresses",
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterfacePermission",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeAvailabilityZones",
						"ec2:DescribeNetworkInterfaceAttribute",
						"ec2:DescribeVpcs",
						"ec2:DescribeNetworkInterfacePermissions",
						"ec2:UnassignPrivateIpAddresses",
						"ec2:DescribeSubnets",
						"ec2:DescribeRouteTables",
						"ec2:DescribeSecurityGroups"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "servicediscovery:GetNamespace",
					"Effect": "Allow",
					"Resource": "arn:aws:servicediscovery:*:*:namespace/*"
				},
				{
					"Action": "servicediscovery:GetService",
					"Effect": "Allow",
					"Resource": "arn:aws:servicediscovery:*:*:service/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJQQDZNLDBF2ULTWK6",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-05-30T23:31:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-07-31T19:20:09",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-15T23:03:55",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-31T22:23:52",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-11-07T18:34:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-12-20T22:09:35",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-01-23T20:43:11",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-02-05T23:47:52",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey",
						"ssm:DescribeDocument",
						"ssm:GetDocument",
						"ssm:DescribeAutomationExecutions",
						"ssm:GetAutomationExecution"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-03-06T18:47:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey",
						"ssm:DescribeDocument",
						"ssm:GetDocument",
						"ssm:DescribeAutomationExecutions",
						"ssm:GetAutomationExecution",
						"shield:DescribeProtection"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-03-12T18:10:21",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetAccountPublicAccessBlock",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey",
						"ssm:DescribeDocument",
						"ssm:GetDocument",
						"ssm:DescribeAutomationExecutions",
						"ssm:GetAutomationExecution",
						"shield:DescribeProtection"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v10"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-13T21:18:44",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"config:Select*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetAccountPublicAccessBlock",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey",
						"ssm:DescribeDocument",
						"ssm:GetDocument",
						"ssm:DescribeAutomationExecutions",
						"ssm:GetAutomationExecution",
						"shield:DescribeProtection"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v11"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-10T22:59:58",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"config:Select*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketObjectLockConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey",
						"ssm:DescribeDocument",
						"ssm:GetDocument",
						"ssm:DescribeAutomationExecutions",
						"ssm:GetAutomationExecution",
						"shield:DescribeProtection"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v12"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-25T23:27:46",
		"document": {
			"Statement": [
				{
					"Action": [
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"ec2:Describe*",
						"config:Put*",
						"config:Get*",
						"config:List*",
						"config:Describe*",
						"config:BatchGet*",
						"config:Select*",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"iam:GenerateCredentialReport",
						"iam:GetCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeTags",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBClusters",
						"s3:GetAccelerateConfiguration",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketPolicy",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"s3:GetEncryptionConfiguration",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketObjectLockConfiguration",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"cloudwatch:DescribeAlarms",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:GetAlias",
						"lambda:ListAliases",
						"waf-regional:GetWebACLForResource",
						"waf-regional:GetWebACL",
						"cloudfront:ListTagsForResource",
						"guardduty:ListDetectors",
						"guardduty:GetMasterAccount",
						"guardduty:GetDetector",
						"codepipeline:ListPipelines",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"kms:ListKeys",
						"kms:GetKeyRotationStatus",
						"kms:DescribeKey",
						"ssm:DescribeDocument",
						"ssm:GetDocument",
						"ssm:DescribeAutomationExecutions",
						"ssm:GetAutomationExecution",
						"shield:DescribeProtection"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v13"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-23T19:18:04",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:DescribeSnapshots",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:ListClusters",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"guardduty:GetDetector",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:ListSubscriptions",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v14"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-08-01T23:10:02",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:ListClusters",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"guardduty:GetDetector",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:ListSubscriptions",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v15"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-09-17T17:40:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:ListClusters",
						"emr:ListClusters",
						"emr:ListInstances",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListNotebookInstances",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"support:DescribeCases",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v16"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-21T21:54:04",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"support:DescribeCases",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v17"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-18T22:33:22",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"cloudfront:ListTagsForResource",
						"cloudformation:describeType",
						"cloudformation:listTypes",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"support:DescribeCases",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v18"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-15T18:39:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:GetBackupSelection",
						"cloudfront:ListTagsForResource",
						"cloudformation:describeType",
						"cloudformation:listTypes",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:describeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"support:DescribeCases",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v19"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-19T16:09:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:GetBackupSelection",
						"cloudfront:ListTagsForResource",
						"cloudformation:describeType",
						"cloudformation:listTypes",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"organizations:DescribeOrganization",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:describeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"storagegateway:ListGateways",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v20"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-12-18T22:02:34",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:GetBackupSelection",
						"cloudfront:ListTagsForResource",
						"cloudformation:describeType",
						"cloudformation:listTypes",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"eks:DescribeCluster",
						"eks:ListClusters",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"organizations:DescribeOrganization",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:describeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"storagegateway:ListGateways",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v21"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-01-29T19:19:53",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:GetBackupSelection",
						"cloudfront:ListTagsForResource",
						"cloudformation:describeType",
						"cloudformation:listTypes",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeReplicationInstances",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"ecr:DescribeRepositories",
						"ecr:GetLifecyclePolicy",
						"ecr:GetRepositoryPolicy",
						"ecr:ListTagsForResource",
						"ecs:DescribeClusters",
						"ecs:DescribeServices",
						"ecs:DescribeTaskDefinition",
						"ecs:DescribeTaskSets",
						"ecs:ListClusters",
						"ecs:ListServices",
						"ecs:ListTagsForResource",
						"ecs:ListTaskDefinitions",
						"eks:DescribeCluster",
						"eks:DescribeNodegroup",
						"eks:ListClusters",
						"eks:ListNodegroups",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeFileSystems",
						"elasticfilesystem:DescribeLifecycleConfiguration",
						"elasticfilesystem:DescribeMountTargets",
						"elasticfilesystem:DescribeMountTargetSecurityGroups",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"organizations:DescribeOrganization",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:describeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"storagegateway:ListGateways",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v22"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-04-01T22:19:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:ListBackupPlans",
						"backup:GetBackupPlan",
						"backup:ListBackupVaults",
						"backup:DescribeBackupVault",
						"backup:GetBackupVaultNotifications",
						"backup:GetBackupVaultAccessPolicy",
						"backup:ListBackupSelections",
						"backup:GetBackupSelection",
						"backup:ListRecoveryPointsByBackupVault",
						"backup:DescribeRecoveryPoint",
						"backup:ListTags",
						"cloudfront:ListTagsForResource",
						"cloudformation:DescribeType",
						"cloudformation:ListTypes",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeReplicationInstances",
						"dms:DescribeReplicationSubnetGroups",
						"dms:ListTagsForResource",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"ecr:DescribeRepositories",
						"ecr:GetLifecyclePolicy",
						"ecr:GetRepositoryPolicy",
						"ecr:ListTagsForResource",
						"ecs:DescribeClusters",
						"ecs:DescribeServices",
						"ecs:DescribeTaskDefinition",
						"ecs:DescribeTaskSets",
						"ecs:ListClusters",
						"ecs:ListServices",
						"ecs:ListTagsForResource",
						"ecs:ListTaskDefinitions",
						"eks:DescribeCluster",
						"eks:DescribeNodegroup",
						"eks:ListClusters",
						"eks:ListNodegroups",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeCacheParameterGroups",
						"elasticache:DescribeCacheSubnetGroups",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeAccessPoints",
						"elasticfilesystem:DescribeBackupPolicy",
						"elasticfilesystem:DescribeFileSystems",
						"elasticfilesystem:DescribeFileSystemPolicy",
						"elasticfilesystem:DescribeLifecycleConfiguration",
						"elasticfilesystem:DescribeMountTargets",
						"elasticfilesystem:DescribeMountTargetSecurityGroups",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kinesis:DescribeStreamSummary",
						"kinesis:ListStreams",
						"kinesis:ListTagsForStream",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"organizations:DescribeOrganization",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeClusters",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"route53:GetHostedZone",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"route53:ListTagsForResource",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccessPoint",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeCodeRepository",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListCodeRepositories",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"sagemaker:ListTags",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:describeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"ssm:ListDocuments",
						"storagegateway:ListGateways",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v23"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-05-11T00:14:41",
		"document": {
			"Statement": [
				{
					"Action": [
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:DescribeBackupVault",
						"backup:DescribeRecoveryPoint",
						"backup:GetBackupPlan",
						"backup:GetBackupSelection",
						"backup:GetBackupVaultAccessPolicy",
						"backup:GetBackupVaultNotifications",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:ListBackupVaults",
						"backup:ListRecoveryPointsByBackupVault",
						"backup:ListTags",
						"cloudformation:DescribeType",
						"cloudformation:ListTypes",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeReplicationInstances",
						"dms:DescribeReplicationSubnetGroups",
						"dms:ListTagsForResource",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"ecr:DescribeRepositories",
						"ecr:GetLifecyclePolicy",
						"ecr:GetRepositoryPolicy",
						"ecr:ListTagsForResource",
						"ecs:DescribeClusters",
						"ecs:DescribeServices",
						"ecs:DescribeTaskDefinition",
						"ecs:DescribeTaskSets",
						"ecs:ListClusters",
						"ecs:ListServices",
						"ecs:ListTagsForResource",
						"ecs:ListTaskDefinitions",
						"eks:DescribeCluster",
						"eks:DescribeNodegroup",
						"eks:ListClusters",
						"eks:ListNodegroups",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeCacheParameterGroups",
						"elasticache:DescribeCacheSubnetGroups",
						"elasticache:DescribeReplicationGroups",
						"elasticfilesystem:DescribeAccessPoints",
						"elasticfilesystem:DescribeBackupPolicy",
						"elasticfilesystem:DescribeFileSystemPolicy",
						"elasticfilesystem:DescribeFileSystems",
						"elasticfilesystem:DescribeLifecycleConfiguration",
						"elasticfilesystem:DescribeMountTargets",
						"elasticfilesystem:DescribeMountTargetSecurityGroups",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstances",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kinesis:DescribeStreamSummary",
						"kinesis:ListStreams",
						"kinesis:ListTagsForStream",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"logs:DescribeLogGroups",
						"organizations:DescribeOrganization",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"route53:GetHostedZone",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListResourceRecordSets",
						"route53:ListTagsForResource",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeCodeRepository",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListCodeRepositories",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"sagemaker:ListTags",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:describeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"ssm:ListDocuments",
						"storagegateway:ListGateways",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v24"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-06-07T23:01:42",
		"document": {
			"Statement": [
				{
					"Action": [
						"access-analyzer:GetAnalyzer",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListTagsForResource",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:DescribeBackupVault",
						"backup:DescribeRecoveryPoint",
						"backup:GetBackupPlan",
						"backup:GetBackupSelection",
						"backup:GetBackupVaultAccessPolicy",
						"backup:GetBackupVaultNotifications",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:ListBackupVaults",
						"backup:ListRecoveryPointsByBackupVault",
						"backup:ListTags",
						"cloudformation:DescribeType",
						"cloudformation:ListTypes",
						"cloudfront:ListDistributions",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeReplicationInstances",
						"dms:DescribeReplicationSubnetGroups",
						"dms:ListTagsForResource",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"ecr:DescribeRepositories",
						"ecr:GetLifecyclePolicy",
						"ecr:GetRepositoryPolicy",
						"ecr:ListTagsForResource",
						"ecs:DescribeClusters",
						"ecs:DescribeServices",
						"ecs:DescribeTaskDefinition",
						"ecs:DescribeTaskSets",
						"ecs:ListClusters",
						"ecs:ListServices",
						"ecs:ListTagsForResource",
						"ecs:ListTaskDefinitions",
						"eks:DescribeCluster",
						"eks:DescribeNodegroup",
						"eks:ListClusters",
						"eks:ListNodegroups",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeCacheParameterGroups",
						"elasticache:DescribeCacheSubnetGroups",
						"elasticache:DescribeReplicationGroups",
						"elasticache:ListTagsForResource",
						"elasticfilesystem:DescribeAccessPoints",
						"elasticfilesystem:DescribeBackupPolicy",
						"elasticfilesystem:DescribeFileSystemPolicy",
						"elasticfilesystem:DescribeFileSystems",
						"elasticfilesystem:DescribeLifecycleConfiguration",
						"elasticfilesystem:DescribeMountTargets",
						"elasticfilesystem:DescribeMountTargetSecurityGroups",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:DescribeStep",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:GetManagedScalingPolicy",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstanceFleets",
						"elasticmapreduce:ListInstanceGroups",
						"elasticmapreduce:ListInstances",
						"elasticmapreduce:ListSecurityConfigurations",
						"elasticmapreduce:ListSteps",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kinesis:DescribeStreamConsumer",
						"kinesis:DescribeStreamSummary",
						"kinesis:ListStreamConsumers",
						"kinesis:ListStreams",
						"kinesis:ListTagsForStream",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetFunctionCodeSigningConfig",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"lambda:ListVersionsByFunction",
						"logs:DescribeLogGroups",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:ListFirewalls",
						"organizations:DescribeOrganization",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListQueryLoggingConfigs",
						"route53:ListResourceRecordSets",
						"route53:ListTagsForResource",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeCodeRepository",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:ListCodeRepositories",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListNotebookInstances",
						"sagemaker:ListTags",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:DescribeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:DescribeDocumentPermission",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"ssm:ListDocuments",
						"storagegateway:ListGateways",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v25"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-07-27T22:31:53",
		"document": {
			"Statement": [
				{
					"Action": [
						"access-analyzer:GetAnalyzer",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListTagsForResource",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:DescribeBackupVault",
						"backup:DescribeRecoveryPoint",
						"backup:GetBackupPlan",
						"backup:GetBackupSelection",
						"backup:GetBackupVaultAccessPolicy",
						"backup:GetBackupVaultNotifications",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:ListBackupVaults",
						"backup:ListRecoveryPointsByBackupVault",
						"backup:ListTags",
						"cloudformation:DescribeType",
						"cloudformation:ListTypes",
						"cloudfront:ListDistributions",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeEventSubscriptions",
						"dms:DescribeReplicationInstances",
						"dms:DescribeReplicationSubnetGroups",
						"dms:ListTagsForResource",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:ListTagsForResource",
						"ecr:DescribeRepositories",
						"ecr:GetLifecyclePolicy",
						"ecr:GetRepositoryPolicy",
						"ecr:ListTagsForResource",
						"ecs:DescribeClusters",
						"ecs:DescribeServices",
						"ecs:DescribeTaskDefinition",
						"ecs:DescribeTaskSets",
						"ecs:ListClusters",
						"ecs:ListServices",
						"ecs:ListTagsForResource",
						"ecs:ListTaskDefinitions",
						"eks:DescribeCluster",
						"eks:DescribeNodegroup",
						"eks:ListClusters",
						"eks:ListNodegroups",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeCacheParameterGroups",
						"elasticache:DescribeCacheSubnetGroups",
						"elasticache:DescribeReplicationGroups",
						"elasticache:ListTagsForResource",
						"elasticfilesystem:DescribeAccessPoints",
						"elasticfilesystem:DescribeBackupPolicy",
						"elasticfilesystem:DescribeFileSystemPolicy",
						"elasticfilesystem:DescribeFileSystems",
						"elasticfilesystem:DescribeLifecycleConfiguration",
						"elasticfilesystem:DescribeMountTargets",
						"elasticfilesystem:DescribeMountTargetSecurityGroups",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:DescribeStep",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:GetManagedScalingPolicy",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstanceFleets",
						"elasticmapreduce:ListInstanceGroups",
						"elasticmapreduce:ListInstances",
						"elasticmapreduce:ListSecurityConfigurations",
						"elasticmapreduce:ListSteps",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"firehose:DescribeDeliveryStream",
						"firehose:ListDeliveryStreams",
						"firehose:ListTagsForDeliveryStream",
						"fsx:DescribeFileSystems",
						"globalaccelerator:DescribeAccelerator",
						"globalaccelerator:DescribeEndpointGroup",
						"globalaccelerator:DescribeListener",
						"globalaccelerator:ListAccelerators",
						"globalaccelerator:ListEndpointGroups",
						"globalaccelerator:ListListeners",
						"globalaccelerator:ListTagsForResource",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kafka:DescribeCluster",
						"kafka:ListClusters",
						"kinesis:DescribeStreamConsumer",
						"kinesis:DescribeStreamSummary",
						"kinesis:ListStreamConsumers",
						"kinesis:ListStreams",
						"kinesis:ListTagsForStream",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetFunctionCodeSigningConfig",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"lambda:ListVersionsByFunction",
						"logs:DescribeLogGroups",
						"logs:ListTagsLogGroup",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:ListFirewalls",
						"organizations:DescribeOrganization",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListQueryLoggingConfigs",
						"route53:ListResourceRecordSets",
						"route53:ListTagsForResource",
						"route53resolver:GetResolverEndpoint",
						"route53resolver:GetResolverRule",
						"route53resolver:GetResolverRuleAssociation",
						"route53resolver:ListResolverEndpointIpAddresses",
						"route53resolver:ListResolverEndpoints",
						"route53resolver:ListResolverRuleAssociations",
						"route53resolver:ListResolverRules",
						"route53resolver:ListTagsForResource",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeCodeRepository",
						"sagemaker:DescribeEndpoint",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeModel",
						"sagemaker:DescribeMonitoringSchedule",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:DescribeNotebookInstanceLifecycleConfig",
						"sagemaker:DescribeWorkteam",
						"sagemaker:ListCodeRepositories",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListEndpoints",
						"sagemaker:ListModels",
						"sagemaker:ListMonitoringSchedules",
						"sagemaker:ListNotebookInstanceLifecycleConfigs",
						"sagemaker:ListNotebookInstances",
						"sagemaker:ListTags",
						"sagemaker:ListWorkteams",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:DescribeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetSubscriptionAttributes",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListSubscriptionsByTopic",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:DescribeDocumentPermission",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"ssm:ListDocuments",
						"states:DescribeStateMachine",
						"states:ListStateMachines",
						"states:ListTagsForResource",
						"storagegateway:ListGateways",
						"storagegateway:ListTagsForResource",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v26"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-09-08T18:12:00",
		"document": {
			"Statement": [
				{
					"Action": [
						"access-analyzer:GetAnalyzer",
						"access-analyzer:ListAnalyzers",
						"access-analyzer:ListArchiveRules",
						"access-analyzer:ListTagsForResource",
						"acm:DescribeCertificate",
						"acm:ListCertificates",
						"acm:ListTagsForCertificate",
						"apigateway:GET",
						"application-autoscaling:DescribeScalableTargets",
						"application-autoscaling:DescribeScalingPolicies",
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeLaunchConfigurations",
						"autoscaling:DescribeLifecycleHooks",
						"autoscaling:DescribePolicies",
						"autoscaling:DescribeScheduledActions",
						"autoscaling:DescribeTags",
						"backup:DescribeBackupVault",
						"backup:DescribeRecoveryPoint",
						"backup:GetBackupPlan",
						"backup:GetBackupSelection",
						"backup:GetBackupVaultAccessPolicy",
						"backup:GetBackupVaultNotifications",
						"backup:ListBackupPlans",
						"backup:ListBackupSelections",
						"backup:ListBackupVaults",
						"backup:ListRecoveryPointsByBackupVault",
						"backup:ListTags",
						"cloudformation:DescribeType",
						"cloudformation:ListTypes",
						"cloudfront:ListDistributions",
						"cloudfront:ListTagsForResource",
						"cloudtrail:DescribeTrails",
						"cloudtrail:GetEventSelectors",
						"cloudtrail:GetTrailStatus",
						"cloudtrail:ListTags",
						"cloudwatch:DescribeAlarms",
						"codepipeline:GetPipeline",
						"codepipeline:GetPipelineState",
						"codepipeline:ListPipelines",
						"config:BatchGet*",
						"config:Describe*",
						"config:Get*",
						"config:List*",
						"config:Put*",
						"config:Select*",
						"dax:DescribeClusters",
						"dms:DescribeEventSubscriptions",
						"dms:DescribeReplicationInstances",
						"dms:DescribeReplicationSubnetGroups",
						"dms:ListTagsForResource",
						"dynamodb:DescribeContinuousBackups",
						"dynamodb:DescribeLimits",
						"dynamodb:DescribeTable",
						"dynamodb:ListTables",
						"dynamodb:ListTagsOfResource",
						"ec2:Describe*",
						"ec2:GetEbsEncryptionByDefault",
						"ecr-public:DescribeRepositories",
						"ecr-public:GetRepositoryCatalogData",
						"ecr-public:ListTagsForResource",
						"ecr:DescribeRepositories",
						"ecr:GetLifecyclePolicy",
						"ecr:GetRepositoryPolicy",
						"ecr:ListTagsForResource",
						"ecs:DescribeClusters",
						"ecs:DescribeServices",
						"ecs:DescribeTaskDefinition",
						"ecs:DescribeTaskSets",
						"ecs:ListClusters",
						"ecs:ListServices",
						"ecs:ListTagsForResource",
						"ecs:ListTaskDefinitions",
						"eks:DescribeCluster",
						"eks:DescribeNodegroup",
						"eks:ListClusters",
						"eks:ListNodegroups",
						"elasticache:DescribeCacheClusters",
						"elasticache:DescribeCacheParameterGroups",
						"elasticache:DescribeCacheSubnetGroups",
						"elasticache:DescribeReplicationGroups",
						"elasticache:DescribeSnapshots",
						"elasticache:ListTagsForResource",
						"elasticfilesystem:DescribeAccessPoints",
						"elasticfilesystem:DescribeBackupPolicy",
						"elasticfilesystem:DescribeFileSystemPolicy",
						"elasticfilesystem:DescribeFileSystems",
						"elasticfilesystem:DescribeLifecycleConfiguration",
						"elasticfilesystem:DescribeMountTargets",
						"elasticfilesystem:DescribeMountTargetSecurityGroups",
						"elasticloadbalancing:DescribeListeners",
						"elasticloadbalancing:DescribeLoadBalancerAttributes",
						"elasticloadbalancing:DescribeLoadBalancerPolicies",
						"elasticloadbalancing:DescribeLoadBalancers",
						"elasticloadbalancing:DescribeRules",
						"elasticloadbalancing:DescribeTags",
						"elasticmapreduce:DescribeCluster",
						"elasticmapreduce:DescribeSecurityConfiguration",
						"elasticmapreduce:DescribeStep",
						"elasticmapreduce:GetBlockPublicAccessConfiguration",
						"elasticmapreduce:GetManagedScalingPolicy",
						"elasticmapreduce:ListClusters",
						"elasticmapreduce:ListInstanceFleets",
						"elasticmapreduce:ListInstanceGroups",
						"elasticmapreduce:ListInstances",
						"elasticmapreduce:ListSecurityConfigurations",
						"elasticmapreduce:ListSteps",
						"es:DescribeElasticsearchDomain",
						"es:DescribeElasticsearchDomains",
						"es:ListDomainNames",
						"es:ListTags",
						"es:DescribeDomain",
						"es:DescribeDomains",
						"firehose:DescribeDeliveryStream",
						"firehose:ListDeliveryStreams",
						"firehose:ListTagsForDeliveryStream",
						"fsx:DescribeFileSystems",
						"globalaccelerator:DescribeAccelerator",
						"globalaccelerator:DescribeEndpointGroup",
						"globalaccelerator:DescribeListener",
						"globalaccelerator:ListAccelerators",
						"globalaccelerator:ListEndpointGroups",
						"globalaccelerator:ListListeners",
						"globalaccelerator:ListTagsForResource",
						"guardduty:GetDetector",
						"guardduty:GetFindings",
						"guardduty:GetMasterAccount",
						"guardduty:ListDetectors",
						"guardduty:ListFindings",
						"iam:GenerateCredentialReport",
						"iam:GetAccountAuthorizationDetails",
						"iam:GetAccountPasswordPolicy",
						"iam:GetAccountSummary",
						"iam:GetCredentialReport",
						"iam:GetGroup",
						"iam:GetGroupPolicy",
						"iam:GetPolicy",
						"iam:GetPolicyVersion",
						"iam:GetRole",
						"iam:GetRolePolicy",
						"iam:GetUser",
						"iam:GetUserPolicy",
						"iam:ListAttachedGroupPolicies",
						"iam:ListAttachedRolePolicies",
						"iam:ListAttachedUserPolicies",
						"iam:ListEntitiesForPolicy",
						"iam:ListGroupPolicies",
						"iam:ListGroupsForUser",
						"iam:ListInstanceProfilesForRole",
						"iam:ListPolicyVersions",
						"iam:ListRolePolicies",
						"iam:ListUserPolicies",
						"iam:ListVirtualMFADevices",
						"kafka:DescribeCluster",
						"kafka:ListClusters",
						"kinesis:DescribeStreamConsumer",
						"kinesis:DescribeStreamSummary",
						"kinesis:ListStreamConsumers",
						"kinesis:ListStreams",
						"kinesis:ListTagsForStream",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:GetKeyRotationStatus",
						"kms:ListKeys",
						"kms:ListResourceTags",
						"lambda:GetAlias",
						"lambda:GetFunction",
						"lambda:GetFunctionCodeSigningConfig",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"lambda:ListVersionsByFunction",
						"logs:DescribeLogGroups",
						"logs:ListTagsLogGroup",
						"network-firewall:DescribeLoggingConfiguration",
						"network-firewall:ListFirewalls",
						"organizations:DescribeOrganization",
						"rds:DescribeDBParameterGroups",
						"rds:DescribeDBClusters",
						"rds:DescribeDBClusterSnapshotAttributes",
						"rds:DescribeDBClusterSnapshots",
						"rds:DescribeDBEngineVersions",
						"rds:DescribeDBInstances",
						"rds:DescribeDBSecurityGroups",
						"rds:DescribeDBSnapshotAttributes",
						"rds:DescribeDBSnapshots",
						"rds:DescribeDBSubnetGroups",
						"rds:DescribeEventSubscriptions",
						"rds:ListTagsForResource",
						"rds:DescribeDBParameters",
						"redshift:DescribeClusterParameterGroups",
						"redshift:DescribeClusterParameters",
						"redshift:DescribeClusters",
						"redshift:DescribeClusterSecurityGroups",
						"redshift:DescribeClusterSnapshots",
						"redshift:DescribeClusterSubnetGroups",
						"redshift:DescribeEventSubscriptions",
						"redshift:DescribeLoggingStatus",
						"route53:GetHealthCheck",
						"route53:GetHostedZone",
						"route53:ListHealthChecks",
						"route53:ListHostedZones",
						"route53:ListHostedZonesByName",
						"route53:ListQueryLoggingConfigs",
						"route53:ListResourceRecordSets",
						"route53:ListTagsForResource",
						"route53resolver:GetResolverEndpoint",
						"route53resolver:GetResolverRule",
						"route53resolver:GetResolverRuleAssociation",
						"route53resolver:ListResolverEndpointIpAddresses",
						"route53resolver:ListResolverEndpoints",
						"route53resolver:ListResolverRuleAssociations",
						"route53resolver:ListResolverRules",
						"route53resolver:ListTagsForResource",
						"s3:GetAccelerateConfiguration",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketCORS",
						"s3:GetBucketLocation",
						"s3:GetBucketLogging",
						"s3:GetBucketNotification",
						"s3:GetBucketObjectLockConfiguration",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketRequestPayment",
						"s3:GetBucketTagging",
						"s3:GetBucketVersioning",
						"s3:GetBucketWebsite",
						"s3:GetEncryptionConfiguration",
						"s3:GetLifecycleConfiguration",
						"s3:GetReplicationConfiguration",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"s3:ListBucket",
						"sagemaker:DescribeCodeRepository",
						"sagemaker:DescribeEndpoint",
						"sagemaker:DescribeEndpointConfig",
						"sagemaker:DescribeModel",
						"sagemaker:DescribeMonitoringSchedule",
						"sagemaker:DescribeNotebookInstance",
						"sagemaker:DescribeNotebookInstanceLifecycleConfig",
						"sagemaker:DescribeWorkteam",
						"sagemaker:ListCodeRepositories",
						"sagemaker:ListEndpointConfigs",
						"sagemaker:ListEndpoints",
						"sagemaker:ListModels",
						"sagemaker:ListMonitoringSchedules",
						"sagemaker:ListNotebookInstanceLifecycleConfigs",
						"sagemaker:ListNotebookInstances",
						"sagemaker:ListTags",
						"sagemaker:ListWorkteams",
						"secretsmanager:ListSecrets",
						"secretsmanager:ListSecretVersionIds",
						"securityhub:DescribeHub",
						"shield:DescribeDRTAccess",
						"shield:DescribeProtection",
						"shield:DescribeSubscription",
						"sns:GetSubscriptionAttributes",
						"sns:GetTopicAttributes",
						"sns:ListSubscriptions",
						"sns:ListSubscriptionsByTopic",
						"sns:ListTagsForResource",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"sqs:ListQueueTags",
						"ssm:DescribeAutomationExecutions",
						"ssm:DescribeDocument",
						"ssm:DescribeDocumentPermission",
						"ssm:GetAutomationExecution",
						"ssm:GetDocument",
						"ssm:ListDocuments",
						"states:DescribeStateMachine",
						"states:ListStateMachines",
						"states:ListTagsForResource",
						"storagegateway:ListGateways",
						"storagegateway:ListTagsForResource",
						"storagegateway:ListVolumes",
						"support:DescribeCases",
						"tag:GetResources",
						"waf-regional:GetLoggingConfiguration",
						"waf-regional:GetWebACL",
						"waf-regional:GetWebACLForResource",
						"waf:GetLoggingConfiguration",
						"waf:GetWebACL",
						"wafv2:GetLoggingConfiguration"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJUCWFHNZER665LLQQ",
		"version_id": "v27"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2018-08-24T21:05:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAJZ7N545GUNUHNTYOM",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-07T00:40:56",
		"document": {
			"Statement": [
				{
					"Action": [
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4AHQ3ASNCX",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-23T17:04:25",
		"document": {
			"Statement": [
				{
					"Action": [
						"firehose:PutRecord",
						"firehose:PutRecordBatch"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"
					]
				},
				{
					"Action": "organizations:DescribeOrganization",
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4AHQ3ASNCX",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-07-25T21:38:05",
		"document": {
			"Statement": [
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:DescribeConfigRules"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/*"
				},
				{
					"Action": [
						"cloudformation:CreateStack",
						"cloudformation:DeleteStack",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetStackPolicy",
						"cloudformation:SetStackPolicy",
						"cloudformation:UpdateStack",
						"cloudformation:UpdateTerminationProtection",
						"cloudformation:ValidateTemplate"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stack/awsconfigconforms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4BCH3IIJPN",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-02T00:31:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:DescribeConfigRules"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"config:DescribeRemediationConfigurations",
						"config:DeleteRemediationConfiguration",
						"config:PutRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:remediation-configuration/aws-service-remediation-configuration/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "remediation.config.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:DescribeDocument",
						"ssm:GetDocument"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:PutObject",
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::awsconfigconforms*"
				},
				{
					"Action": [
						"cloudformation:CreateStack",
						"cloudformation:DeleteStack",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetStackPolicy",
						"cloudformation:SetStackPolicy",
						"cloudformation:UpdateStack",
						"cloudformation:UpdateTerminationProtection",
						"cloudformation:ValidateTemplate",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stack/awsconfigconforms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4BCH3IIJPN",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-10-17T22:16:14",
		"document": {
			"Statement": [
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:DescribeConfigRules"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"config:DescribeRemediationConfigurations",
						"config:DeleteRemediationConfiguration",
						"config:PutRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:remediation-configuration/aws-service-remediation-configuration/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "remediation.config.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:DescribeDocument",
						"ssm:GetDocument"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:PutObject",
						"s3:PutObjectAcl",
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::awsconfigconforms*"
				},
				{
					"Action": [
						"cloudformation:CreateStack",
						"cloudformation:DeleteStack",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetStackPolicy",
						"cloudformation:SetStackPolicy",
						"cloudformation:UpdateStack",
						"cloudformation:UpdateTerminationProtection",
						"cloudformation:ValidateTemplate",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stack/awsconfigconforms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4BCH3IIJPN",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-13T18:29:21",
		"document": {
			"Statement": [
				{
					"Action": [
						"config:PutConfigRule",
						"config:DeleteConfigRule",
						"config:DescribeConfigRules"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"config:DescribeRemediationConfigurations",
						"config:DeleteRemediationConfiguration",
						"config:PutRemediationConfigurations"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:config:*:*:remediation-configuration/aws-service-remediation-configuration/config-conforms.amazonaws.com*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/*"
				},
				{
					"Action": [
						"iam:GetRole"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringLike": {
							"iam:AWSServiceName": "remediation.config.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:DescribeDocument",
						"ssm:GetDocument"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:PutObject",
						"s3:PutObjectAcl",
						"s3:GetObject",
						"s3:GetBucketAcl"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::awsconfigconforms*"
				},
				{
					"Action": [
						"cloudformation:CreateStack",
						"cloudformation:DeleteStack",
						"cloudformation:DescribeStackEvents",
						"cloudformation:DescribeStackResource",
						"cloudformation:DescribeStackResources",
						"cloudformation:DescribeStacks",
						"cloudformation:GetStackPolicy",
						"cloudformation:SetStackPolicy",
						"cloudformation:UpdateStack",
						"cloudformation:UpdateTerminationProtection",
						"cloudformation:ValidateTemplate",
						"cloudformation:ListStackResources"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:cloudformation:*:*:stack/awsconfigconforms-*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4BCH3IIJPN",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-12-11T19:48:15",
		"document": {
			"Statement": [
				{
					"Action": [
						"imagebuilder:GetComponent",
						"imagebuilder:GetContainerRecipe",
						"ecr:GetAuthorizationToken",
						"ecr:BatchGetImage",
						"ecr:InitiateLayerUpload",
						"ecr:UploadLayerPart",
						"ecr:CompleteLayerUpload",
						"ecr:BatchCheckLayerAvailability",
						"ecr:GetDownloadUrlForLayer",
						"ecr:PutImage"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"kms:Decrypt"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:CalledVia": [
								"imagebuilder.amazonaws.com"
							],
							"kms:EncryptionContextKeys": "aws:imagebuilder:arn"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::ec2imagebuilder*"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4C32QNC6KD",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-12-02T17:13:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:ListAllMyBuckets",
						"s3:GetBucketAcl",
						"s3:GetBucketLocation",
						"s3:GetBucketPolicy",
						"iam:GetRole",
						"iam:ListRoles",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:ListGrants",
						"kms:ListKeyPolicies",
						"kms:ListKeys",
						"ec2:DescribeVpcs",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeByoipCidrs",
						"ec2:DescribeAddresses",
						"lambda:ListFunctions",
						"lambda:GetPolicy",
						"lambda:ListLayers",
						"lambda:ListLayerVersions",
						"lambda:GetLayerVersionPolicy",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"organizations:ListAWSServiceAccessForOrganization",
						"organizations:ListDelegatedAdministrators",
						"organizations:ListRoots",
						"organizations:ListParents",
						"organizations:ListChildren",
						"organizations:ListOrganizationalUnitsForParent",
						"organizations:ListAccountsForParent",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:DescribeOrganizationalUnit"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4CAIXDDRI2",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-03-02T15:55:03",
		"document": {
			"Statement": [
				{
					"Action": [
						"s3:GetBucketPublicAccessBlock",
						"s3:GetBucketPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:ListAllMyBuckets",
						"s3:GetBucketAcl",
						"s3:GetBucketLocation",
						"s3:GetBucketPolicy",
						"s3:ListAccessPoints",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"iam:GetRole",
						"iam:ListRoles",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:ListGrants",
						"kms:ListKeyPolicies",
						"kms:ListKeys",
						"ec2:DescribeVpcs",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeByoipCidrs",
						"ec2:DescribeAddresses",
						"lambda:ListFunctions",
						"lambda:GetPolicy",
						"lambda:ListLayers",
						"lambda:ListLayerVersions",
						"lambda:GetLayerVersionPolicy",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues",
						"organizations:ListAWSServiceAccessForOrganization",
						"organizations:ListDelegatedAdministrators",
						"organizations:ListRoots",
						"organizations:ListParents",
						"organizations:ListChildren",
						"organizations:ListOrganizationalUnitsForParent",
						"organizations:ListAccountsForParent",
						"organizations:ListAccounts",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:DescribeOrganizationalUnit"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4CAIXDDRI2",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-30T20:28:02",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeByoipCidrs",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeVpcs",
						"iam:GetRole",
						"iam:ListRoles",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:ListGrants",
						"kms:ListKeyPolicies",
						"kms:ListKeys",
						"lambda:GetLayerVersionPolicy",
						"lambda:GetPolicy",
						"lambda:ListFunctions",
						"lambda:ListLayers",
						"lambda:ListLayerVersions",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:DescribeOrganizationalUnit",
						"organizations:ListAccounts",
						"organizations:ListAccountsForParent",
						"organizations:ListAWSServiceAccessForOrganization",
						"organizations:ListChildren",
						"organizations:ListDelegatedAdministrators",
						"organizations:ListOrganizationalUnitsForParent",
						"organizations:ListParents",
						"organizations:ListRoots",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketLocation",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"sns:GetTopicAttributes",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4CAIXDDRI2",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-19T19:10:16",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeByoipCidrs",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeVpcs",
						"iam:GetRole",
						"iam:ListRoles",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:ListGrants",
						"kms:ListKeyPolicies",
						"kms:ListKeys",
						"lambda:GetLayerVersionPolicy",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"lambda:ListLayers",
						"lambda:ListLayerVersions",
						"lambda:ListVersionsByFunction",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:DescribeOrganizationalUnit",
						"organizations:ListAccounts",
						"organizations:ListAccountsForParent",
						"organizations:ListAWSServiceAccessForOrganization",
						"organizations:ListChildren",
						"organizations:ListDelegatedAdministrators",
						"organizations:ListOrganizationalUnitsForParent",
						"organizations:ListParents",
						"organizations:ListRoots",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketLocation",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"sns:GetTopicAttributes",
						"sns:ListTopics",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4CAIXDDRI2",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-11-24T20:58:37",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeByoipCidrs",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeVpcs",
						"iam:GetRole",
						"iam:ListRoles",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:ListGrants",
						"kms:ListKeyPolicies",
						"kms:ListKeys",
						"lambda:GetLayerVersionPolicy",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"lambda:ListLayers",
						"lambda:ListLayerVersions",
						"lambda:ListVersionsByFunction",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:DescribeOrganizationalUnit",
						"organizations:ListAccounts",
						"organizations:ListAccountsForParent",
						"organizations:ListAWSServiceAccessForOrganization",
						"organizations:ListChildren",
						"organizations:ListDelegatedAdministrators",
						"organizations:ListOrganizationalUnitsForParent",
						"organizations:ListParents",
						"organizations:ListRoots",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketLocation",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"sns:GetTopicAttributes",
						"sns:ListTopics",
						"secretsmanager:DescribeSecret",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:ListSecrets",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4CAIXDDRI2",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-09-02T16:49:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:DescribeAddresses",
						"ec2:DescribeByoipCidrs",
						"ec2:DescribeVpcEndpoints",
						"ec2:DescribeVpcs",
						"iam:GetRole",
						"iam:ListRoles",
						"kms:DescribeKey",
						"kms:GetKeyPolicy",
						"kms:ListGrants",
						"kms:ListKeyPolicies",
						"kms:ListKeys",
						"lambda:GetLayerVersionPolicy",
						"lambda:GetPolicy",
						"lambda:ListAliases",
						"lambda:ListFunctions",
						"lambda:ListLayers",
						"lambda:ListLayerVersions",
						"lambda:ListVersionsByFunction",
						"organizations:DescribeAccount",
						"organizations:DescribeOrganization",
						"organizations:DescribeOrganizationalUnit",
						"organizations:ListAccounts",
						"organizations:ListAccountsForParent",
						"organizations:ListAWSServiceAccessForOrganization",
						"organizations:ListChildren",
						"organizations:ListDelegatedAdministrators",
						"organizations:ListOrganizationalUnitsForParent",
						"organizations:ListParents",
						"organizations:ListRoots",
						"s3:DescribeMultiRegionAccessPointOperation",
						"s3:GetAccessPoint",
						"s3:GetAccessPointPolicy",
						"s3:GetAccessPointPolicyStatus",
						"s3:GetAccountPublicAccessBlock",
						"s3:GetBucketAcl",
						"s3:GetBucketLocation",
						"s3:GetBucketPolicyStatus",
						"s3:GetBucketPolicy",
						"s3:GetBucketPublicAccessBlock",
						"s3:GetMultiRegionAccessPoint",
						"s3:GetMultiRegionAccessPointPolicy",
						"s3:GetMultiRegionAccessPointPolicyStatus",
						"s3:ListAccessPoints",
						"s3:ListAllMyBuckets",
						"s3:ListMultiRegionAccessPoints",
						"sns:GetTopicAttributes",
						"sns:ListTopics",
						"secretsmanager:DescribeSecret",
						"secretsmanager:GetResourcePolicy",
						"secretsmanager:ListSecrets",
						"sqs:GetQueueAttributes",
						"sqs:ListQueues"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4CAIXDDRI2",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-12-01T19:08:23",
		"document": {
			"Statement": [
				{
					"Action": [
						"imagebuilder:GetComponent"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"kms:Decrypt"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"kms:EncryptionContextKeys": "aws:imagebuilder:arn"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::ec2imagebuilder*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4EJC2UPLYL",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-15T17:44:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"imagebuilder:GetComponent"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"kms:Decrypt"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"kms:EncryptionContextKeys": "aws:imagebuilder:arn"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::ec2imagebuilder*"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4EJC2UPLYL",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-27T16:40:50",
		"document": {
			"Statement": [
				{
					"Action": [
						"imagebuilder:GetComponent"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"kms:Decrypt"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:CalledVia": [
								"imagebuilder.amazonaws.com"
							],
							"kms:EncryptionContextKeys": "aws:imagebuilder:arn"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"s3:GetObject"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:s3:::ec2imagebuilder*"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4EJC2UPLYL",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-05-22T20:44:17",
		"document": {
			"Statement": [
				{
					"Action": [
						"support:CreateCase",
						"support:DescribeCases"
					],
					"Effect": "Allow",
					"Resource": "*",
					"Sid": "Stmt1555536735573"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4FCG7EVJIR",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-06-24T14:52:56",
		"document": {
			"Statement": [
				{
					"Action": [
						"support:*"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4FCG7EVJIR",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-02-21T20:10:47",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:CreateNetworkInterfacePermission",
						"iam:ListAttachedRolePolicies",
						"ec2:CreateSecurityGroup"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteSecurityGroup",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:AuthorizeSecurityGroupIngress"
					],
					"Condition": {
						"ForAnyValue:StringLike": {
							"ec2:ResourceTag/Name": "eks-cluster-sg*"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:security-group/*"
				},
				{
					"Action": [
						"ec2:CreateTags",
						"ec2:DeleteTags"
					],
					"Condition": {
						"ForAnyValue:StringLike": {
							"aws:TagKeys": [
								"kubernetes.io/cluster/*"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:vpc/*",
						"arn:aws:ec2:*:*:subnet/*"
					]
				},
				{
					"Action": [
						"ec2:CreateTags",
						"ec2:DeleteTags"
					],
					"Condition": {
						"ForAnyValue:StringLike": {
							"aws:RequestTag/Name": "eks-cluster-sg*",
							"aws:TagKeys": [
								"kubernetes.io/cluster/*"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:security-group/*"
					]
				},
				{
					"Action": "route53:AssociateVPCWithHostedZone",
					"Effect": "Allow",
					"Resource": "arn:aws:route53:::hostedzone/*"
				},
				{
					"Action": "logs:CreateLogGroup",
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*"
				},
				{
					"Action": "logs:PutLogEvents",
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*:*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4KZBLSP26Y",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-05-27T19:30:19",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DeleteNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:DescribeInstances",
						"ec2:DescribeNetworkInterfaces",
						"ec2:DescribeSecurityGroups",
						"ec2:DescribeSubnets",
						"ec2:DescribeVpcs",
						"ec2:CreateNetworkInterfacePermission",
						"iam:ListAttachedRolePolicies",
						"ec2:CreateSecurityGroup"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteSecurityGroup",
						"ec2:RevokeSecurityGroupIngress",
						"ec2:AuthorizeSecurityGroupIngress"
					],
					"Condition": {
						"ForAnyValue:StringLike": {
							"ec2:ResourceTag/Name": "eks-cluster-sg*"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:security-group/*"
				},
				{
					"Action": [
						"ec2:CreateTags",
						"ec2:DeleteTags"
					],
					"Condition": {
						"ForAnyValue:StringLike": {
							"aws:TagKeys": [
								"kubernetes.io/cluster/*"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:vpc/*",
						"arn:aws:ec2:*:*:subnet/*"
					]
				},
				{
					"Action": [
						"ec2:CreateTags",
						"ec2:DeleteTags"
					],
					"Condition": {
						"ForAnyValue:StringLike": {
							"aws:RequestTag/Name": "eks-cluster-sg*",
							"aws:TagKeys": [
								"kubernetes.io/cluster/*"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:security-group/*"
					]
				},
				{
					"Action": "route53:AssociateVPCWithHostedZone",
					"Effect": "Allow",
					"Resource": "arn:aws:route53:::hostedzone/*"
				},
				{
					"Action": "logs:CreateLogGroup",
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:DescribeLogStreams"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*"
				},
				{
					"Action": "logs:PutLogEvents",
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*:*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4KZBLSP26Y",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-11-29T22:02:13",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:CreateTags",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*"
					]
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"StringLike": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v1"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-12-02T02:04:36",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v2"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2019-12-02T06:18:40",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v3"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-02-28T19:03:21",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v4"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-01T19:42:50",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ec2:*:*:instance/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v5"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-04-16T19:45:25",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v6"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-06-01T17:40:18",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": "ec2.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v7"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-15T21:23:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"autoscaling:DescribeAutoScalingGroups",
						"autoscaling:DescribeAutoScalingInstances",
						"autoscaling:SuspendProcesses"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:DetachInstances",
						"autoscaling:DeleteAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"autoscaling:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"autoscaling:CreateAutoScalingGroup"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ec2:RunInstances",
					"Condition": {
						"ArnLike": {
							"ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:DeleteLaunchTemplate",
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "autoscaling.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v8"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-07-30T21:37:31",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"kms:Encrypt",
						"kms:Decrypt",
						"kms:ReEncryptFrom",
						"kms:ReEncryptTo",
						"kms:GenerateDataKeyWithoutPlaintext",
						"kms:DescribeKey"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"kms:EncryptionContextKeys": [
								"aws:ebs:id"
							]
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "kms:CreateGrant",
					"Condition": {
						"Bool": {
							"kms:GrantIsForAWSResource": true
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v9"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-31T20:49:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"kms:Encrypt",
						"kms:Decrypt",
						"kms:ReEncryptFrom",
						"kms:ReEncryptTo",
						"kms:GenerateDataKeyWithoutPlaintext",
						"kms:DescribeKey"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"kms:EncryptionContextKeys": [
								"aws:ebs:id"
							]
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "kms:CreateGrant",
					"Condition": {
						"Bool": {
							"kms:GrantIsForAWSResource": true
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "sts:AssumeRole",
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v10"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-09-28T18:13:06",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:ModifySnapshotAttribute"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::snapshot/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"kms:Encrypt",
						"kms:Decrypt",
						"kms:ReEncryptFrom",
						"kms:ReEncryptTo",
						"kms:GenerateDataKeyWithoutPlaintext",
						"kms:DescribeKey"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"kms:EncryptionContextKeys": [
								"aws:ebs:id"
							]
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "kms:CreateGrant",
					"Condition": {
						"Bool": {
							"kms:GrantIsForAWSResource": true
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "sts:AssumeRole",
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v11"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-12-04T23:27:05",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*::snapshot/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:ModifySnapshotAttribute"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::snapshot/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"kms:Encrypt",
						"kms:Decrypt",
						"kms:ReEncryptFrom",
						"kms:ReEncryptTo",
						"kms:GenerateDataKeyWithoutPlaintext",
						"kms:DescribeKey"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"kms:EncryptionContextKeys": [
								"aws:ebs:id"
							]
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "kms:CreateGrant",
					"Condition": {
						"Bool": {
							"kms:GrantIsForAWSResource": true
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "sts:AssumeRole",
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				},
				{
					"Action": [
						"ec2:CreateLaunchTemplateVersion",
						"ec2:DescribeLaunchTemplates",
						"ec2:ModifyLaunchTemplate"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v12"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-08-11T18:07:10",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*::snapshot/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:ModifySnapshotAttribute"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::snapshot/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus",
						"ssm:DescribeAssociationExecutions"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"kms:Encrypt",
						"kms:Decrypt",
						"kms:ReEncryptFrom",
						"kms:ReEncryptTo",
						"kms:GenerateDataKeyWithoutPlaintext",
						"kms:DescribeKey"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"kms:EncryptionContextKeys": [
								"aws:ebs:id"
							]
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "kms:CreateGrant",
					"Condition": {
						"Bool": {
							"kms:GrantIsForAWSResource": true
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "sts:AssumeRole",
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				},
				{
					"Action": [
						"ec2:CreateLaunchTemplateVersion",
						"ec2:DescribeLaunchTemplates",
						"ec2:ModifyLaunchTemplate"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": false,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v13"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2021-12-06T20:55:41",
		"document": {
			"Statement": [
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*::snapshot/*",
						"arn:aws:ec2:*:*:subnet/*",
						"arn:aws:ec2:*:*:network-interface/*",
						"arn:aws:ec2:*:*:security-group/*",
						"arn:aws:ec2:*:*:key-pair/*"
					]
				},
				{
					"Action": [
						"ec2:RunInstances"
					],
					"Condition": {
						"StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:volume/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "iam:PassRole",
					"Condition": {
						"StringEquals": {
							"iam:PassedToService": [
								"ec2.amazonaws.com",
								"ec2.amazonaws.com.cn",
								"vmie.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:StopInstances",
						"ec2:TerminateInstances"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CopyImage",
						"ec2:CreateImage",
						"ec2:CreateLaunchTemplate",
						"ec2:DeregisterImage",
						"ec2:DescribeImages",
						"ec2:DescribeInstanceAttribute",
						"ec2:DescribeInstanceStatus",
						"ec2:DescribeInstances",
						"ec2:DescribeInstanceTypeOfferings",
						"ec2:DescribeInstanceTypes",
						"ec2:DescribeSubnets",
						"ec2:DescribeTags",
						"ec2:ModifyImageAttribute",
						"ec2:DescribeImportImageTasks",
						"ec2:DescribeExportImageTasks"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:ModifySnapshotAttribute"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::snapshot/*"
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*::image/*",
						"arn:aws:ec2:*:*:export-image-task/*"
					]
				},
				{
					"Action": [
						"ec2:CreateTags"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"aws:RequestTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"license-manager:UpdateLicenseSpecificationsForResource"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"sns:Publish"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ssm:ListCommands",
						"ssm:ListCommandInvocations",
						"ssm:AddTagsToResource",
						"ssm:DescribeInstanceInformation",
						"ssm:GetAutomationExecution",
						"ssm:StopAutomationExecution",
						"ssm:ListInventoryEntries",
						"ssm:SendAutomationSignal",
						"ssm:DescribeInstanceAssociationsStatus",
						"ssm:DescribeAssociationExecutions"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "ssm:SendCommand",
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
						"arn:aws:ssm:*:*:document/AWS-RunShellScript",
						"arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
						"arn:aws:s3:::*"
					]
				},
				{
					"Action": [
						"ssm:SendCommand"
					],
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ssm:resourceTag/CreatedBy": [
								"EC2 Image Builder"
							]
						}
					},
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": "ssm:StartAutomationExecution",
					"Effect": "Allow",
					"Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
				},
				{
					"Action": [
						"ssm:CreateAssociation",
						"ssm:DeleteAssociation"
					],
					"Effect": "Allow",
					"Resource": [
						"arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
						"arn:aws:ssm:*:*:association/*",
						"arn:aws:ec2:*:*:instance/*"
					]
				},
				{
					"Action": [
						"kms:Encrypt",
						"kms:Decrypt",
						"kms:ReEncryptFrom",
						"kms:ReEncryptTo",
						"kms:GenerateDataKeyWithoutPlaintext",
						"kms:DescribeKey"
					],
					"Condition": {
						"ForAllValues:StringEquals": {
							"kms:EncryptionContextKeys": [
								"aws:ebs:id"
							]
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "kms:CreateGrant",
					"Condition": {
						"Bool": {
							"kms:GrantIsForAWSResource": true
						},
						"StringLike": {
							"kms:ViaService": [
								"ec2.*.amazonaws.com"
							]
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": "sts:AssumeRole",
					"Effect": "Allow",
					"Resource": "arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"
				},
				{
					"Action": [
						"logs:CreateLogStream",
						"logs:CreateLogGroup",
						"logs:PutLogEvents"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
				},
				{
					"Action": [
						"ec2:CreateLaunchTemplateVersion",
						"ec2:DescribeLaunchTemplates",
						"ec2:ModifyLaunchTemplate"
					],
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:ExportImage"
					],
					"Condition": {
						"StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*::image/*"
				},
				{
					"Action": [
						"ec2:ExportImage"
					],
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:export-image-task/*"
				},
				{
					"Action": [
						"ec2:CancelExportTask"
					],
					"Condition": {
						"StringEquals": {
							"ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
						}
					},
					"Effect": "Allow",
					"Resource": "arn:aws:ec2:*:*:export-image-task/*"
				},
				{
					"Action": "iam:CreateServiceLinkedRole",
					"Condition": {
						"StringEquals": {
							"iam:AWSServiceName": "ssm.amazonaws.com"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4NE22WISEW",
		"version_id": "v14"
	},
	{
		"cq_id": "[unstable_column]",
		"create_date": "2020-08-12T00:55:34",
		"document": {
			"Statement": [
				{
					"Action": "ec2:CreateNetworkInterfacePermission",
					"Condition": {
						"ForAnyValue:StringEquals": {
							"ec2:ResourceTag/eks:eni:owner": "eks-vpc-resource-controller"
						}
					},
					"Effect": "Allow",
					"Resource": "*"
				},
				{
					"Action": [
						"ec2:CreateNetworkInterface",
						"ec2:DetachNetworkInterface",
						"ec2:ModifyNetworkInterfaceAttribute",
						"ec2:DeleteNetworkInterface",
						"ec2:AttachNetworkInterface",
						"ec2:UnassignPrivateIpAddresses",
						"ec2:AssignPrivateIpAddresses"
					],
					"Effect": "Allow",
					"Resource": "*"
				}
			],
			"Version": "2012-10-17"
		},
		"is_default_version": true,
		"meta": "[unstable_column]",
		"policy_cq_id": "[unstable_column]",
		"policy_id": "ANPAZKAPJZG4PBOFT2NNA",
		"version_id": "v1"
	}
]